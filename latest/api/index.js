Index.PACKAGES = {"ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct" : [{"name" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCFlow", "shortDescription" : "Created by mth on 4\/23\/17.", "object" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCFlow$.html", "members_class" : [{"label" : "countdownVitality", "tail" : "(): CFBCFlow", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCFlow.countdownVitality", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCFlow.html#countdownVitality:ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCFlow", "kind" : "def"}, {"label" : "removable", "tail" : ": Boolean", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCFlow.removable", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCFlow.html#removable:Boolean", "kind" : "val"}, {"label" : "key", "tail" : ": (VertexId, VertexId)", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCFlow.key", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCFlow.html#key:(org.apache.spark.graphx.VertexId,org.apache.spark.graphx.VertexId)", "kind" : "val"}, {"label" : "supplyValue", "tail" : "(vertexId: VertexId): Int", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCFlow.supplyValue", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCFlow.html#supplyValue(vertexId:org.apache.spark.graphx.VertexId):Int", "kind" : "def"}, {"member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCFlow#<init>", "error" : "unsupported entity"}, {"label" : "aliveThrough", "tail" : ": Int", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCFlow.aliveThrough", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCFlow.html#aliveThrough:Int", "kind" : "val"}, {"label" : "completed", "tail" : ": Boolean", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCFlow.completed", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCFlow.html#completed:Boolean", "kind" : "val"}, {"label" : "potential", "tail" : ": Double", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCFlow.potential", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCFlow.html#potential:Double", "kind" : "val"}, {"label" : "dst", "tail" : ": VertexId", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCFlow.dst", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCFlow.html#dst:org.apache.spark.graphx.VertexId", "kind" : "val"}, {"label" : "src", "tail" : ": VertexId", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCFlow.src", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCFlow.html#src:org.apache.spark.graphx.VertexId", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCFlow.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCFlow.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCFlow.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCFlow.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCFlow.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCFlow.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCFlow.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCFlow.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCFlow.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCFlow.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCFlow.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCFlow.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCFlow.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCFlow.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCFlow.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCFlow.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCFlow.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCFlow.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCFlow.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "empty", "tail" : "(key: (VertexId, VertexId)): CFBCFlow", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCFlow.empty", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCFlow$.html#empty(key:(org.apache.spark.graphx.VertexId,org.apache.spark.graphx.VertexId)):ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCFlow", "kind" : "def"}, {"label" : "updatePotential", "tail" : "(flow: CFBCFlow, newPotential: Double, eps: Double): CFBCFlow", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCFlow.updatePotential", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCFlow$.html#updatePotential(flow:ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCFlow,newPotential:Double,eps:Double):ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCFlow", "kind" : "def"}, {"label" : "apply", "tail" : "(src: VertexId, dst: VertexId, potential: Double, completed: Boolean, aliveThrough: Int): CFBCFlow", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCFlow.apply", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCFlow$.html#apply(src:org.apache.spark.graphx.VertexId,dst:org.apache.spark.graphx.VertexId,potential:Double,completed:Boolean,aliveThrough:Int):ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCFlow", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCFlow$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCFlow$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCFlow$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCFlow$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCFlow$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCFlow$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCFlow$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCFlow$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCFlow$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCFlow$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCFlow$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCFlow$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCFlow$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCFlow$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCFlow$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCFlow$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCFlow$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCFlow$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCFlow$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCFlow.html", "kind" : "class"}, {"name" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCNeighbourFlow", "shortDescription" : "Created by mth on 5\/2\/17.", "object" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCNeighbourFlow$.html", "members_class" : [{"label" : "key", "tail" : ": (VertexId, VertexId)", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCNeighbourFlow.key", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCNeighbourFlow.html#key:(org.apache.spark.graphx.VertexId,org.apache.spark.graphx.VertexId)", "kind" : "val"}, {"member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCNeighbourFlow#<init>", "error" : "unsupported entity"}, {"label" : "anyCompleted", "tail" : ": Boolean", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCNeighbourFlow.anyCompleted", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCNeighbourFlow.html#anyCompleted:Boolean", "kind" : "val"}, {"label" : "allCompleted", "tail" : ": Boolean", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCNeighbourFlow.allCompleted", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCNeighbourFlow.html#allCompleted:Boolean", "kind" : "val"}, {"label" : "numberOfFlows", "tail" : ": Int", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCNeighbourFlow.numberOfFlows", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCNeighbourFlow.html#numberOfFlows:Int", "kind" : "val"}, {"label" : "sumOfDifferences", "tail" : ": Double", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCNeighbourFlow.sumOfDifferences", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCNeighbourFlow.html#sumOfDifferences:Double", "kind" : "val"}, {"label" : "sumOfPotential", "tail" : ": Double", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCNeighbourFlow.sumOfPotential", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCNeighbourFlow.html#sumOfPotential:Double", "kind" : "val"}, {"label" : "dst", "tail" : ": VertexId", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCNeighbourFlow.dst", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCNeighbourFlow.html#dst:org.apache.spark.graphx.VertexId", "kind" : "val"}, {"label" : "src", "tail" : ": VertexId", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCNeighbourFlow.src", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCNeighbourFlow.html#src:org.apache.spark.graphx.VertexId", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCNeighbourFlow.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCNeighbourFlow.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCNeighbourFlow.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCNeighbourFlow.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCNeighbourFlow.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCNeighbourFlow.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCNeighbourFlow.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCNeighbourFlow.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCNeighbourFlow.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCNeighbourFlow.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCNeighbourFlow.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCNeighbourFlow.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCNeighbourFlow.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCNeighbourFlow.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCNeighbourFlow.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCNeighbourFlow.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCNeighbourFlow.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCNeighbourFlow.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCNeighbourFlow.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "NeighbourFlowStats", "tail" : "", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCNeighbourFlow.NeighbourFlowStats", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCNeighbourFlow$.html#NeighbourFlowStats", "kind" : "object"}, {"label" : "NeighbourFlowStats", "tail" : "", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCNeighbourFlow.NeighbourFlowStats", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCNeighbourFlow$.html#NeighbourFlowStatsextendsSerializable", "kind" : "class"}, {"label" : "apply", "tail" : "(flows: Iterable[CFBCFlow], vertex: CFBCVertex): CFBCNeighbourFlow", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCNeighbourFlow.apply", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCNeighbourFlow$.html#apply(flows:Iterable[ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCFlow],vertex:ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCVertex):ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCNeighbourFlow", "kind" : "def"}, {"label" : "apply", "tail" : "(key: (VertexId, VertexId)): CFBCNeighbourFlow", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCNeighbourFlow.apply", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCNeighbourFlow$.html#apply(key:(org.apache.spark.graphx.VertexId,org.apache.spark.graphx.VertexId)):ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCNeighbourFlow", "kind" : "def"}, {"label" : "apply", "tail" : "(src: VertexId, dst: VertexId, sumOfPotential: Double, sumOfDifferences: Double, numberOfFlows: Int, allCompleted: Boolean, anyCompleted: Boolean): CFBCNeighbourFlow", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCNeighbourFlow.apply", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCNeighbourFlow$.html#apply(src:org.apache.spark.graphx.VertexId,dst:org.apache.spark.graphx.VertexId,sumOfPotential:Double,sumOfDifferences:Double,numberOfFlows:Int,allCompleted:Boolean,anyCompleted:Boolean):ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCNeighbourFlow", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCNeighbourFlow$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCNeighbourFlow$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCNeighbourFlow$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCNeighbourFlow$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCNeighbourFlow$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCNeighbourFlow$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCNeighbourFlow$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCNeighbourFlow$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCNeighbourFlow$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCNeighbourFlow$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCNeighbourFlow$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCNeighbourFlow$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCNeighbourFlow$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCNeighbourFlow$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCNeighbourFlow$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCNeighbourFlow$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCNeighbourFlow$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCNeighbourFlow$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCNeighbourFlow$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCNeighbourFlow.html", "kind" : "class"}, {"name" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCVertex", "shortDescription" : "Created by mth on 4\/23\/17.", "object" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex$.html", "members_class" : [{"label" : "applyNeighbourFlows", "tail" : "(nbhFlows: Iterable[CFBCNeighbourFlow]): CFBCVertex", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCVertex.applyNeighbourFlows", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex.html#applyNeighbourFlows(nbhFlows:Iterable[ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCNeighbourFlow]):ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCVertex", "kind" : "def"}, {"label" : "removeFlows", "tail" : "(toRemove: Seq[CFBCFlow]): CFBCVertex", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCVertex.removeFlows", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex.html#removeFlows(toRemove:Seq[ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCFlow]):ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCVertex", "kind" : "def"}, {"label" : "updateFlows", "tail" : "(fls: Array[CFBCFlow]): CFBCVertex", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCVertex.updateFlows", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex.html#updateFlows(fls:Array[ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCFlow]):ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCVertex", "kind" : "def"}, {"label" : "addNewFlow", "tail" : "(flow: CFBCFlow): CFBCVertex", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCVertex.addNewFlow", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex.html#addNewFlow(flow:ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCFlow):ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCVertex", "kind" : "def"}, {"label" : "updateBC", "tail" : "(currentFlowing: Seq[Double]): CFBCVertex", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCVertex.updateBC", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex.html#updateBC(currentFlowing:Seq[Double]):ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCVertex", "kind" : "def"}, {"label" : "updateBC", "tail" : "(currentFlowing: Double): CFBCVertex", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCVertex.updateBC", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex.html#updateBC(currentFlowing:Double):ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCVertex", "kind" : "def"}, {"label" : "getFlow", "tail" : "(key: (VertexId, VertexId)): CFBCFlow", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCVertex.getFlow", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex.html#getFlow(key:(org.apache.spark.graphx.VertexId,org.apache.spark.graphx.VertexId)):ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCFlow", "kind" : "def"}, {"label" : "isFinalized", "tail" : "(k: Int): Boolean", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCVertex.isFinalized", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex.html#isFinalized(k:Int):Boolean", "kind" : "def"}, {"label" : "neighboursFlows", "tail" : ": Iterable[CFBCNeighbourFlow]", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCVertex.neighboursFlows", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex.html#neighboursFlows:Iterable[ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCNeighbourFlow]", "kind" : "val"}, {"label" : "vertexFlows", "tail" : ": Array[CFBCFlow]", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCVertex.vertexFlows", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex.html#vertexFlows:Array[ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCFlow]", "kind" : "val"}, {"label" : "flowsMap", "tail" : ": Map[(VertexId, VertexId), CFBCFlow]", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCVertex.flowsMap", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex.html#flowsMap:scala.collection.immutable.Map[(org.apache.spark.graphx.VertexId,org.apache.spark.graphx.VertexId),ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCFlow]", "kind" : "lazy val"}, {"label" : "vertexPhi", "tail" : ": Int", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCVertex.vertexPhi", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex.html#vertexPhi:Int", "kind" : "lazy val"}, {"label" : "availableSamples", "tail" : ": Array[VertexId]", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCVertex.availableSamples", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex.html#availableSamples:Array[org.apache.spark.graphx.VertexId]", "kind" : "lazy val"}, {"label" : "relatedFlows", "tail" : ": Array[CFBCFlow]", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCVertex.relatedFlows", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex.html#relatedFlows:Array[ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCFlow]", "kind" : "lazy val"}, {"member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCVertex#<init>", "error" : "unsupported entity"}, {"label" : "processedFlows", "tail" : ": Int", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCVertex.processedFlows", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex.html#processedFlows:Int", "kind" : "val"}, {"label" : "flows", "tail" : ": (Array[CFBCFlow], Iterable[CFBCNeighbourFlow])", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCVertex.flows", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex.html#flows:(Array[ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCFlow],Iterable[ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCNeighbourFlow])", "kind" : "val"}, {"label" : "sampleVertices", "tail" : ": Array[VertexId]", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCVertex.sampleVertices", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex.html#sampleVertices:Array[org.apache.spark.graphx.VertexId]", "kind" : "val"}, {"label" : "bc", "tail" : ": Double", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCVertex.bc", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex.html#bc:Double", "kind" : "val"}, {"label" : "degree", "tail" : ": Int", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCVertex.degree", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex.html#degree:Int", "kind" : "val"}, {"label" : "id", "tail" : ": VertexId", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCVertex.id", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex.html#id:org.apache.spark.graphx.VertexId", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(id: VertexId, degree: Int, bc: Double, sampleVertices: Array[VertexId], flows: (Array[CFBCFlow], Iterable[CFBCNeighbourFlow])): CFBCVertex", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCVertex.apply", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex$.html#apply(id:org.apache.spark.graphx.VertexId,degree:Int,bc:Double,sampleVertices:Array[org.apache.spark.graphx.VertexId],flows:(Array[ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCFlow],Iterable[ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCNeighbourFlow])):ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCVertex", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/struct\/CFBCVertex.html", "kind" : "class"}], "ml.sparkling.graph.operators.algorithms.coarsening" : [], "ml.sparkling.graph.loaders" : [], "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.processor" : [{"name" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.processor.NearlyOptimalBCProcessor", "shortDescription" : "Created by mth on 5\/7\/17.", "members_class" : [{"label" : "sendMessages", "tail" : "(round: Int)(ctx: EdgeContext[NOVertex, ED, List[NOMessage[VertexId]]]): Unit", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.processor.NearlyOptimalBCProcessor.sendMessages", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/processor\/NearlyOptimalBCProcessor.html#sendMessages(round:Int)(ctx:org.apache.spark.graphx.EdgeContext[ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOVertex,ED,List[ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.NOMessage[org.apache.spark.graphx.VertexId]]]):Unit", "kind" : "def"}, {"label" : "updateBfsMap", "tail" : "(vertexId: VertexId, map: Map[VertexId, NOBFSVertex], messages: List[NOMessage[VertexId]]): Map[VertexId, NOBFSVertex]", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.processor.NearlyOptimalBCProcessor.updateBfsMap", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/processor\/NearlyOptimalBCProcessor.html#updateBfsMap(vertexId:org.apache.spark.graphx.VertexId,map:Map[org.apache.spark.graphx.VertexId,ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOBFSVertex],messages:List[ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.NOMessage[org.apache.spark.graphx.VertexId]]):scala.collection.immutable.Map[org.apache.spark.graphx.VertexId,ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOBFSVertex]", "kind" : "def"}, {"label" : "updateSuccSet", "tail" : "(vertex: NOVertex, pointer: Option[DFSPointer]): Option[Array[VertexId]]", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.processor.NearlyOptimalBCProcessor.updateSuccSet", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/processor\/NearlyOptimalBCProcessor.html#updateSuccSet(vertex:ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOVertex,pointer:Option[ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.DFSPointer]):Option[Array[org.apache.spark.graphx.VertexId]]", "kind" : "def"}, {"label" : "updateDFSPointer", "tail" : "(vertex: NOVertex, pointerMsg: Option[DFSPointer]): Option[DFSPointer]", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.processor.NearlyOptimalBCProcessor.updateDFSPointer", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/processor\/NearlyOptimalBCProcessor.html#updateDFSPointer(vertex:ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOVertex,pointerMsg:Option[ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.DFSPointer]):Option[ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.DFSPointer]", "kind" : "def"}, {"label" : "applyMessages", "tail" : "(round: Int)(vertexId: VertexId, vertex: NOVertex, messages: Option[List[NOMessage[VertexId]]]): NOVertex", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.processor.NearlyOptimalBCProcessor.applyMessages", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/processor\/NearlyOptimalBCProcessor.html#applyMessages(round:Int)(vertexId:org.apache.spark.graphx.VertexId,vertex:ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOVertex,messages:Option[List[ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.NOMessage[org.apache.spark.graphx.VertexId]]]):ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOVertex", "kind" : "def"}, {"label" : "prepareVertices", "tail" : "(startVertex: VertexId)(vertex: NOVertex): NOVertex", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.processor.NearlyOptimalBCProcessor.prepareVertices", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/processor\/NearlyOptimalBCProcessor.html#prepareVertices(startVertex:org.apache.spark.graphx.VertexId)(vertex:ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOVertex):ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOVertex", "kind" : "def"}, {"label" : "initGraph", "tail" : ": Graph[NOVertex, ED]", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.processor.NearlyOptimalBCProcessor.initGraph", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/processor\/NearlyOptimalBCProcessor.html#initGraph:org.apache.spark.graphx.Graph[ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOVertex,ED]", "kind" : "lazy val"}, {"label" : "initVertexId", "tail" : ": VertexId", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.processor.NearlyOptimalBCProcessor.initVertexId", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/processor\/NearlyOptimalBCProcessor.html#initVertexId:org.apache.spark.graphx.VertexId", "kind" : "val"}, {"member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.processor.NearlyOptimalBCProcessor#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/processor\/NearlyOptimalBCProcessor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/processor\/NearlyOptimalBCProcessor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/processor\/NearlyOptimalBCProcessor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/processor\/NearlyOptimalBCProcessor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/processor\/NearlyOptimalBCProcessor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/processor\/NearlyOptimalBCProcessor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/processor\/NearlyOptimalBCProcessor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/processor\/NearlyOptimalBCProcessor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/processor\/NearlyOptimalBCProcessor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/processor\/NearlyOptimalBCProcessor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/processor\/NearlyOptimalBCProcessor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/processor\/NearlyOptimalBCProcessor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/processor\/NearlyOptimalBCProcessor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/processor\/NearlyOptimalBCProcessor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/processor\/NearlyOptimalBCProcessor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/processor\/NearlyOptimalBCProcessor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/processor\/NearlyOptimalBCProcessor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/processor\/NearlyOptimalBCProcessor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/processor\/NearlyOptimalBCProcessor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/processor\/NearlyOptimalBCProcessor.html", "kind" : "class"}, {"name" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.processor.NOInitBFSProcessor", "shortDescription" : "Created by mth on 5\/7\/17.", "members_class" : [{"label" : "sendMessage", "tail" : "(triplet: EdgeTriplet[NOVertex, ED]): Iterator[(VertexId, List[NOMessage[VertexId]])]", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.processor.NOInitBFSProcessor.sendMessage", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/processor\/NOInitBFSProcessor.html#sendMessage(triplet:org.apache.spark.graphx.EdgeTriplet[ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOVertex,ED]):Iterator[(org.apache.spark.graphx.VertexId,List[ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.NOMessage[org.apache.spark.graphx.VertexId]])]", "kind" : "def"}, {"label" : "mergeMessages", "tail" : "(msg1: List[NOMessage[VertexId]], msg2: List[NOMessage[VertexId]]): List[NOMessage[VertexId]]", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.processor.NOInitBFSProcessor.mergeMessages", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/processor\/NOInitBFSProcessor.html#mergeMessages(msg1:List[ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.NOMessage[org.apache.spark.graphx.VertexId]],msg2:List[ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.NOMessage[org.apache.spark.graphx.VertexId]]):List[ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.NOMessage[org.apache.spark.graphx.VertexId]]", "kind" : "def"}, {"label" : "initialMessage", "tail" : "(): List[NOMessage[VertexId]]", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.processor.NOInitBFSProcessor.initialMessage", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/processor\/NOInitBFSProcessor.html#initialMessage:List[ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.NOMessage[org.apache.spark.graphx.VertexId]]", "kind" : "def"}, {"member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.processor.NOInitBFSProcessor#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/processor\/NOInitBFSProcessor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/processor\/NOInitBFSProcessor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/processor\/NOInitBFSProcessor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/processor\/NOInitBFSProcessor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/processor\/NOInitBFSProcessor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/processor\/NOInitBFSProcessor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/processor\/NOInitBFSProcessor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/processor\/NOInitBFSProcessor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/processor\/NOInitBFSProcessor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/processor\/NOInitBFSProcessor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/processor\/NOInitBFSProcessor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/processor\/NOInitBFSProcessor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/processor\/NOInitBFSProcessor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/processor\/NOInitBFSProcessor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/processor\/NOInitBFSProcessor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/processor\/NOInitBFSProcessor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/processor\/NOInitBFSProcessor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/processor\/NOInitBFSProcessor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/processor\/NOInitBFSProcessor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/processor\/NOInitBFSProcessor.html", "kind" : "class"}], "ml.sparkling.graph.operators.measures.vertex.hits" : [{"name" : "ml.sparkling.graph.operators.measures.vertex.hits.Hits", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "object" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/hits\/Hits$.html", "members_object" : [{"label" : "compute", "tail" : "(graph: Graph[VD, ED], vertexMeasureConfiguration: VertexMeasureConfiguration[VD, ED])(arg0: ClassTag[VD], arg1: ClassTag[ED], num: Numeric[ED]): Graph[(Double, Double), ED]", "member" : "ml.sparkling.graph.operators.measures.vertex.hits.Hits.compute", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/hits\/Hits$.html#compute[VD,ED](graph:org.apache.spark.graphx.Graph[VD,ED],vertexMeasureConfiguration:ml.sparkling.graph.api.operators.measures.VertexMeasureConfiguration[VD,ED])(implicitevidence$3:scala.reflect.ClassTag[VD],implicitevidence$4:scala.reflect.ClassTag[ED],implicitnum:Numeric[ED]):org.apache.spark.graphx.Graph[(Double,Double),ED]", "kind" : "def"}, {"label" : "sumHubAuthTuples", "tail" : "(t1: (Double, Double), t2: (Double, Double)): (Double, Double)", "member" : "ml.sparkling.graph.operators.measures.vertex.hits.Hits.sumHubAuthTuples", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/hits\/Hits$.html#sumHubAuthTuples(t1:(Double,Double),t2:(Double,Double)):(Double,Double)", "kind" : "def"}, {"label" : "normalizeHubAuthBy", "tail" : "(denominator: (Double, Double))(vId: VertexId, data: (Double, Double)): (Double, Double)", "member" : "ml.sparkling.graph.operators.measures.vertex.hits.Hits.normalizeHubAuthBy", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/hits\/Hits$.html#normalizeHubAuthBy(denominator:(Double,Double))(vId:org.apache.spark.graphx.VertexId,data:(Double,Double)):(Double,Double)", "kind" : "def"}, {"label" : "computeBasic", "tail" : "(graph: Graph[VD, ED], continuePredicate: ContinuePredicate, normalize: Boolean)(arg0: ClassTag[VD], arg1: ClassTag[ED]): Graph[(Double, Double), ED]", "member" : "ml.sparkling.graph.operators.measures.vertex.hits.Hits.computeBasic", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/hits\/Hits$.html#computeBasic[VD,ED](graph:org.apache.spark.graphx.Graph[VD,ED],continuePredicate:ml.sparkling.graph.operators.measures.vertex.hits.HitsUtils.ContinuePredicate,normalize:Boolean)(implicitevidence$1:scala.reflect.ClassTag[VD],implicitevidence$2:scala.reflect.ClassTag[ED]):org.apache.spark.graphx.Graph[(Double,Double),ED]", "kind" : "def"}, {"label" : "compute", "tail" : "(graph: Graph[VD, ED])(arg0: ClassTag[VD], arg1: ClassTag[ED], num: Numeric[ED]): Graph[(Double, Double), ED]", "member" : "ml.sparkling.graph.api.operators.measures.VertexMeasure.compute", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/hits\/Hits$.html#compute[VD,ED](graph:org.apache.spark.graphx.Graph[VD,ED])(implicitevidence$1:scala.reflect.ClassTag[VD],implicitevidence$2:scala.reflect.ClassTag[ED],implicitnum:Numeric[ED]):org.apache.spark.graphx.Graph[OV,ED]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/hits\/Hits$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/hits\/Hits$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/hits\/Hits$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/hits\/Hits$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/hits\/Hits$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/hits\/Hits$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/hits\/Hits$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/hits\/Hits$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/hits\/Hits$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/hits\/Hits$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/hits\/Hits$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/hits\/Hits$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/hits\/Hits$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/hits\/Hits$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/hits\/Hits$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/hits\/Hits$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/hits\/Hits$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/hits\/Hits$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/hits\/Hits$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ml.sparkling.graph.operators.measures.vertex.hits.HitsUtils", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "object" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/hits\/HitsUtils$.html", "members_object" : [{"label" : "convergenceAndIterationPredicate", "tail" : "(delta: Double, maxIteration: Long)(iteration: Long, oldValues: (Double, Double), newValues: (Double, Double)): Boolean", "member" : "ml.sparkling.graph.operators.measures.vertex.hits.HitsUtils.convergenceAndIterationPredicate", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/hits\/HitsUtils$.html#convergenceAndIterationPredicate(delta:Double,maxIteration:Long)(iteration:Long,oldValues:(Double,Double),newValues:(Double,Double)):Boolean", "kind" : "def"}, {"label" : "ContinuePredicate", "tail" : "", "member" : "ml.sparkling.graph.operators.measures.vertex.hits.HitsUtils.ContinuePredicate", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/hits\/HitsUtils$.html#ContinuePredicate=(Long,(Double,Double),(Double,Double))=>Boolean", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/hits\/HitsUtils$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/hits\/HitsUtils$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/hits\/HitsUtils$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/hits\/HitsUtils$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/hits\/HitsUtils$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/hits\/HitsUtils$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/hits\/HitsUtils$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/hits\/HitsUtils$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/hits\/HitsUtils$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/hits\/HitsUtils$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/hits\/HitsUtils$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/hits\/HitsUtils$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/hits\/HitsUtils$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/hits\/HitsUtils$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/hits\/HitsUtils$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/hits\/HitsUtils$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/hits\/HitsUtils$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/hits\/HitsUtils$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/hits\/HitsUtils$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "ml.sparkling.graph.operators.algorithms.random.ctrw.struct" : [{"name" : "ml.sparkling.graph.operators.algorithms.random.ctrw.struct.CTRWMessage", "shortDescription" : "Created by mth on 4\/13\/17.", "object" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWMessage$.html", "members_class" : [{"member" : "ml.sparkling.graph.operators.algorithms.random.ctrw.struct.CTRWMessage#<init>", "error" : "unsupported entity"}, {"label" : "nextVertex", "tail" : ": Option[VertexId]", "member" : "ml.sparkling.graph.operators.algorithms.random.ctrw.struct.CTRWMessage.nextVertex", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWMessage.html#nextVertex:Option[org.apache.spark.graphx.VertexId]", "kind" : "val"}, {"label" : "temp", "tail" : ": Double", "member" : "ml.sparkling.graph.operators.algorithms.random.ctrw.struct.CTRWMessage.temp", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWMessage.html#temp:Double", "kind" : "val"}, {"label" : "src", "tail" : ": VertexId", "member" : "ml.sparkling.graph.operators.algorithms.random.ctrw.struct.CTRWMessage.src", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWMessage.html#src:org.apache.spark.graphx.VertexId", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWMessage.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWMessage.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWMessage.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWMessage.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWMessage.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "unapply", "tail" : "(arg: CTRWMessage): Option[(VertexId, Double, Option[VertexId])]", "member" : "ml.sparkling.graph.operators.algorithms.random.ctrw.struct.CTRWMessage.unapply", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWMessage$.html#unapply(arg:ml.sparkling.graph.operators.algorithms.random.ctrw.struct.CTRWMessage):Option[(org.apache.spark.graphx.VertexId,Double,Option[org.apache.spark.graphx.VertexId])]", "kind" : "def"}, {"label" : "apply", "tail" : "(src: VertexId, temp: Double, nextVertex: Option[VertexId]): CTRWMessage", "member" : "ml.sparkling.graph.operators.algorithms.random.ctrw.struct.CTRWMessage.apply", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWMessage$.html#apply(src:org.apache.spark.graphx.VertexId,temp:Double,nextVertex:Option[org.apache.spark.graphx.VertexId]):ml.sparkling.graph.operators.algorithms.random.ctrw.struct.CTRWMessage", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWMessage$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWMessage$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWMessage$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWMessage$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWMessage$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWMessage$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWMessage$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWMessage$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWMessage$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWMessage$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWMessage$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWMessage$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWMessage$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWMessage$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWMessage$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWMessage$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWMessage$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWMessage$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWMessage$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWMessage.html", "kind" : "class"}, {"name" : "ml.sparkling.graph.operators.algorithms.random.ctrw.struct.CTRWVertex", "shortDescription" : "Created by mth on 4\/13\/17.", "object" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWVertex$.html", "members_class" : [{"label" : "degree", "tail" : ": Int", "member" : "ml.sparkling.graph.operators.algorithms.random.ctrw.struct.CTRWVertex.degree", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWVertex.html#degree:Int", "kind" : "val"}, {"member" : "ml.sparkling.graph.operators.algorithms.random.ctrw.struct.CTRWVertex#<init>", "error" : "unsupported entity"}, {"label" : "initialized", "tail" : ": Boolean", "member" : "ml.sparkling.graph.operators.algorithms.random.ctrw.struct.CTRWVertex.initialized", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWVertex.html#initialized:Boolean", "kind" : "val"}, {"label" : "messages", "tail" : ": Array[CTRWMessage]", "member" : "ml.sparkling.graph.operators.algorithms.random.ctrw.struct.CTRWVertex.messages", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWVertex.html#messages:Array[ml.sparkling.graph.operators.algorithms.random.ctrw.struct.CTRWMessage]", "kind" : "val"}, {"label" : "neighbours", "tail" : ": Array[VertexId]", "member" : "ml.sparkling.graph.operators.algorithms.random.ctrw.struct.CTRWVertex.neighbours", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWVertex.html#neighbours:Array[org.apache.spark.graphx.VertexId]", "kind" : "val"}, {"label" : "id", "tail" : ": VertexId", "member" : "ml.sparkling.graph.operators.algorithms.random.ctrw.struct.CTRWVertex.id", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWVertex.html#id:org.apache.spark.graphx.VertexId", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWVertex.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWVertex.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWVertex.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWVertex.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWVertex.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWVertex.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWVertex.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWVertex.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWVertex.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWVertex.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWVertex.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWVertex.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWVertex.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWVertex.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWVertex.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWVertex.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWVertex.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWVertex.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWVertex.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "unapply", "tail" : "(arg: CTRWVertex): Option[(VertexId, Array[VertexId], Array[CTRWMessage], Boolean)]", "member" : "ml.sparkling.graph.operators.algorithms.random.ctrw.struct.CTRWVertex.unapply", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWVertex$.html#unapply(arg:ml.sparkling.graph.operators.algorithms.random.ctrw.struct.CTRWVertex):Option[(org.apache.spark.graphx.VertexId,Array[org.apache.spark.graphx.VertexId],Array[ml.sparkling.graph.operators.algorithms.random.ctrw.struct.CTRWMessage],Boolean)]", "kind" : "def"}, {"label" : "apply", "tail" : "(id: VertexId, neighbours: Array[VertexId], messages: Array[CTRWMessage], initialized: Boolean): CTRWVertex", "member" : "ml.sparkling.graph.operators.algorithms.random.ctrw.struct.CTRWVertex.apply", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWVertex$.html#apply(id:org.apache.spark.graphx.VertexId,neighbours:Array[org.apache.spark.graphx.VertexId],messages:Array[ml.sparkling.graph.operators.algorithms.random.ctrw.struct.CTRWMessage],initialized:Boolean):ml.sparkling.graph.operators.algorithms.random.ctrw.struct.CTRWVertex", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWVertex$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWVertex$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWVertex$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWVertex$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWVertex$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWVertex$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWVertex$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWVertex$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWVertex$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWVertex$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWVertex$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWVertex$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWVertex$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWVertex$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWVertex$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWVertex$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWVertex$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWVertex$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWVertex$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/struct\/CTRWVertex.html", "kind" : "class"}], "ml.sparkling.graph" : [], "ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.processor" : [{"name" : "ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.processor.EdmondsBCProcessor", "shortDescription" : "Created by mth on 3\/15\/17.", "members_class" : [{"label" : "sendMessage", "tail" : "(triplet: EdgeTriplet[EdmondsVertex, ED]): Iterator[(VertexId, EdmondsMessage)]", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.processor.EdmondsBCProcessor.sendMessage", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/processor\/EdmondsBCProcessor.html#sendMessage(triplet:org.apache.spark.graphx.EdgeTriplet[ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.struct.EdmondsVertex,ED]):Iterator[(org.apache.spark.graphx.VertexId,ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.struct.messages.EdmondsMessage)]", "kind" : "def"}, {"label" : "mergeMessages", "tail" : "(msg1: EdmondsMessage, msg2: EdmondsMessage): EdmondsMessage", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.processor.EdmondsBCProcessor.mergeMessages", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/processor\/EdmondsBCProcessor.html#mergeMessages(msg1:ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.struct.messages.EdmondsMessage,msg2:ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.struct.messages.EdmondsMessage):ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.struct.messages.EdmondsMessage", "kind" : "def"}, {"label" : "initialMessage", "tail" : "(): EdmondsMessage", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.processor.EdmondsBCProcessor.initialMessage", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/processor\/EdmondsBCProcessor.html#initialMessage:ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.struct.messages.EdmondsMessage", "kind" : "def"}, {"member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.processor.EdmondsBCProcessor#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/processor\/EdmondsBCProcessor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/processor\/EdmondsBCProcessor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/processor\/EdmondsBCProcessor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/processor\/EdmondsBCProcessor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/processor\/EdmondsBCProcessor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/processor\/EdmondsBCProcessor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/processor\/EdmondsBCProcessor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/processor\/EdmondsBCProcessor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/processor\/EdmondsBCProcessor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/processor\/EdmondsBCProcessor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/processor\/EdmondsBCProcessor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/processor\/EdmondsBCProcessor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/processor\/EdmondsBCProcessor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/processor\/EdmondsBCProcessor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/processor\/EdmondsBCProcessor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/processor\/EdmondsBCProcessor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/processor\/EdmondsBCProcessor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/processor\/EdmondsBCProcessor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/processor\/EdmondsBCProcessor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/processor\/EdmondsBCProcessor.html", "kind" : "class"}], "ml.sparkling.graph.api.operators.algorithms.link" : [{"name" : "ml.sparkling.graph.api.operators.algorithms.link.MeasureBasedLnkPredictor", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/link\/MeasureBasedLnkPredictor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/link\/MeasureBasedLnkPredictor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/link\/MeasureBasedLnkPredictor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/link\/MeasureBasedLnkPredictor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/link\/MeasureBasedLnkPredictor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/link\/MeasureBasedLnkPredictor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/link\/MeasureBasedLnkPredictor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/link\/MeasureBasedLnkPredictor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/link\/MeasureBasedLnkPredictor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/link\/MeasureBasedLnkPredictor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/link\/MeasureBasedLnkPredictor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/link\/MeasureBasedLnkPredictor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/link\/MeasureBasedLnkPredictor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/link\/MeasureBasedLnkPredictor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/link\/MeasureBasedLnkPredictor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/link\/MeasureBasedLnkPredictor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/link\/MeasureBasedLnkPredictor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/link\/MeasureBasedLnkPredictor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/link\/MeasureBasedLnkPredictor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "predictLinks", "tail" : "(graph: Graph[V, E], edgeMeasure: EdgeMeasure[EO, EV], threshold: EO, treatAsUndirected: Boolean)(arg0: ClassTag[V], arg1: ClassTag[E], arg2: ClassTag[EV], arg3: ClassTag[EO], num: Numeric[EO]): RDD[(VertexId, VertexId)]", "member" : "ml.sparkling.graph.api.operators.algorithms.link.MeasureBasedLnkPredictor.predictLinks", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/link\/MeasureBasedLnkPredictor.html#predictLinks[V,E,EV,EO](graph:org.apache.spark.graphx.Graph[V,E],edgeMeasure:ml.sparkling.graph.api.operators.measures.EdgeMeasure[EO,EV],threshold:EO,treatAsUndirected:Boolean)(implicitevidence$1:scala.reflect.ClassTag[V],implicitevidence$2:scala.reflect.ClassTag[E],implicitevidence$3:scala.reflect.ClassTag[EV],implicitevidence$4:scala.reflect.ClassTag[EO],implicitnum:Numeric[EO]):org.apache.spark.rdd.RDD[(org.apache.spark.graphx.VertexId,org.apache.spark.graphx.VertexId)]", "kind" : "abstract def"}], "shortDescription" : "Trait for basic link prediction.", "trait" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/link\/MeasureBasedLnkPredictor.html", "kind" : "trait"}], "ml.sparkling.graph.operators.algorithms" : [], "ml.sparkling.graph.operators.algorithms.coarsening.labelpropagation" : [{"name" : "ml.sparkling.graph.operators.algorithms.coarsening.labelpropagation.ChangedStats", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: ChangedStats): ChangedStats", "member" : "ml.sparkling.graph.operators.algorithms.coarsening.labelpropagation.ChangedStats.+", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/ChangedStats.html#+(other:ml.sparkling.graph.operators.algorithms.coarsening.labelpropagation.ChangedStats):ml.sparkling.graph.operators.algorithms.coarsening.labelpropagation.ChangedStats", "kind" : "def"}, {"member" : "ml.sparkling.graph.operators.algorithms.coarsening.labelpropagation.ChangedStats#<init>", "error" : "unsupported entity"}, {"label" : "notChanged", "tail" : ": Long", "member" : "ml.sparkling.graph.operators.algorithms.coarsening.labelpropagation.ChangedStats.notChanged", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/ChangedStats.html#notChanged:Long", "kind" : "val"}, {"label" : "changed", "tail" : ": Long", "member" : "ml.sparkling.graph.operators.algorithms.coarsening.labelpropagation.ChangedStats.changed", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/ChangedStats.html#changed:Long", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/ChangedStats.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/ChangedStats.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/ChangedStats.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/ChangedStats.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/ChangedStats.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/ChangedStats.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/ChangedStats.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/ChangedStats.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/ChangedStats.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/ChangedStats.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/ChangedStats.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/ChangedStats.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/ChangedStats.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/ChangedStats.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/ChangedStats.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/ChangedStats.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/ChangedStats.html", "kind" : "case class"}, {"name" : "ml.sparkling.graph.operators.algorithms.coarsening.labelpropagation.ChangedStatsAgregator", "shortDescription" : "", "object" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/ChangedStatsAgregator$.html", "members_object" : [{"label" : "add", "tail" : "(b1: ChangedStats, b2: ChangedStats): ChangedStats", "member" : "ml.sparkling.graph.operators.algorithms.coarsening.labelpropagation.ChangedStatsAgregator.add", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/ChangedStatsAgregator$.html#add(b1:ml.sparkling.graph.operators.algorithms.coarsening.labelpropagation.ChangedStats,b2:ml.sparkling.graph.operators.algorithms.coarsening.labelpropagation.ChangedStats):ml.sparkling.graph.operators.algorithms.coarsening.labelpropagation.ChangedStats", "kind" : "def"}, {"label" : "add", "tail" : "(b1: ChangedStats, b2: VertexWrapper): ChangedStats", "member" : "ml.sparkling.graph.operators.algorithms.coarsening.labelpropagation.ChangedStatsAgregator.add", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/ChangedStatsAgregator$.html#add(b1:ml.sparkling.graph.operators.algorithms.coarsening.labelpropagation.ChangedStats,b2:ml.sparkling.graph.operators.algorithms.coarsening.labelpropagation.VertexWrapper):ml.sparkling.graph.operators.algorithms.coarsening.labelpropagation.ChangedStats", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/ChangedStatsAgregator$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/ChangedStatsAgregator$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/ChangedStatsAgregator$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/ChangedStatsAgregator$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/ChangedStatsAgregator$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/ChangedStatsAgregator$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/ChangedStatsAgregator$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/ChangedStatsAgregator$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/ChangedStatsAgregator$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/ChangedStatsAgregator$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/ChangedStatsAgregator$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/ChangedStatsAgregator$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/ChangedStatsAgregator$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/ChangedStatsAgregator$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/ChangedStatsAgregator$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/ChangedStatsAgregator$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/ChangedStatsAgregator$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ml.sparkling.graph.operators.algorithms.coarsening.labelpropagation.LPCoarsening", "shortDescription" : "", "object" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/LPCoarsening$.html", "members_object" : [{"label" : "coarse", "tail" : "(graph: Graph[VD, ED], treatAsUndirected: Boolean, checkpointingFrequency: Int, edgeValueSelector: EdgeValueSelector)(arg0: ClassTag[VD], arg1: ClassTag[ED]): Graph[Component, ED]", "member" : "ml.sparkling.graph.operators.algorithms.coarsening.labelpropagation.LPCoarsening.coarse", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/LPCoarsening$.html#coarse[VD,ED](graph:org.apache.spark.graphx.Graph[VD,ED],treatAsUndirected:Boolean,checkpointingFrequency:Int,edgeValueSelector:ml.sparkling.graph.api.operators.algorithms.coarsening.CoarseningAlgorithm.EdgeValueSelector)(implicitevidence$1:scala.reflect.ClassTag[VD],implicitevidence$2:scala.reflect.ClassTag[ED]):org.apache.spark.graphx.Graph[ml.sparkling.graph.api.operators.algorithms.coarsening.CoarseningAlgorithm.Component,ED]", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "ml.sparkling.graph.operators.algorithms.coarsening.labelpropagation.LPCoarsening.logger", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/LPCoarsening$.html#logger:org.apache.log4j.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/LPCoarsening$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/LPCoarsening$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/LPCoarsening$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/LPCoarsening$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/LPCoarsening$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/LPCoarsening$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/LPCoarsening$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/LPCoarsening$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/LPCoarsening$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/LPCoarsening$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/LPCoarsening$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/LPCoarsening$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/LPCoarsening$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/LPCoarsening$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/LPCoarsening$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/LPCoarsening$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/LPCoarsening$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ml.sparkling.graph.operators.algorithms.coarsening.labelpropagation.ToNewId", "shortDescription" : "", "object" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/ToNewId$.html", "members_object" : [{"label" : "apply", "tail" : "(id: VertexId, vertexWrapper: VertexWrapper): VertexId", "member" : "ml.sparkling.graph.operators.algorithms.coarsening.labelpropagation.ToNewId.apply", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/ToNewId$.html#apply(id:org.apache.spark.graphx.VertexId,vertexWrapper:ml.sparkling.graph.operators.algorithms.coarsening.labelpropagation.VertexWrapper):org.apache.spark.graphx.VertexId", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/ToNewId$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/ToNewId$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/ToNewId$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/ToNewId$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/ToNewId$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/ToNewId$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/ToNewId$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/ToNewId$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/ToNewId$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/ToNewId$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/ToNewId$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/ToNewId$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/ToNewId$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/ToNewId$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/ToNewId$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/ToNewId$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/ToNewId$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ml.sparkling.graph.operators.algorithms.coarsening.labelpropagation.VertexWrapper", "shortDescription" : "Created by  Roman Bartusiak <riomus@gmail.com> on 06.02.17.", "members_case class" : [{"member" : "ml.sparkling.graph.operators.algorithms.coarsening.labelpropagation.VertexWrapper#<init>", "error" : "unsupported entity"}, {"label" : "changed", "tail" : ": Boolean", "member" : "ml.sparkling.graph.operators.algorithms.coarsening.labelpropagation.VertexWrapper.changed", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/VertexWrapper.html#changed:Boolean", "kind" : "val"}, {"label" : "beforeBeforeCurrent", "tail" : ": VertexId", "member" : "ml.sparkling.graph.operators.algorithms.coarsening.labelpropagation.VertexWrapper.beforeBeforeCurrent", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/VertexWrapper.html#beforeBeforeCurrent:org.apache.spark.graphx.VertexId", "kind" : "val"}, {"label" : "beforeCurrentId", "tail" : ": VertexId", "member" : "ml.sparkling.graph.operators.algorithms.coarsening.labelpropagation.VertexWrapper.beforeCurrentId", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/VertexWrapper.html#beforeCurrentId:org.apache.spark.graphx.VertexId", "kind" : "val"}, {"label" : "currentId", "tail" : ": VertexId", "member" : "ml.sparkling.graph.operators.algorithms.coarsening.labelpropagation.VertexWrapper.currentId", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/VertexWrapper.html#currentId:org.apache.spark.graphx.VertexId", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/VertexWrapper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/VertexWrapper.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/VertexWrapper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/VertexWrapper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/VertexWrapper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/VertexWrapper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/VertexWrapper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/VertexWrapper.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/VertexWrapper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/VertexWrapper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/VertexWrapper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/VertexWrapper.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/VertexWrapper.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/VertexWrapper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/VertexWrapper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/VertexWrapper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ml\/sparkling\/graph\/operators\/algorithms\/coarsening\/labelpropagation\/VertexWrapper.html", "kind" : "case class"}], "ml.sparkling.graph.operators.measures.utils" : [{"name" : "ml.sparkling.graph.operators.measures.utils.CollectionsUtils", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "object" : "ml\/sparkling\/graph\/operators\/measures\/utils\/CollectionsUtils$.html", "members_object" : [{"label" : "intersect", "tail" : "(neighbours1: JSet[JLong], neighbours2: JSet[JLong]): Set[JLong]", "member" : "ml.sparkling.graph.operators.measures.utils.CollectionsUtils.intersect", "link" : "ml\/sparkling\/graph\/operators\/measures\/utils\/CollectionsUtils$.html#intersect(neighbours1:ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.JSet[ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.JLong],neighbours2:ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.JSet[ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.JLong]):scala.collection.mutable.Set[ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.JLong]", "kind" : "def"}, {"label" : "intersectSize", "tail" : "(neighbours1: JSet[JLong], neighbours2: JSet[JLong]): Int", "member" : "ml.sparkling.graph.operators.measures.utils.CollectionsUtils.intersectSize", "link" : "ml\/sparkling\/graph\/operators\/measures\/utils\/CollectionsUtils$.html#intersectSize(neighbours1:ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.JSet[ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.JLong],neighbours2:ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.JSet[ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.JLong]):Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/measures\/utils\/CollectionsUtils$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/measures\/utils\/CollectionsUtils$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/measures\/utils\/CollectionsUtils$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/measures\/utils\/CollectionsUtils$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/measures\/utils\/CollectionsUtils$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/measures\/utils\/CollectionsUtils$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/measures\/utils\/CollectionsUtils$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/utils\/CollectionsUtils$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/utils\/CollectionsUtils$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/utils\/CollectionsUtils$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/measures\/utils\/CollectionsUtils$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/measures\/utils\/CollectionsUtils$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/measures\/utils\/CollectionsUtils$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/measures\/utils\/CollectionsUtils$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/measures\/utils\/CollectionsUtils$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/measures\/utils\/CollectionsUtils$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/measures\/utils\/CollectionsUtils$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/utils\/CollectionsUtils$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/utils\/CollectionsUtils$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ml.sparkling.graph.operators.measures.utils.NeighboursUtils", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "object" : "ml\/sparkling\/graph\/operators\/measures\/utils\/NeighboursUtils$.html", "members_object" : [{"label" : "getWithSecondLevelNeighbours", "tail" : "(graph: Graph[VD, ED], treatAsUndirected: Boolean, vertexPredicate: SimpleVertexPredicate)(arg0: ClassTag[VD], arg1: ClassTag[ED]): Graph[NeighboursMap, ED]", "member" : "ml.sparkling.graph.operators.measures.utils.NeighboursUtils.getWithSecondLevelNeighbours", "link" : "ml\/sparkling\/graph\/operators\/measures\/utils\/NeighboursUtils$.html#getWithSecondLevelNeighbours[VD,ED](graph:org.apache.spark.graphx.Graph[VD,ED],treatAsUndirected:Boolean,vertexPredicate:ml.sparkling.graph.api.operators.IterativeComputation.SimpleVertexPredicate)(implicitevidence$3:scala.reflect.ClassTag[VD],implicitevidence$4:scala.reflect.ClassTag[ED]):org.apache.spark.graphx.Graph[ml.sparkling.graph.operators.measures.utils.NeighboursUtils.NeighboursMap,ED]", "kind" : "def"}, {"label" : "getWithNeighbours", "tail" : "(graph: Graph[VD, ED], treatAsUndirected: Boolean, vertexPredicate: SimpleVertexPredicate)(arg0: ClassTag[VD], arg1: ClassTag[ED]): Graph[NeighbourSet, ED]", "member" : "ml.sparkling.graph.operators.measures.utils.NeighboursUtils.getWithNeighbours", "link" : "ml\/sparkling\/graph\/operators\/measures\/utils\/NeighboursUtils$.html#getWithNeighbours[VD,ED](graph:org.apache.spark.graphx.Graph[VD,ED],treatAsUndirected:Boolean,vertexPredicate:ml.sparkling.graph.api.operators.IterativeComputation.SimpleVertexPredicate)(implicitevidence$1:scala.reflect.ClassTag[VD],implicitevidence$2:scala.reflect.ClassTag[ED]):org.apache.spark.graphx.Graph[ml.sparkling.graph.operators.measures.utils.NeighboursUtils.NeighbourSet,ED]", "kind" : "def"}, {"label" : "NeighboursMap", "tail" : "", "member" : "ml.sparkling.graph.operators.measures.utils.NeighboursUtils.NeighboursMap", "link" : "ml\/sparkling\/graph\/operators\/measures\/utils\/NeighboursUtils$.html#NeighboursMap=it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap[ml.sparkling.graph.operators.measures.utils.NeighboursUtils.NeighbourSet]", "kind" : "type"}, {"label" : "NeighbourSet", "tail" : "", "member" : "ml.sparkling.graph.operators.measures.utils.NeighboursUtils.NeighbourSet", "link" : "ml\/sparkling\/graph\/operators\/measures\/utils\/NeighboursUtils$.html#NeighbourSet=it.unimi.dsi.fastutil.longs.LongOpenHashSet", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/measures\/utils\/NeighboursUtils$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/measures\/utils\/NeighboursUtils$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/measures\/utils\/NeighboursUtils$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/measures\/utils\/NeighboursUtils$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/measures\/utils\/NeighboursUtils$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/measures\/utils\/NeighboursUtils$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/measures\/utils\/NeighboursUtils$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/utils\/NeighboursUtils$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/utils\/NeighboursUtils$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/utils\/NeighboursUtils$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/measures\/utils\/NeighboursUtils$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/measures\/utils\/NeighboursUtils$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/measures\/utils\/NeighboursUtils$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/measures\/utils\/NeighboursUtils$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/measures\/utils\/NeighboursUtils$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/measures\/utils\/NeighboursUtils$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/measures\/utils\/NeighboursUtils$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/utils\/NeighboursUtils$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/utils\/NeighboursUtils$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "ml.sparkling.graph.loaders.csv.types" : [{"name" : "ml.sparkling.graph.loaders.csv.types.CSVTypes", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "object" : "ml\/sparkling\/graph\/loaders\/csv\/types\/CSVTypes$.html", "members_object" : [{"label" : "EdgeAttributeExtractor", "tail" : "", "member" : "ml.sparkling.graph.loaders.csv.types.CSVTypes.EdgeAttributeExtractor", "link" : "ml\/sparkling\/graph\/loaders\/csv\/types\/CSVTypes$.html#EdgeAttributeExtractor[ED]=org.apache.spark.sql.Row=>ED", "kind" : "type"}, {"label" : "GraphBuilder", "tail" : "", "member" : "ml.sparkling.graph.loaders.csv.types.CSVTypes.GraphBuilder", "link" : "ml\/sparkling\/graph\/loaders\/csv\/types\/CSVTypes$.html#GraphBuilder[VD,ED]=org.apache.spark.sql.DataFrame=>org.apache.spark.graphx.Graph[VD,ED]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/loaders\/csv\/types\/CSVTypes$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/loaders\/csv\/types\/CSVTypes$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/loaders\/csv\/types\/CSVTypes$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/loaders\/csv\/types\/CSVTypes$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/loaders\/csv\/types\/CSVTypes$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/loaders\/csv\/types\/CSVTypes$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/loaders\/csv\/types\/CSVTypes$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/loaders\/csv\/types\/CSVTypes$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/loaders\/csv\/types\/CSVTypes$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/loaders\/csv\/types\/CSVTypes$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/loaders\/csv\/types\/CSVTypes$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/loaders\/csv\/types\/CSVTypes$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/loaders\/csv\/types\/CSVTypes$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/loaders\/csv\/types\/CSVTypes$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/loaders\/csv\/types\/CSVTypes$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/loaders\/csv\/types\/CSVTypes$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/loaders\/csv\/types\/CSVTypes$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/loaders\/csv\/types\/CSVTypes$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/loaders\/csv\/types\/CSVTypes$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ml.sparkling.graph.loaders.csv.types.Types", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "object" : "ml\/sparkling\/graph\/loaders\/csv\/types\/Types$.html", "members_object" : [{"label" : "ToVertexId", "tail" : "", "member" : "ml.sparkling.graph.loaders.csv.types.Types.ToVertexId", "link" : "ml\/sparkling\/graph\/loaders\/csv\/types\/Types$.html#ToVertexId[VT]=VT=>org.apache.spark.graphx.VertexId", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/loaders\/csv\/types\/Types$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/loaders\/csv\/types\/Types$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/loaders\/csv\/types\/Types$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/loaders\/csv\/types\/Types$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/loaders\/csv\/types\/Types$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/loaders\/csv\/types\/Types$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/loaders\/csv\/types\/Types$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/loaders\/csv\/types\/Types$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/loaders\/csv\/types\/Types$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/loaders\/csv\/types\/Types$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/loaders\/csv\/types\/Types$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/loaders\/csv\/types\/Types$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/loaders\/csv\/types\/Types$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/loaders\/csv\/types\/Types$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/loaders\/csv\/types\/Types$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/loaders\/csv\/types\/Types$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/loaders\/csv\/types\/Types$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/loaders\/csv\/types\/Types$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/loaders\/csv\/types\/Types$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "ml.sparkling.graph.api.operators.partitioning" : [{"name" : "ml.sparkling.graph.api.operators.partitioning.DataAwarePartitionStrategy", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "members_class" : [{"member" : "ml.sparkling.graph.api.operators.partitioning.DataAwarePartitionStrategy#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/api\/operators\/partitioning\/DataAwarePartitionStrategy.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/api\/operators\/partitioning\/DataAwarePartitionStrategy.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/api\/operators\/partitioning\/DataAwarePartitionStrategy.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/api\/operators\/partitioning\/DataAwarePartitionStrategy.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/api\/operators\/partitioning\/DataAwarePartitionStrategy.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/api\/operators\/partitioning\/DataAwarePartitionStrategy.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/api\/operators\/partitioning\/DataAwarePartitionStrategy.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/api\/operators\/partitioning\/DataAwarePartitionStrategy.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/api\/operators\/partitioning\/DataAwarePartitionStrategy.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/api\/operators\/partitioning\/DataAwarePartitionStrategy.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/api\/operators\/partitioning\/DataAwarePartitionStrategy.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/api\/operators\/partitioning\/DataAwarePartitionStrategy.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/api\/operators\/partitioning\/DataAwarePartitionStrategy.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/api\/operators\/partitioning\/DataAwarePartitionStrategy.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/api\/operators\/partitioning\/DataAwarePartitionStrategy.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/api\/operators\/partitioning\/DataAwarePartitionStrategy.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/api\/operators\/partitioning\/DataAwarePartitionStrategy.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/api\/operators\/partitioning\/DataAwarePartitionStrategy.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/api\/operators\/partitioning\/DataAwarePartitionStrategy.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "getPartition", "tail" : "(edgeTriplet: EdgeTriplet[VD, ED]): PartitionID", "member" : "ml.sparkling.graph.api.operators.partitioning.DataAwarePartitionStrategy.getPartition", "link" : "ml\/sparkling\/graph\/api\/operators\/partitioning\/DataAwarePartitionStrategy.html#getPartition(edgeTriplet:org.apache.spark.graphx.EdgeTriplet[VD,ED]):org.apache.spark.graphx.PartitionID", "kind" : "abstract def"}], "class" : "ml\/sparkling\/graph\/api\/operators\/partitioning\/DataAwarePartitionStrategy.html", "kind" : "class"}], "ml.sparkling.graph.operators.measures.vertex.clustering" : [{"name" : "ml.sparkling.graph.operators.measures.vertex.clustering.LocalClustering", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "object" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/clustering\/LocalClustering$.html", "members_object" : [{"label" : "compute", "tail" : "(graph: Graph[VD, ED], vertexMeasureConfiguration: VertexMeasureConfiguration[VD, ED])(arg0: ClassTag[VD], arg1: ClassTag[ED], num: Numeric[ED]): Graph[Double, ED]", "member" : "ml.sparkling.graph.operators.measures.vertex.clustering.LocalClustering.compute", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/clustering\/LocalClustering$.html#compute[VD,ED](graph:org.apache.spark.graphx.Graph[VD,ED],vertexMeasureConfiguration:ml.sparkling.graph.api.operators.measures.VertexMeasureConfiguration[VD,ED])(implicitevidence$1:scala.reflect.ClassTag[VD],implicitevidence$2:scala.reflect.ClassTag[ED],implicitnum:Numeric[ED]):org.apache.spark.graphx.Graph[Double,ED]", "kind" : "def"}, {"label" : "compute", "tail" : "(graph: Graph[VD, ED])(arg0: ClassTag[VD], arg1: ClassTag[ED], num: Numeric[ED]): Graph[Double, ED]", "member" : "ml.sparkling.graph.api.operators.measures.VertexMeasure.compute", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/clustering\/LocalClustering$.html#compute[VD,ED](graph:org.apache.spark.graphx.Graph[VD,ED])(implicitevidence$1:scala.reflect.ClassTag[VD],implicitevidence$2:scala.reflect.ClassTag[ED],implicitnum:Numeric[ED]):org.apache.spark.graphx.Graph[OV,ED]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/clustering\/LocalClustering$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/clustering\/LocalClustering$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/clustering\/LocalClustering$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/clustering\/LocalClustering$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/clustering\/LocalClustering$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/clustering\/LocalClustering$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/clustering\/LocalClustering$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/clustering\/LocalClustering$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/clustering\/LocalClustering$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/clustering\/LocalClustering$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/clustering\/LocalClustering$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/clustering\/LocalClustering$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/clustering\/LocalClustering$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/clustering\/LocalClustering$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/clustering\/LocalClustering$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/clustering\/LocalClustering$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/clustering\/LocalClustering$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/clustering\/LocalClustering$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/clustering\/LocalClustering$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "ml.sparkling.graph.generators.wattsandstrogatz" : [{"name" : "ml.sparkling.graph.generators.wattsandstrogatz.WattsAndStrogatzGenerator", "shortDescription" : "Created by Roman Bartusiak riomus@gmail.com roman.bartusiak@pwr.edu.pl on 26.04.16.", "object" : "ml\/sparkling\/graph\/generators\/wattsandstrogatz\/WattsAndStrogatzGenerator$.html", "members_object" : [{"label" : "generate", "tail" : "(configuration: WattsAndStrogatzGeneratorConfiguration)(ctx: SparkContext): Graph[Int, Int]", "member" : "ml.sparkling.graph.generators.wattsandstrogatz.WattsAndStrogatzGenerator.generate", "link" : "ml\/sparkling\/graph\/generators\/wattsandstrogatz\/WattsAndStrogatzGenerator$.html#generate(configuration:ml.sparkling.graph.generators.wattsandstrogatz.WattsAndStrogatzGeneratorConfiguration)(implicitctx:org.apache.spark.SparkContext):org.apache.spark.graphx.Graph[Int,Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/generators\/wattsandstrogatz\/WattsAndStrogatzGenerator$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/generators\/wattsandstrogatz\/WattsAndStrogatzGenerator$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/generators\/wattsandstrogatz\/WattsAndStrogatzGenerator$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/generators\/wattsandstrogatz\/WattsAndStrogatzGenerator$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/generators\/wattsandstrogatz\/WattsAndStrogatzGenerator$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/generators\/wattsandstrogatz\/WattsAndStrogatzGenerator$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/generators\/wattsandstrogatz\/WattsAndStrogatzGenerator$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/generators\/wattsandstrogatz\/WattsAndStrogatzGenerator$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/generators\/wattsandstrogatz\/WattsAndStrogatzGenerator$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/generators\/wattsandstrogatz\/WattsAndStrogatzGenerator$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/generators\/wattsandstrogatz\/WattsAndStrogatzGenerator$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/generators\/wattsandstrogatz\/WattsAndStrogatzGenerator$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/generators\/wattsandstrogatz\/WattsAndStrogatzGenerator$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/generators\/wattsandstrogatz\/WattsAndStrogatzGenerator$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/generators\/wattsandstrogatz\/WattsAndStrogatzGenerator$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/generators\/wattsandstrogatz\/WattsAndStrogatzGenerator$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/generators\/wattsandstrogatz\/WattsAndStrogatzGenerator$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/generators\/wattsandstrogatz\/WattsAndStrogatzGenerator$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/generators\/wattsandstrogatz\/WattsAndStrogatzGenerator$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ml.sparkling.graph.generators.wattsandstrogatz.WattsAndStrogatzGeneratorConfiguration", "shortDescription" : "", "members_case class" : [{"member" : "ml.sparkling.graph.generators.wattsandstrogatz.WattsAndStrogatzGeneratorConfiguration#<init>", "error" : "unsupported entity"}, {"label" : "partitions", "tail" : ": Int", "member" : "ml.sparkling.graph.generators.wattsandstrogatz.WattsAndStrogatzGeneratorConfiguration.partitions", "link" : "ml\/sparkling\/graph\/generators\/wattsandstrogatz\/WattsAndStrogatzGeneratorConfiguration.html#partitions:Int", "kind" : "val"}, {"label" : "storageLevel", "tail" : ": StorageLevel", "member" : "ml.sparkling.graph.generators.wattsandstrogatz.WattsAndStrogatzGeneratorConfiguration.storageLevel", "link" : "ml\/sparkling\/graph\/generators\/wattsandstrogatz\/WattsAndStrogatzGeneratorConfiguration.html#storageLevel:org.apache.spark.storage.StorageLevel", "kind" : "val"}, {"label" : "randomNumberGeneratorProvider", "tail" : ": RandomNumberGeneratorProvider", "member" : "ml.sparkling.graph.generators.wattsandstrogatz.WattsAndStrogatzGeneratorConfiguration.randomNumberGeneratorProvider", "link" : "ml\/sparkling\/graph\/generators\/wattsandstrogatz\/WattsAndStrogatzGeneratorConfiguration.html#randomNumberGeneratorProvider:ml.sparkling.graph.api.generators.RandomNumbers.RandomNumberGeneratorProvider", "kind" : "val"}, {"label" : "mixing", "tail" : ": Boolean", "member" : "ml.sparkling.graph.generators.wattsandstrogatz.WattsAndStrogatzGeneratorConfiguration.mixing", "link" : "ml\/sparkling\/graph\/generators\/wattsandstrogatz\/WattsAndStrogatzGeneratorConfiguration.html#mixing:Boolean", "kind" : "val"}, {"label" : "rewiringProbability", "tail" : ": Double", "member" : "ml.sparkling.graph.generators.wattsandstrogatz.WattsAndStrogatzGeneratorConfiguration.rewiringProbability", "link" : "ml\/sparkling\/graph\/generators\/wattsandstrogatz\/WattsAndStrogatzGeneratorConfiguration.html#rewiringProbability:Double", "kind" : "val"}, {"label" : "meanDegree", "tail" : ": Long", "member" : "ml.sparkling.graph.generators.wattsandstrogatz.WattsAndStrogatzGeneratorConfiguration.meanDegree", "link" : "ml\/sparkling\/graph\/generators\/wattsandstrogatz\/WattsAndStrogatzGeneratorConfiguration.html#meanDegree:Long", "kind" : "val"}, {"label" : "numberOfNodes", "tail" : ": Long", "member" : "ml.sparkling.graph.generators.wattsandstrogatz.WattsAndStrogatzGeneratorConfiguration.numberOfNodes", "link" : "ml\/sparkling\/graph\/generators\/wattsandstrogatz\/WattsAndStrogatzGeneratorConfiguration.html#numberOfNodes:Long", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/generators\/wattsandstrogatz\/WattsAndStrogatzGeneratorConfiguration.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/generators\/wattsandstrogatz\/WattsAndStrogatzGeneratorConfiguration.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/generators\/wattsandstrogatz\/WattsAndStrogatzGeneratorConfiguration.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/generators\/wattsandstrogatz\/WattsAndStrogatzGeneratorConfiguration.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/generators\/wattsandstrogatz\/WattsAndStrogatzGeneratorConfiguration.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/generators\/wattsandstrogatz\/WattsAndStrogatzGeneratorConfiguration.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/generators\/wattsandstrogatz\/WattsAndStrogatzGeneratorConfiguration.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/generators\/wattsandstrogatz\/WattsAndStrogatzGeneratorConfiguration.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/generators\/wattsandstrogatz\/WattsAndStrogatzGeneratorConfiguration.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/generators\/wattsandstrogatz\/WattsAndStrogatzGeneratorConfiguration.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/generators\/wattsandstrogatz\/WattsAndStrogatzGeneratorConfiguration.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/generators\/wattsandstrogatz\/WattsAndStrogatzGeneratorConfiguration.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/generators\/wattsandstrogatz\/WattsAndStrogatzGeneratorConfiguration.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/generators\/wattsandstrogatz\/WattsAndStrogatzGeneratorConfiguration.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/generators\/wattsandstrogatz\/WattsAndStrogatzGeneratorConfiguration.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/generators\/wattsandstrogatz\/WattsAndStrogatzGeneratorConfiguration.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ml\/sparkling\/graph\/generators\/wattsandstrogatz\/WattsAndStrogatzGeneratorConfiguration.html", "kind" : "case class"}], "ml.sparkling.graph.operators.algorithms.random.ctrw.processor" : [{"name" : "ml.sparkling.graph.operators.algorithms.random.ctrw.processor.CTRWProcessor", "shortDescription" : "Created by mth on 4\/13\/17.", "members_class" : [{"label" : "applyMessages", "tail" : "(round: Int)(vertexId: VertexId, data: CTRWVertex, messagesOps: Option[List[CTRWMessage]]): CTRWVertex", "member" : "ml.sparkling.graph.operators.algorithms.random.ctrw.processor.CTRWProcessor.applyMessages", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/processor\/CTRWProcessor.html#applyMessages(round:Int)(vertexId:org.apache.spark.graphx.VertexId,data:ml.sparkling.graph.operators.algorithms.random.ctrw.struct.CTRWVertex,messagesOps:Option[List[ml.sparkling.graph.operators.algorithms.random.ctrw.struct.CTRWMessage]]):ml.sparkling.graph.operators.algorithms.random.ctrw.struct.CTRWVertex", "kind" : "def"}, {"label" : "mergeMessages", "tail" : "(msg1: List[CTRWMessage], msg2: List[CTRWMessage]): List[CTRWMessage]", "member" : "ml.sparkling.graph.operators.algorithms.random.ctrw.processor.CTRWProcessor.mergeMessages", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/processor\/CTRWProcessor.html#mergeMessages(msg1:List[ml.sparkling.graph.operators.algorithms.random.ctrw.struct.CTRWMessage],msg2:List[ml.sparkling.graph.operators.algorithms.random.ctrw.struct.CTRWMessage]):List[ml.sparkling.graph.operators.algorithms.random.ctrw.struct.CTRWMessage]", "kind" : "def"}, {"label" : "sendMessageCtx", "tail" : "(round: Int)(edgeContext: EdgeContext[CTRWVertex, _, List[CTRWMessage]]): Unit", "member" : "ml.sparkling.graph.operators.algorithms.random.ctrw.processor.CTRWProcessor.sendMessageCtx", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/processor\/CTRWProcessor.html#sendMessageCtx(round:Int)(edgeContext:org.apache.spark.graphx.EdgeContext[ml.sparkling.graph.operators.algorithms.random.ctrw.struct.CTRWVertex,_,List[ml.sparkling.graph.operators.algorithms.random.ctrw.struct.CTRWMessage]]):Unit", "kind" : "def"}, {"label" : "sendMessage", "tail" : "(triplet: EdgeTriplet[CTRWVertex, ED]): Iterator[(VertexId, List[CTRWMessage])]", "member" : "ml.sparkling.graph.operators.algorithms.random.ctrw.processor.CTRWProcessor.sendMessage", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/processor\/CTRWProcessor.html#sendMessage(triplet:org.apache.spark.graphx.EdgeTriplet[ml.sparkling.graph.operators.algorithms.random.ctrw.struct.CTRWVertex,ED]):Iterator[(org.apache.spark.graphx.VertexId,List[ml.sparkling.graph.operators.algorithms.random.ctrw.struct.CTRWMessage])]", "kind" : "def"}, {"label" : "createInitMessages", "tail" : "(sampleSize: Int)(vertex: CTRWVertex): CTRWVertex", "member" : "ml.sparkling.graph.operators.algorithms.random.ctrw.processor.CTRWProcessor.createInitMessages", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/processor\/CTRWProcessor.html#createInitMessages(sampleSize:Int)(vertex:ml.sparkling.graph.operators.algorithms.random.ctrw.struct.CTRWVertex):ml.sparkling.graph.operators.algorithms.random.ctrw.struct.CTRWVertex", "kind" : "def"}, {"label" : "initGraph", "tail" : ": Graph[CTRWVertex, ED]", "member" : "ml.sparkling.graph.operators.algorithms.random.ctrw.processor.CTRWProcessor.initGraph", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/processor\/CTRWProcessor.html#initGraph:org.apache.spark.graphx.Graph[ml.sparkling.graph.operators.algorithms.random.ctrw.struct.CTRWVertex,ED]", "kind" : "lazy val"}, {"member" : "ml.sparkling.graph.operators.algorithms.random.ctrw.processor.CTRWProcessor#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/processor\/CTRWProcessor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/processor\/CTRWProcessor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/processor\/CTRWProcessor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/processor\/CTRWProcessor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/processor\/CTRWProcessor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/processor\/CTRWProcessor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/processor\/CTRWProcessor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/processor\/CTRWProcessor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/processor\/CTRWProcessor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/processor\/CTRWProcessor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/processor\/CTRWProcessor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/processor\/CTRWProcessor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/processor\/CTRWProcessor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/processor\/CTRWProcessor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/processor\/CTRWProcessor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/processor\/CTRWProcessor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/processor\/CTRWProcessor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/processor\/CTRWProcessor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/processor\/CTRWProcessor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/processor\/CTRWProcessor.html", "kind" : "class"}], "ml.sparkling.graph.operators.measures.vertex.betweenness" : [], "ml.sparkling.graph.api.operators" : [{"name" : "ml.sparkling.graph.api.operators.IterativeComputation", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "object" : "ml\/sparkling\/graph\/api\/operators\/IterativeComputation$.html", "members_object" : [{"label" : "wholeGraphBucket", "tail" : "(graph: Graph[VD, ED])(arg0: ClassTag[VD], arg1: ClassTag[ED]): Long", "member" : "ml.sparkling.graph.api.operators.IterativeComputation.wholeGraphBucket", "link" : "ml\/sparkling\/graph\/api\/operators\/IterativeComputation$.html#wholeGraphBucket[VD,ED](graph:org.apache.spark.graphx.Graph[VD,ED])(implicitevidence$1:scala.reflect.ClassTag[VD],implicitevidence$2:scala.reflect.ClassTag[ED]):Long", "kind" : "def"}, {"label" : "BucketSizeProvider", "tail" : "", "member" : "ml.sparkling.graph.api.operators.IterativeComputation.BucketSizeProvider", "link" : "ml\/sparkling\/graph\/api\/operators\/IterativeComputation$.html#BucketSizeProvider[VD,ED]=org.apache.spark.graphx.Graph[VD,ED]=>Long", "kind" : "type"}, {"label" : "SimpleWrapper", "tail" : "", "member" : "ml.sparkling.graph.api.operators.IterativeComputation.SimpleWrapper", "link" : "ml\/sparkling\/graph\/api\/operators\/IterativeComputation$.html#SimpleWrapper[-VD]extendsIterativeComputation.VertexPredicate[VD]withProductwithSerializable", "kind" : "case class"}, {"label" : "SimpleVertexPredicate", "tail" : "", "member" : "ml.sparkling.graph.api.operators.IterativeComputation.SimpleVertexPredicate", "link" : "ml\/sparkling\/graph\/api\/operators\/IterativeComputation$.html#SimpleVertexPredicateextendsAnyRef", "kind" : "trait"}, {"label" : "VertexPredicate", "tail" : "", "member" : "ml.sparkling.graph.api.operators.IterativeComputation.VertexPredicate", "link" : "ml\/sparkling\/graph\/api\/operators\/IterativeComputation$.html#VertexPredicate[-VD]extendsAnyRef", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/api\/operators\/IterativeComputation$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/api\/operators\/IterativeComputation$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/api\/operators\/IterativeComputation$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/api\/operators\/IterativeComputation$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/api\/operators\/IterativeComputation$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/api\/operators\/IterativeComputation$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/api\/operators\/IterativeComputation$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/api\/operators\/IterativeComputation$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/api\/operators\/IterativeComputation$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/api\/operators\/IterativeComputation$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/api\/operators\/IterativeComputation$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/api\/operators\/IterativeComputation$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/api\/operators\/IterativeComputation$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/api\/operators\/IterativeComputation$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/api\/operators\/IterativeComputation$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/api\/operators\/IterativeComputation$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/api\/operators\/IterativeComputation$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/api\/operators\/IterativeComputation$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/api\/operators\/IterativeComputation$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "ml.sparkling.graph.operators.algorithms.bfs.predicate" : [{"name" : "ml.sparkling.graph.operators.algorithms.bfs.predicate.BFSPredicate", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/predicate\/BFSPredicate.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/predicate\/BFSPredicate.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/predicate\/BFSPredicate.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/predicate\/BFSPredicate.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/predicate\/BFSPredicate.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/predicate\/BFSPredicate.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/predicate\/BFSPredicate.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/predicate\/BFSPredicate.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/predicate\/BFSPredicate.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/predicate\/BFSPredicate.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/predicate\/BFSPredicate.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/predicate\/BFSPredicate.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/predicate\/BFSPredicate.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/predicate\/BFSPredicate.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/predicate\/BFSPredicate.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/predicate\/BFSPredicate.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/predicate\/BFSPredicate.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/predicate\/BFSPredicate.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/predicate\/BFSPredicate.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "applyMessages", "tail" : "(vertexId: VertexId, date: VD, message: MD): VD", "member" : "ml.sparkling.graph.operators.algorithms.bfs.predicate.BFSPredicate.applyMessages", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/predicate\/BFSPredicate.html#applyMessages(vertexId:org.apache.spark.graphx.VertexId,date:VD,message:MD):VD", "kind" : "abstract def"}, {"label" : "getInitialData", "tail" : "(vertexId: VertexId, attr: VD): (VertexId) ⇒ VD", "member" : "ml.sparkling.graph.operators.algorithms.bfs.predicate.BFSPredicate.getInitialData", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/predicate\/BFSPredicate.html#getInitialData(vertexId:org.apache.spark.graphx.VertexId,attr:VD):org.apache.spark.graphx.VertexId=>VD", "kind" : "abstract def"}], "shortDescription" : "Created by mth on 6\/26\/17.", "trait" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/predicate\/BFSPredicate.html", "kind" : "trait"}], "ml.sparkling.graph.operators.algorithms.pregel" : [{"name" : "ml.sparkling.graph.operators.algorithms.pregel.Pregel", "shortDescription" : "Created by mth on 4\/19\/17.", "object" : "ml\/sparkling\/graph\/operators\/algorithms\/pregel\/Pregel$.html", "members_object" : [{"label" : "apply", "tail" : "(graph: Graph[OVD, ED], prepareVertices: (OVD) ⇒ VD, vpred: (Int) ⇒ (VertexId, VD, Option[MD]) ⇒ VD, send: (Int) ⇒ (EdgeContext[VD, ED, MD]) ⇒ Unit, merge: (MD, MD) ⇒ MD, interruptAfterEmptyRounds: Int)(arg0: ClassTag[VD], arg1: ClassTag[MD]): Graph[VD, ED]", "member" : "ml.sparkling.graph.operators.algorithms.pregel.Pregel.apply", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/pregel\/Pregel$.html#apply[OVD,VD,ED,MD](graph:org.apache.spark.graphx.Graph[OVD,ED],prepareVertices:OVD=>VD,vpred:Int=>((org.apache.spark.graphx.VertexId,VD,Option[MD])=>VD),send:Int=>(org.apache.spark.graphx.EdgeContext[VD,ED,MD]=>Unit),merge:(MD,MD)=>MD,interruptAfterEmptyRounds:Int)(implicitevidence$1:scala.reflect.ClassTag[VD],implicitevidence$2:scala.reflect.ClassTag[MD]):org.apache.spark.graphx.Graph[VD,ED]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/pregel\/Pregel$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/pregel\/Pregel$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/pregel\/Pregel$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/pregel\/Pregel$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/pregel\/Pregel$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/pregel\/Pregel$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/pregel\/Pregel$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/pregel\/Pregel$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/pregel\/Pregel$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/pregel\/Pregel$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/pregel\/Pregel$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/pregel\/Pregel$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/pregel\/Pregel$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/pregel\/Pregel$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/pregel\/Pregel$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/pregel\/Pregel$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/pregel\/Pregel$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/pregel\/Pregel$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/pregel\/Pregel$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors" : [{"name" : "ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.PathListComparator", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "object" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/PathListComparator$.html", "members_object" : [{"label" : "compare", "tail" : "(t: JList[JDouble], t1: JList[JDouble]): Int", "member" : "ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.PathListComparator.compare", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/PathListComparator$.html#compare(t:ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.JList[ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.JDouble],t1:ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.JList[ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.JDouble]):Int", "kind" : "def"}, {"label" : "thenComparingDouble", "tail" : "(arg0: ToDoubleFunction[_ >: JList[JDouble]]): Comparator[JList[JDouble]]", "member" : "java.util.Comparator.thenComparingDouble", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/PathListComparator$.html#thenComparingDouble(x$1:java.util.function.ToDoubleFunction[_>:T]):java.util.Comparator[T]", "kind" : "def"}, {"label" : "thenComparingLong", "tail" : "(arg0: ToLongFunction[_ >: JList[JDouble]]): Comparator[JList[JDouble]]", "member" : "java.util.Comparator.thenComparingLong", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/PathListComparator$.html#thenComparingLong(x$1:java.util.function.ToLongFunction[_>:T]):java.util.Comparator[T]", "kind" : "def"}, {"label" : "thenComparingInt", "tail" : "(arg0: ToIntFunction[_ >: JList[JDouble]]): Comparator[JList[JDouble]]", "member" : "java.util.Comparator.thenComparingInt", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/PathListComparator$.html#thenComparingInt(x$1:java.util.function.ToIntFunction[_>:T]):java.util.Comparator[T]", "kind" : "def"}, {"label" : "thenComparing", "tail" : "(arg0: Function[_ >: JList[JDouble], _ <: U]): Comparator[JList[JDouble]]", "member" : "java.util.Comparator.thenComparing", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/PathListComparator$.html#thenComparing[U<:Comparable[_>:U]](x$1:java.util.function.Function[_>:T,_<:U]):java.util.Comparator[T]", "kind" : "def"}, {"label" : "thenComparing", "tail" : "(arg0: Function[_ >: JList[JDouble], _ <: U], arg1: Comparator[_ >: U]): Comparator[JList[JDouble]]", "member" : "java.util.Comparator.thenComparing", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/PathListComparator$.html#thenComparing[U](x$1:java.util.function.Function[_>:T,_<:U],x$2:java.util.Comparator[_>:U]):java.util.Comparator[T]", "kind" : "def"}, {"label" : "thenComparing", "tail" : "(arg0: Comparator[_ >: JList[JDouble]]): Comparator[JList[JDouble]]", "member" : "java.util.Comparator.thenComparing", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/PathListComparator$.html#thenComparing(x$1:java.util.Comparator[_>:T]):java.util.Comparator[T]", "kind" : "def"}, {"label" : "reversed", "tail" : "(): Comparator[JList[JDouble]]", "member" : "java.util.Comparator.reversed", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/PathListComparator$.html#reversed():java.util.Comparator[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/PathListComparator$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/PathListComparator$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/PathListComparator$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/PathListComparator$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/PathListComparator$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/PathListComparator$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/PathListComparator$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/PathListComparator$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/PathListComparator$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/PathListComparator$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/PathListComparator$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/PathListComparator$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/PathListComparator$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/PathListComparator$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/PathListComparator$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/PathListComparator$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/PathListComparator$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/PathListComparator$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/PathListComparator$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.PathProcessor", "members_trait" : [{"label" : "mergeMessages", "tail" : "(map1: PS, map2: PS)(num: Numeric[ED]): PS", "member" : "ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.PathProcessor.mergeMessages", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/PathProcessor.html#mergeMessages(map1:PS,map2:PS)(implicitnum:Numeric[ED]):PS", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/PathProcessor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/PathProcessor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/PathProcessor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/PathProcessor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/PathProcessor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/PathProcessor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/PathProcessor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/PathProcessor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/PathProcessor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/PathProcessor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/PathProcessor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/PathProcessor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/PathProcessor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/PathProcessor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/PathProcessor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/PathProcessor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/PathProcessor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/PathProcessor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/PathProcessor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "extendPathsMerging", "tail" : "(targetVertexId: VertexId, map: PS, vertexId: VertexId, distance: ED, map2: PS)(num: Numeric[ED]): PS", "member" : "ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.PathProcessor.extendPathsMerging", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/PathProcessor.html#extendPathsMerging(targetVertexId:org.apache.spark.graphx.VertexId,map:PS,vertexId:org.apache.spark.graphx.VertexId,distance:ED,map2:PS)(implicitnum:Numeric[ED]):PS", "kind" : "abstract def"}, {"label" : "processNewMessages", "tail" : "(map1: PS, map2: PS)(num: Numeric[ED]): PS", "member" : "ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.PathProcessor.processNewMessages", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/PathProcessor.html#processNewMessages(map1:PS,map2:PS)(implicitnum:Numeric[ED]):PS", "kind" : "abstract def"}, {"label" : "putNewPath", "tail" : "(map: PS, to: VertexId, weight: ED)(num: Numeric[ED]): PS", "member" : "ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.PathProcessor.putNewPath", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/PathProcessor.html#putNewPath(map:PS,to:org.apache.spark.graphx.VertexId,weight:ED)(implicitnum:Numeric[ED]):PS", "kind" : "abstract def"}, {"label" : "getNewContainerForPaths", "tail" : "(): PS", "member" : "ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.PathProcessor.getNewContainerForPaths", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/PathProcessor.html#getNewContainerForPaths():PS", "kind" : "abstract def"}, {"label" : "EMPTY_CONTAINER", "tail" : "(): PS", "member" : "ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.PathProcessor.EMPTY_CONTAINER", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/PathProcessor.html#EMPTY_CONTAINER:PS", "kind" : "abstract def"}], "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "trait" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/PathProcessor.html", "kind" : "trait"}, {"name" : "ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.SingleVertexProcessor", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "members_class" : [{"label" : "putNewPath", "tail" : "(map: Double, to: VertexId, weight: ED)(num: Numeric[ED]): Double", "member" : "ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.SingleVertexProcessor.putNewPath", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/SingleVertexProcessor.html#putNewPath(map:Double,to:org.apache.spark.graphx.VertexId,weight:ED)(implicitnum:Numeric[ED]):Double", "kind" : "def"}, {"label" : "processNewMessages", "tail" : "(map1: Double, map2: Double)(num: Numeric[ED]): Double", "member" : "ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.SingleVertexProcessor.processNewMessages", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/SingleVertexProcessor.html#processNewMessages(map1:Double,map2:Double)(implicitnum:Numeric[ED]):Double", "kind" : "def"}, {"label" : "extendPathsMerging", "tail" : "(targetVertexId: VertexId, currentValue: Double, vertexId: VertexId, distance: ED, currentValue2: Double)(num: Numeric[ED]): Double", "member" : "ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.SingleVertexProcessor.extendPathsMerging", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/SingleVertexProcessor.html#extendPathsMerging(targetVertexId:org.apache.spark.graphx.VertexId,currentValue:Double,vertexId:org.apache.spark.graphx.VertexId,distance:ED,currentValue2:Double)(implicitnum:Numeric[ED]):Double", "kind" : "def"}, {"label" : "getNewContainerForPaths", "tail" : "(): Double", "member" : "ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.SingleVertexProcessor.getNewContainerForPaths", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/SingleVertexProcessor.html#getNewContainerForPaths():Double", "kind" : "def"}, {"label" : "EMPTY_CONTAINER", "tail" : "(): Double", "member" : "ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.SingleVertexProcessor.EMPTY_CONTAINER", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/SingleVertexProcessor.html#EMPTY_CONTAINER:Double", "kind" : "def"}, {"member" : "ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.SingleVertexProcessor#<init>", "error" : "unsupported entity"}, {"label" : "mergeMessages", "tail" : "(map1: Double, map2: Double)(num: Numeric[ED]): Double", "member" : "ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.PathProcessor.mergeMessages", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/SingleVertexProcessor.html#mergeMessages(map1:PS,map2:PS)(implicitnum:Numeric[ED]):PS", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/SingleVertexProcessor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/SingleVertexProcessor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/SingleVertexProcessor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/SingleVertexProcessor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/SingleVertexProcessor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/SingleVertexProcessor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/SingleVertexProcessor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/SingleVertexProcessor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/SingleVertexProcessor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/SingleVertexProcessor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/SingleVertexProcessor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/SingleVertexProcessor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/SingleVertexProcessor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/SingleVertexProcessor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/SingleVertexProcessor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/SingleVertexProcessor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/SingleVertexProcessor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/SingleVertexProcessor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/SingleVertexProcessor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/SingleVertexProcessor.html", "kind" : "class"}, {"name" : "ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.WithDistanceProcessor", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "members_class" : [{"label" : "extendPathsMerging", "tail" : "(targetVertexId: VertexId, map: Map[VertexId, ED], vertexId: VertexId, distance: ED, map2: Map[VertexId, ED])(num: Numeric[ED]): Map[VertexId, ED]", "member" : "ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.WithDistanceProcessor.extendPathsMerging", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/WithDistanceProcessor.html#extendPathsMerging(targetVertexId:org.apache.spark.graphx.VertexId,map:Map[org.apache.spark.graphx.VertexId,ED],vertexId:org.apache.spark.graphx.VertexId,distance:ED,map2:Map[org.apache.spark.graphx.VertexId,ED])(implicitnum:Numeric[ED]):Map[org.apache.spark.graphx.VertexId,ED]", "kind" : "def"}, {"label" : "processNewMessages", "tail" : "(map1: Map[VertexId, ED], map2: Map[VertexId, ED])(num: Numeric[ED]): Map[VertexId, ED]", "member" : "ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.WithDistanceProcessor.processNewMessages", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/WithDistanceProcessor.html#processNewMessages(map1:Map[org.apache.spark.graphx.VertexId,ED],map2:Map[org.apache.spark.graphx.VertexId,ED])(implicitnum:Numeric[ED]):Map[org.apache.spark.graphx.VertexId,ED]", "kind" : "def"}, {"label" : "putNewPath", "tail" : "(map: Map[VertexId, ED], to: VertexId, weight: ED)(num: Numeric[ED]): Map[VertexId, ED]", "member" : "ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.WithDistanceProcessor.putNewPath", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/WithDistanceProcessor.html#putNewPath(map:Map[org.apache.spark.graphx.VertexId,ED],to:org.apache.spark.graphx.VertexId,weight:ED)(implicitnum:Numeric[ED]):Map[org.apache.spark.graphx.VertexId,ED]", "kind" : "def"}, {"label" : "getNewContainerForPaths", "tail" : "(): Map[VertexId, ED]", "member" : "ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.WithDistanceProcessor.getNewContainerForPaths", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/WithDistanceProcessor.html#getNewContainerForPaths():scala.collection.immutable.Map[org.apache.spark.graphx.VertexId,ED]", "kind" : "def"}, {"label" : "EMPTY_CONTAINER", "tail" : "(): Map[VertexId, ED]", "member" : "ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.WithDistanceProcessor.EMPTY_CONTAINER", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/WithDistanceProcessor.html#EMPTY_CONTAINER:scala.collection.immutable.Map[org.apache.spark.graphx.VertexId,ED]", "kind" : "def"}, {"member" : "ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.WithDistanceProcessor#<init>", "error" : "unsupported entity"}, {"label" : "mergeMessages", "tail" : "(map1: Map[VertexId, ED], map2: Map[VertexId, ED])(num: Numeric[ED]): Map[VertexId, ED]", "member" : "ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.PathProcessor.mergeMessages", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/WithDistanceProcessor.html#mergeMessages(map1:PS,map2:PS)(implicitnum:Numeric[ED]):PS", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/WithDistanceProcessor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/WithDistanceProcessor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/WithDistanceProcessor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/WithDistanceProcessor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/WithDistanceProcessor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/WithDistanceProcessor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/WithDistanceProcessor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/WithDistanceProcessor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/WithDistanceProcessor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/WithDistanceProcessor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/WithDistanceProcessor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/WithDistanceProcessor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/WithDistanceProcessor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/WithDistanceProcessor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/WithDistanceProcessor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/WithDistanceProcessor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/WithDistanceProcessor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/WithDistanceProcessor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/WithDistanceProcessor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/WithDistanceProcessor.html", "kind" : "class"}, {"name" : "ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.WithPathProcessor", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "members_class" : [{"label" : "extendPathsMerging", "tail" : "(targetVertexId: VertexId, map: PathsMap, vertexId: VertexId, distance: ED, map2: PathsMap)(num: Numeric[ED]): PathsMap", "member" : "ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.WithPathProcessor.extendPathsMerging", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/WithPathProcessor.html#extendPathsMerging(targetVertexId:org.apache.spark.graphx.VertexId,map:WithPathProcessor.this.PathsMap,vertexId:org.apache.spark.graphx.VertexId,distance:ED,map2:WithPathProcessor.this.PathsMap)(implicitnum:Numeric[ED]):WithPathProcessor.this.PathsMap", "kind" : "def"}, {"label" : "processNewMessages", "tail" : "(map1: PathsMap, map2: PathsMap)(num: Numeric[ED]): PathsMap", "member" : "ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.WithPathProcessor.processNewMessages", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/WithPathProcessor.html#processNewMessages(map1:WithPathProcessor.this.PathsMap,map2:WithPathProcessor.this.PathsMap)(implicitnum:Numeric[ED]):WithPathProcessor.this.PathsMap", "kind" : "def"}, {"label" : "putNewPath", "tail" : "(map: PathsMap, to: VertexId, weight: ED)(num: Numeric[ED]): PathsMap", "member" : "ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.WithPathProcessor.putNewPath", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/WithPathProcessor.html#putNewPath(map:WithPathProcessor.this.PathsMap,to:org.apache.spark.graphx.VertexId,weight:ED)(implicitnum:Numeric[ED]):WithPathProcessor.this.PathsMap", "kind" : "def"}, {"label" : "getNewContainerForPaths", "tail" : "(): Map[VertexId, PathsSet]", "member" : "ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.WithPathProcessor.getNewContainerForPaths", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/WithPathProcessor.html#getNewContainerForPaths():scala.collection.immutable.Map[org.apache.spark.graphx.VertexId,WithPathProcessor.this.PathsSet]", "kind" : "def"}, {"label" : "EMPTY_CONTAINER", "tail" : "(): Map[VertexId, PathsSet]", "member" : "ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.WithPathProcessor.EMPTY_CONTAINER", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/WithPathProcessor.html#EMPTY_CONTAINER:scala.collection.immutable.Map[org.apache.spark.graphx.VertexId,WithPathProcessor.this.PathsSet]", "kind" : "def"}, {"member" : "ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.WithPathProcessor#<init>", "error" : "unsupported entity"}, {"label" : "mergeMessages", "tail" : "(map1: Map[VertexId, (ED, Set[List[VertexId]])], map2: Map[VertexId, (ED, Set[List[VertexId]])])(num: Numeric[ED]): Map[VertexId, (ED, Set[List[VertexId]])]", "member" : "ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.PathProcessor.mergeMessages", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/WithPathProcessor.html#mergeMessages(map1:PS,map2:PS)(implicitnum:Numeric[ED]):PS", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/WithPathProcessor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/WithPathProcessor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/WithPathProcessor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/WithPathProcessor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/WithPathProcessor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/WithPathProcessor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/WithPathProcessor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/WithPathProcessor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/WithPathProcessor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/WithPathProcessor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/WithPathProcessor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/WithPathProcessor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/WithPathProcessor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/WithPathProcessor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/WithPathProcessor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/WithPathProcessor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/WithPathProcessor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/WithPathProcessor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/WithPathProcessor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/WithPathProcessor.html", "kind" : "class"}], "ml.sparkling.graph.api.generators" : [{"name" : "ml.sparkling.graph.api.generators.BasicGeneratorConfigurations", "shortDescription" : "Created by Roman Bartusiak riomus@gmail.com roman.bartusiak@pwr.edu.pl on 26.04.16.", "object" : "ml\/sparkling\/graph\/api\/generators\/BasicGeneratorConfigurations$.html", "members_object" : [{"label" : "SingleParamConfig", "tail" : "", "member" : "ml.sparkling.graph.api.generators.BasicGeneratorConfigurations.SingleParamConfig", "link" : "ml\/sparkling\/graph\/api\/generators\/BasicGeneratorConfigurations$.html#SingleParamConfig[PT]extendsGraphGeneratorConfigurationwithProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/api\/generators\/BasicGeneratorConfigurations$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/api\/generators\/BasicGeneratorConfigurations$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/api\/generators\/BasicGeneratorConfigurations$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/api\/generators\/BasicGeneratorConfigurations$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/api\/generators\/BasicGeneratorConfigurations$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/api\/generators\/BasicGeneratorConfigurations$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/api\/generators\/BasicGeneratorConfigurations$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/api\/generators\/BasicGeneratorConfigurations$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/api\/generators\/BasicGeneratorConfigurations$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/api\/generators\/BasicGeneratorConfigurations$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/api\/generators\/BasicGeneratorConfigurations$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/api\/generators\/BasicGeneratorConfigurations$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/api\/generators\/BasicGeneratorConfigurations$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/api\/generators\/BasicGeneratorConfigurations$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/api\/generators\/BasicGeneratorConfigurations$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/api\/generators\/BasicGeneratorConfigurations$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/api\/generators\/BasicGeneratorConfigurations$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/api\/generators\/BasicGeneratorConfigurations$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/api\/generators\/BasicGeneratorConfigurations$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ml.sparkling.graph.api.generators.GraphGenerator", "shortDescription" : "Created by Roman Bartusiak riomus@gmail.com roman.bartusiak@pwr.edu.pl on 26.04.16.", "members_class" : [{"member" : "ml.sparkling.graph.api.generators.GraphGenerator#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/api\/generators\/GraphGenerator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/api\/generators\/GraphGenerator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/api\/generators\/GraphGenerator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/api\/generators\/GraphGenerator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/api\/generators\/GraphGenerator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/api\/generators\/GraphGenerator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/api\/generators\/GraphGenerator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/api\/generators\/GraphGenerator.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/api\/generators\/GraphGenerator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/api\/generators\/GraphGenerator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/api\/generators\/GraphGenerator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/api\/generators\/GraphGenerator.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/api\/generators\/GraphGenerator.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/api\/generators\/GraphGenerator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/api\/generators\/GraphGenerator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/api\/generators\/GraphGenerator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/api\/generators\/GraphGenerator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/api\/generators\/GraphGenerator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/api\/generators\/GraphGenerator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "generate", "tail" : "(configuration: PT)(ctx: SparkContext): Graph[VT, ET]", "member" : "ml.sparkling.graph.api.generators.GraphGenerator.generate", "link" : "ml\/sparkling\/graph\/api\/generators\/GraphGenerator.html#generate(configuration:PT)(implicitctx:org.apache.spark.SparkContext):org.apache.spark.graphx.Graph[VT,ET]", "kind" : "abstract def"}], "class" : "ml\/sparkling\/graph\/api\/generators\/GraphGenerator.html", "kind" : "class"}, {"name" : "ml.sparkling.graph.api.generators.GraphGeneratorConfiguration", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/api\/generators\/GraphGeneratorConfiguration.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/api\/generators\/GraphGeneratorConfiguration.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/api\/generators\/GraphGeneratorConfiguration.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/api\/generators\/GraphGeneratorConfiguration.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/api\/generators\/GraphGeneratorConfiguration.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/api\/generators\/GraphGeneratorConfiguration.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/api\/generators\/GraphGeneratorConfiguration.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/api\/generators\/GraphGeneratorConfiguration.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/api\/generators\/GraphGeneratorConfiguration.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/api\/generators\/GraphGeneratorConfiguration.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/api\/generators\/GraphGeneratorConfiguration.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/api\/generators\/GraphGeneratorConfiguration.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/api\/generators\/GraphGeneratorConfiguration.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/api\/generators\/GraphGeneratorConfiguration.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/api\/generators\/GraphGeneratorConfiguration.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/api\/generators\/GraphGeneratorConfiguration.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/api\/generators\/GraphGeneratorConfiguration.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/api\/generators\/GraphGeneratorConfiguration.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/api\/generators\/GraphGeneratorConfiguration.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Created by Roman Bartusiak riomus@gmail.com roman.bartusiak@pwr.edu.pl on 26.04.16.", "trait" : "ml\/sparkling\/graph\/api\/generators\/GraphGeneratorConfiguration.html", "kind" : "trait"}, {"name" : "ml.sparkling.graph.api.generators.RandomNumbers", "shortDescription" : "Created by Roman Bartusiak riomus@gmail.com roman.bartusiak@pwr.edu.pl on 27.04.16.", "object" : "ml\/sparkling\/graph\/api\/generators\/RandomNumbers$.html", "members_object" : [{"label" : "ScalaRandomNumberGeneratorProvider", "tail" : ": (Long) ⇒ ScalaRandomNumberGenerator", "member" : "ml.sparkling.graph.api.generators.RandomNumbers.ScalaRandomNumberGeneratorProvider", "link" : "ml\/sparkling\/graph\/api\/generators\/RandomNumbers$.html#ScalaRandomNumberGeneratorProvider:Long=>ml.sparkling.graph.api.generators.RandomNumbers.ScalaRandomNumberGenerator", "kind" : "val"}, {"label" : "ScalaRandomNumberGenerator", "tail" : "", "member" : "ml.sparkling.graph.api.generators.RandomNumbers.ScalaRandomNumberGenerator", "link" : "ml\/sparkling\/graph\/api\/generators\/RandomNumbers$.html#ScalaRandomNumberGeneratorextendsRandomNumbers.RandomNumberGeneratorwithProductwithSerializable", "kind" : "case class"}, {"label" : "RandomNumberGeneratorProvider", "tail" : "", "member" : "ml.sparkling.graph.api.generators.RandomNumbers.RandomNumberGeneratorProvider", "link" : "ml\/sparkling\/graph\/api\/generators\/RandomNumbers$.html#RandomNumberGeneratorProvider=Long=>ml.sparkling.graph.api.generators.RandomNumbers.RandomNumberGenerator", "kind" : "type"}, {"label" : "RandomNumberGenerator", "tail" : "", "member" : "ml.sparkling.graph.api.generators.RandomNumbers.RandomNumberGenerator", "link" : "ml\/sparkling\/graph\/api\/generators\/RandomNumbers$.html#RandomNumberGeneratorextendsAnyRef", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/api\/generators\/RandomNumbers$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/api\/generators\/RandomNumbers$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/api\/generators\/RandomNumbers$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/api\/generators\/RandomNumbers$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/api\/generators\/RandomNumbers$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/api\/generators\/RandomNumbers$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/api\/generators\/RandomNumbers$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/api\/generators\/RandomNumbers$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/api\/generators\/RandomNumbers$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/api\/generators\/RandomNumbers$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/api\/generators\/RandomNumbers$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/api\/generators\/RandomNumbers$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/api\/generators\/RandomNumbers$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/api\/generators\/RandomNumbers$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/api\/generators\/RandomNumbers$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/api\/generators\/RandomNumbers$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/api\/generators\/RandomNumbers$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/api\/generators\/RandomNumbers$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/api\/generators\/RandomNumbers$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.fastutils" : [{"name" : "ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.fastutils.FastUtilDataTypes", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "object" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilDataTypes$.html", "members_object" : [{"label" : "FPathContainer", "tail" : "", "member" : "ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.fastutils.FastUtilDataTypes.FPathContainer", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilDataTypes$.html#FPathContainer=ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.JMap[ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.JLong,ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.fastutils.FastUtilDataTypes.FPathCollection]", "kind" : "type"}, {"label" : "FPathCollection", "tail" : "", "member" : "ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.fastutils.FastUtilDataTypes.FPathCollection", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilDataTypes$.html#FPathCollection=ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.JList[ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.fastutils.FastUtilDataTypes.FPath]", "kind" : "type"}, {"label" : "FPath", "tail" : "", "member" : "ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.fastutils.FastUtilDataTypes.FPath", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilDataTypes$.html#FPath=ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.JList[ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.JDouble]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilDataTypes$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilDataTypes$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilDataTypes$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilDataTypes$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilDataTypes$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilDataTypes$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilDataTypes$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilDataTypes$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilDataTypes$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilDataTypes$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilDataTypes$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilDataTypes$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilDataTypes$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilDataTypes$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilDataTypes$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilDataTypes$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilDataTypes$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilDataTypes$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilDataTypes$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.fastutils.FastUtilWithDistance", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "object" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithDistance$.html", "members_class" : [{"label" : "extendPathsMerging", "tail" : "(targetVertexId: VertexId, map: DataMap, vertexId: VertexId, distance: ED, map2: DataMap)(num: Numeric[ED]): DataMap", "member" : "ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.fastutils.FastUtilWithDistance.extendPathsMerging", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithDistance.html#extendPathsMerging(targetVertexId:org.apache.spark.graphx.VertexId,map:ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.fastutils.FastUtilWithDistance.DataMap,vertexId:org.apache.spark.graphx.VertexId,distance:ED,map2:ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.fastutils.FastUtilWithDistance.DataMap)(implicitnum:Numeric[ED]):ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.fastutils.FastUtilWithDistance.DataMap", "kind" : "def"}, {"label" : "min", "tail" : "(d1: JDouble, d2: JDouble): JDouble", "member" : "ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.fastutils.FastUtilWithDistance.min", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithDistance.html#min(d1:ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.JDouble,d2:ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.JDouble):ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.JDouble", "kind" : "def"}, {"label" : "mergeMessages", "tail" : "(map1: DataMap, map2: DataMap)(num: Numeric[ED]): DataMap", "member" : "ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.fastutils.FastUtilWithDistance.mergeMessages", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithDistance.html#mergeMessages(map1:ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.fastutils.FastUtilWithDistance.DataMap,map2:ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.fastutils.FastUtilWithDistance.DataMap)(implicitnum:Numeric[ED]):ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.fastutils.FastUtilWithDistance.DataMap", "kind" : "def"}, {"label" : "processNewMessages", "tail" : "(map1: DataMap, map2: DataMap)(num: Numeric[ED]): DataMap", "member" : "ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.fastutils.FastUtilWithDistance.processNewMessages", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithDistance.html#processNewMessages(map1:ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.fastutils.FastUtilWithDistance.DataMap,map2:ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.fastutils.FastUtilWithDistance.DataMap)(implicitnum:Numeric[ED]):ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.fastutils.FastUtilWithDistance.DataMap", "kind" : "def"}, {"label" : "putNewPath", "tail" : "(map: DataMap, to: VertexId, weight: ED)(num: Numeric[ED]): DataMap", "member" : "ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.fastutils.FastUtilWithDistance.putNewPath", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithDistance.html#putNewPath(map:ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.fastutils.FastUtilWithDistance.DataMap,to:org.apache.spark.graphx.VertexId,weight:ED)(implicitnum:Numeric[ED]):ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.fastutils.FastUtilWithDistance.DataMap", "kind" : "def"}, {"label" : "getNewContainerForPaths", "tail" : "(): Long2DoubleOpenHashMap", "member" : "ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.fastutils.FastUtilWithDistance.getNewContainerForPaths", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithDistance.html#getNewContainerForPaths():it.unimi.dsi.fastutil.longs.Long2DoubleOpenHashMap", "kind" : "def"}, {"label" : "EMPTY_CONTAINER", "tail" : "(): Long2DoubleOpenHashMap", "member" : "ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.fastutils.FastUtilWithDistance.EMPTY_CONTAINER", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithDistance.html#EMPTY_CONTAINER:it.unimi.dsi.fastutil.longs.Long2DoubleOpenHashMap", "kind" : "def"}, {"member" : "ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.fastutils.FastUtilWithDistance#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithDistance.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithDistance.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithDistance.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithDistance.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithDistance.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithDistance.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithDistance.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithDistance.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithDistance.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithDistance.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithDistance.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithDistance.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithDistance.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithDistance.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithDistance.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithDistance.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithDistance.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithDistance.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithDistance.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "DataMap", "tail" : "", "member" : "ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.fastutils.FastUtilWithDistance.DataMap", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithDistance$.html#DataMap=it.unimi.dsi.fastutil.longs.Long2DoubleOpenHashMap", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithDistance$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithDistance$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithDistance$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithDistance$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithDistance$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithDistance$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithDistance$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithDistance$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithDistance$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithDistance$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithDistance$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithDistance$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithDistance$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithDistance$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithDistance$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithDistance$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithDistance$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithDistance$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithDistance$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithDistance.html", "kind" : "class"}, {"name" : "ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.fastutils.FastUtilWithPath", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "members_class" : [{"label" : "extendPathsMerging", "tail" : "(targetVertexId: VertexId, map: WithPathContainer, vertexId: VertexId, distance: ED, map2: WithPathContainer)(num: Numeric[ED]): WithPathContainer", "member" : "ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.fastutils.FastUtilWithPath.extendPathsMerging", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithPath.html#extendPathsMerging(targetVertexId:org.apache.spark.graphx.VertexId,map:ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.WithPathContainer,vertexId:org.apache.spark.graphx.VertexId,distance:ED,map2:ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.WithPathContainer)(implicitnum:Numeric[ED]):ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.WithPathContainer", "kind" : "def"}, {"label" : "mergeMessages", "tail" : "(map1: WithPathContainer, map2: WithPathContainer)(num: Numeric[ED]): WithPathContainer", "member" : "ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.fastutils.FastUtilWithPath.mergeMessages", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithPath.html#mergeMessages(map1:ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.WithPathContainer,map2:ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.WithPathContainer)(implicitnum:Numeric[ED]):ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.WithPathContainer", "kind" : "def"}, {"label" : "processNewMessages", "tail" : "(map1: WithPathContainer, map2: WithPathContainer)(num: Numeric[ED]): WithPathContainer", "member" : "ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.fastutils.FastUtilWithPath.processNewMessages", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithPath.html#processNewMessages(map1:ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.WithPathContainer,map2:ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.WithPathContainer)(implicitnum:Numeric[ED]):ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.WithPathContainer", "kind" : "def"}, {"label" : "putNewPath", "tail" : "(map: WithPathContainer, to: VertexId, weight: ED)(num: Numeric[ED]): WithPathContainer", "member" : "ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.fastutils.FastUtilWithPath.putNewPath", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithPath.html#putNewPath(map:ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.WithPathContainer,to:org.apache.spark.graphx.VertexId,weight:ED)(implicitnum:Numeric[ED]):ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.WithPathContainer", "kind" : "def"}, {"label" : "getNewContainerForPaths", "tail" : "(size: Int): WithPathContainer", "member" : "ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.fastutils.FastUtilWithPath.getNewContainerForPaths", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithPath.html#getNewContainerForPaths(size:Int):ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.WithPathContainer", "kind" : "def"}, {"label" : "getNewContainerForPaths", "tail" : "(): WithPathContainer", "member" : "ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.fastutils.FastUtilWithPath.getNewContainerForPaths", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithPath.html#getNewContainerForPaths():ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.WithPathContainer", "kind" : "def"}, {"label" : "EMPTY_CONTAINER", "tail" : "(): WithPathContainer", "member" : "ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.fastutils.FastUtilWithPath.EMPTY_CONTAINER", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithPath.html#EMPTY_CONTAINER:ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.WithPathContainer", "kind" : "def"}, {"member" : "ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.fastutils.FastUtilWithPath#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithPath.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithPath.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithPath.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithPath.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithPath.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithPath.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithPath.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithPath.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithPath.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithPath.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithPath.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithPath.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithPath.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithPath.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithPath.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithPath.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithPath.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithPath.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithPath.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/pathprocessors\/fastutils\/FastUtilWithPath.html", "kind" : "class"}], "ml.sparkling.graph.operators.predicates" : [{"name" : "ml.sparkling.graph.operators.predicates.AllPathPredicate", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "object" : "ml\/sparkling\/graph\/operators\/predicates\/AllPathPredicate$.html", "members_object" : [{"label" : "apply", "tail" : "(id: VertexId): Boolean", "member" : "ml.sparkling.graph.operators.predicates.AllPathPredicate.apply", "link" : "ml\/sparkling\/graph\/operators\/predicates\/AllPathPredicate$.html#apply(id:org.apache.spark.graphx.VertexId):Boolean", "kind" : "def"}, {"label" : "apply", "tail" : "(v1: VertexId, v2: B): Boolean", "member" : "ml.sparkling.graph.operators.predicates.AllPathPredicate.apply", "link" : "ml\/sparkling\/graph\/operators\/predicates\/AllPathPredicate$.html#apply[B](v1:org.apache.spark.graphx.VertexId,v2:B):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/predicates\/AllPathPredicate$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/predicates\/AllPathPredicate$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/predicates\/AllPathPredicate$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/predicates\/AllPathPredicate$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/predicates\/AllPathPredicate$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/predicates\/AllPathPredicate$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/predicates\/AllPathPredicate$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/predicates\/AllPathPredicate$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/predicates\/AllPathPredicate$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/predicates\/AllPathPredicate$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/predicates\/AllPathPredicate$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/predicates\/AllPathPredicate$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/predicates\/AllPathPredicate$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/predicates\/AllPathPredicate$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/predicates\/AllPathPredicate$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/predicates\/AllPathPredicate$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/predicates\/AllPathPredicate$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/predicates\/AllPathPredicate$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/predicates\/AllPathPredicate$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ml.sparkling.graph.operators.predicates.ByIdPredicate", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "members_case class" : [{"label" : "apply", "tail" : "(v1: VertexId): Boolean", "member" : "ml.sparkling.graph.operators.predicates.ByIdPredicate.apply", "link" : "ml\/sparkling\/graph\/operators\/predicates\/ByIdPredicate.html#apply(v1:org.apache.spark.graphx.VertexId):Boolean", "kind" : "def"}, {"label" : "apply", "tail" : "(id: VertexId, data: B): Boolean", "member" : "ml.sparkling.graph.operators.predicates.ByIdPredicate.apply", "link" : "ml\/sparkling\/graph\/operators\/predicates\/ByIdPredicate.html#apply[B](id:org.apache.spark.graphx.VertexId,data:B):Boolean", "kind" : "def"}, {"member" : "ml.sparkling.graph.operators.predicates.ByIdPredicate#<init>", "error" : "unsupported entity"}, {"label" : "vertex", "tail" : ": VertexId", "member" : "ml.sparkling.graph.operators.predicates.ByIdPredicate.vertex", "link" : "ml\/sparkling\/graph\/operators\/predicates\/ByIdPredicate.html#vertex:org.apache.spark.graphx.VertexId", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/predicates\/ByIdPredicate.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/predicates\/ByIdPredicate.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/predicates\/ByIdPredicate.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/predicates\/ByIdPredicate.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/predicates\/ByIdPredicate.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/predicates\/ByIdPredicate.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/predicates\/ByIdPredicate.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/predicates\/ByIdPredicate.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/predicates\/ByIdPredicate.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/predicates\/ByIdPredicate.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/predicates\/ByIdPredicate.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/predicates\/ByIdPredicate.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/predicates\/ByIdPredicate.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/predicates\/ByIdPredicate.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/predicates\/ByIdPredicate.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/predicates\/ByIdPredicate.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ml\/sparkling\/graph\/operators\/predicates\/ByIdPredicate.html", "kind" : "case class"}, {"name" : "ml.sparkling.graph.operators.predicates.ByIdsPredicate", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "members_case class" : [{"label" : "apply", "tail" : "(v1: VertexId): Boolean", "member" : "ml.sparkling.graph.operators.predicates.ByIdsPredicate.apply", "link" : "ml\/sparkling\/graph\/operators\/predicates\/ByIdsPredicate.html#apply(v1:org.apache.spark.graphx.VertexId):Boolean", "kind" : "def"}, {"label" : "apply", "tail" : "(id: VertexId, data: B): Boolean", "member" : "ml.sparkling.graph.operators.predicates.ByIdsPredicate.apply", "link" : "ml\/sparkling\/graph\/operators\/predicates\/ByIdsPredicate.html#apply[B](id:org.apache.spark.graphx.VertexId,data:B):Boolean", "kind" : "def"}, {"member" : "ml.sparkling.graph.operators.predicates.ByIdsPredicate#<init>", "error" : "unsupported entity"}, {"label" : "vertex", "tail" : ": Set[VertexId]", "member" : "ml.sparkling.graph.operators.predicates.ByIdsPredicate.vertex", "link" : "ml\/sparkling\/graph\/operators\/predicates\/ByIdsPredicate.html#vertex:Set[org.apache.spark.graphx.VertexId]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/predicates\/ByIdsPredicate.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/predicates\/ByIdsPredicate.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/predicates\/ByIdsPredicate.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/predicates\/ByIdsPredicate.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/predicates\/ByIdsPredicate.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/predicates\/ByIdsPredicate.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/predicates\/ByIdsPredicate.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/predicates\/ByIdsPredicate.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/predicates\/ByIdsPredicate.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/predicates\/ByIdsPredicate.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/predicates\/ByIdsPredicate.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/predicates\/ByIdsPredicate.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/predicates\/ByIdsPredicate.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/predicates\/ByIdsPredicate.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/predicates\/ByIdsPredicate.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/predicates\/ByIdsPredicate.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ml\/sparkling\/graph\/operators\/predicates\/ByIdsPredicate.html", "kind" : "case class"}, {"name" : "ml.sparkling.graph.operators.predicates.InArrayPredicate", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "members_case class" : [{"label" : "apply", "tail" : "(v1: VertexId): Boolean", "member" : "ml.sparkling.graph.operators.predicates.InArrayPredicate.apply", "link" : "ml\/sparkling\/graph\/operators\/predicates\/InArrayPredicate.html#apply(v1:org.apache.spark.graphx.VertexId):Boolean", "kind" : "def"}, {"label" : "apply", "tail" : "(id: VertexId, data: B): Boolean", "member" : "ml.sparkling.graph.operators.predicates.InArrayPredicate.apply", "link" : "ml\/sparkling\/graph\/operators\/predicates\/InArrayPredicate.html#apply[B](id:org.apache.spark.graphx.VertexId,data:B):Boolean", "kind" : "def"}, {"member" : "ml.sparkling.graph.operators.predicates.InArrayPredicate#<init>", "error" : "unsupported entity"}, {"label" : "vertices", "tail" : ": Array[VertexId]", "member" : "ml.sparkling.graph.operators.predicates.InArrayPredicate.vertices", "link" : "ml\/sparkling\/graph\/operators\/predicates\/InArrayPredicate.html#vertices:Array[org.apache.spark.graphx.VertexId]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/predicates\/InArrayPredicate.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/predicates\/InArrayPredicate.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/predicates\/InArrayPredicate.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/predicates\/InArrayPredicate.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/predicates\/InArrayPredicate.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/predicates\/InArrayPredicate.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/predicates\/InArrayPredicate.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/predicates\/InArrayPredicate.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/predicates\/InArrayPredicate.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/predicates\/InArrayPredicate.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/predicates\/InArrayPredicate.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/predicates\/InArrayPredicate.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/predicates\/InArrayPredicate.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/predicates\/InArrayPredicate.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/predicates\/InArrayPredicate.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/predicates\/InArrayPredicate.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ml\/sparkling\/graph\/operators\/predicates\/InArrayPredicate.html", "kind" : "case class"}], "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.factory.impl" : [{"name" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.factory.impl.DefaultFlowFactory", "shortDescription" : "Created by mth on 4\/23\/17.", "members_class" : [{"label" : "create", "tail" : "(arg: CFBCVertex): CFBCFlow", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.factory.impl.DefaultFlowFactory.create", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/factory\/impl\/DefaultFlowFactory.html#create(arg:ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCVertex):ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCFlow", "kind" : "def"}, {"label" : "initPotential", "tail" : ": Double", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.factory.impl.DefaultFlowFactory.initPotential", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/factory\/impl\/DefaultFlowFactory.html#initPotential:Double", "kind" : "val"}, {"member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.factory.impl.DefaultFlowFactory#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/factory\/impl\/DefaultFlowFactory.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/factory\/impl\/DefaultFlowFactory.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/factory\/impl\/DefaultFlowFactory.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/factory\/impl\/DefaultFlowFactory.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/factory\/impl\/DefaultFlowFactory.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/factory\/impl\/DefaultFlowFactory.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/factory\/impl\/DefaultFlowFactory.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/factory\/impl\/DefaultFlowFactory.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/factory\/impl\/DefaultFlowFactory.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/factory\/impl\/DefaultFlowFactory.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/factory\/impl\/DefaultFlowFactory.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/factory\/impl\/DefaultFlowFactory.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/factory\/impl\/DefaultFlowFactory.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/factory\/impl\/DefaultFlowFactory.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/factory\/impl\/DefaultFlowFactory.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/factory\/impl\/DefaultFlowFactory.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/factory\/impl\/DefaultFlowFactory.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/factory\/impl\/DefaultFlowFactory.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/factory\/impl\/DefaultFlowFactory.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/factory\/impl\/DefaultFlowFactory.html", "kind" : "class"}], "ml.sparkling.graph.operators.measures.vertex.closenes" : [{"name" : "ml.sparkling.graph.operators.measures.vertex.closenes.Closeness", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "object" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/closenes\/Closeness$.html", "members_object" : [{"label" : "compute", "tail" : "(graph: Graph[VD, ED], vertexMeasureConfiguration: VertexMeasureConfiguration[VD, ED])(arg0: ClassTag[VD], arg1: ClassTag[ED], num: Numeric[ED]): Graph[Double, ED]", "member" : "ml.sparkling.graph.operators.measures.vertex.closenes.Closeness.compute", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/closenes\/Closeness$.html#compute[VD,ED](graph:org.apache.spark.graphx.Graph[VD,ED],vertexMeasureConfiguration:ml.sparkling.graph.api.operators.measures.VertexMeasureConfiguration[VD,ED])(implicitevidence$5:scala.reflect.ClassTag[VD],implicitevidence$6:scala.reflect.ClassTag[ED],implicitnum:Numeric[ED]):org.apache.spark.graphx.Graph[Double,ED]", "kind" : "def"}, {"label" : "computeHarmonic", "tail" : "(graph: Graph[VD, ED], vertexMeasureConfiguration: VertexMeasureConfiguration[VD, ED])(arg0: ClassTag[VD], arg1: ClassTag[ED], num: Numeric[ED]): Graph[Double, ED]", "member" : "ml.sparkling.graph.operators.measures.vertex.closenes.Closeness.computeHarmonic", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/closenes\/Closeness$.html#computeHarmonic[VD,ED](graph:org.apache.spark.graphx.Graph[VD,ED],vertexMeasureConfiguration:ml.sparkling.graph.api.operators.measures.VertexMeasureConfiguration[VD,ED])(implicitevidence$3:scala.reflect.ClassTag[VD],implicitevidence$4:scala.reflect.ClassTag[ED],implicitnum:Numeric[ED]):org.apache.spark.graphx.Graph[Double,ED]", "kind" : "def"}, {"label" : "computeUsing", "tail" : "(graph: Graph[VD, ED], closenessFunction: ClosenessFunction, pathMappingFunction: PathMappingFunction, vertexMeasureConfiguration: VertexMeasureConfiguration[VD, ED], normalize: Boolean, checkpointingFrequency: Int)(arg0: ClassTag[VD], arg1: ClassTag[ED], num: Numeric[ED]): Graph[Double, ED]", "member" : "ml.sparkling.graph.operators.measures.vertex.closenes.Closeness.computeUsing", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/closenes\/Closeness$.html#computeUsing[VD,ED](graph:org.apache.spark.graphx.Graph[VD,ED],closenessFunction:ml.sparkling.graph.operators.measures.vertex.closenes.ClosenessUtils.ClosenessFunction,pathMappingFunction:ml.sparkling.graph.operators.measures.vertex.closenes.ClosenessUtils.PathMappingFunction,vertexMeasureConfiguration:ml.sparkling.graph.api.operators.measures.VertexMeasureConfiguration[VD,ED],normalize:Boolean,checkpointingFrequency:Int)(implicitevidence$1:scala.reflect.ClassTag[VD],implicitevidence$2:scala.reflect.ClassTag[ED],implicitnum:Numeric[ED]):org.apache.spark.graphx.Graph[Double,ED]", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "ml.sparkling.graph.operators.measures.vertex.closenes.Closeness.logger", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/closenes\/Closeness$.html#logger:org.apache.log4j.Logger", "kind" : "val"}, {"label" : "compute", "tail" : "(graph: Graph[VD, ED])(arg0: ClassTag[VD], arg1: ClassTag[ED], num: Numeric[ED]): Graph[Double, ED]", "member" : "ml.sparkling.graph.api.operators.measures.VertexMeasure.compute", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/closenes\/Closeness$.html#compute[VD,ED](graph:org.apache.spark.graphx.Graph[VD,ED])(implicitevidence$1:scala.reflect.ClassTag[VD],implicitevidence$2:scala.reflect.ClassTag[ED],implicitnum:Numeric[ED]):org.apache.spark.graphx.Graph[OV,ED]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/closenes\/Closeness$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/closenes\/Closeness$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/closenes\/Closeness$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/closenes\/Closeness$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/closenes\/Closeness$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/closenes\/Closeness$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/closenes\/Closeness$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/closenes\/Closeness$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/closenes\/Closeness$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/closenes\/Closeness$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/closenes\/Closeness$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/closenes\/Closeness$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/closenes\/Closeness$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/closenes\/Closeness$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/closenes\/Closeness$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/closenes\/Closeness$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/closenes\/Closeness$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/closenes\/Closeness$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/closenes\/Closeness$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ml.sparkling.graph.operators.measures.vertex.closenes.ClosenessUtils", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "object" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/closenes\/ClosenessUtils$.html", "members_object" : [{"label" : "harmonicCloseness", "tail" : "(graphSize: Long)(pathsCount: Long, distanceSum: Double, normalize: Boolean): Double", "member" : "ml.sparkling.graph.operators.measures.vertex.closenes.ClosenessUtils.harmonicCloseness", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/closenes\/ClosenessUtils$.html#harmonicCloseness(graphSize:Long)(pathsCount:Long,distanceSum:Double,normalize:Boolean):Double", "kind" : "def"}, {"label" : "harmonicClosenessValueMapper", "tail" : "(pathSize: Double): Double", "member" : "ml.sparkling.graph.operators.measures.vertex.closenes.ClosenessUtils.harmonicClosenessValueMapper", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/closenes\/ClosenessUtils$.html#harmonicClosenessValueMapper(pathSize:Double):Double", "kind" : "def"}, {"label" : "standardClosenessValueMapper", "tail" : "(pathSize: Double): Double", "member" : "ml.sparkling.graph.operators.measures.vertex.closenes.ClosenessUtils.standardClosenessValueMapper", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/closenes\/ClosenessUtils$.html#standardClosenessValueMapper(pathSize:Double):Double", "kind" : "def"}, {"label" : "standardCloseness", "tail" : "(graphSize: Long)(pathsCount: Long, distanceSum: Double, normalize: Boolean): Double", "member" : "ml.sparkling.graph.operators.measures.vertex.closenes.ClosenessUtils.standardCloseness", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/closenes\/ClosenessUtils$.html#standardCloseness(graphSize:Long)(pathsCount:Long,distanceSum:Double,normalize:Boolean):Double", "kind" : "def"}, {"label" : "PathMappingFunction", "tail" : "", "member" : "ml.sparkling.graph.operators.measures.vertex.closenes.ClosenessUtils.PathMappingFunction", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/closenes\/ClosenessUtils$.html#PathMappingFunction=Double=>Double", "kind" : "type"}, {"label" : "ClosenessFunction", "tail" : "", "member" : "ml.sparkling.graph.operators.measures.vertex.closenes.ClosenessUtils.ClosenessFunction", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/closenes\/ClosenessUtils$.html#ClosenessFunction=(Long,Double,Boolean)=>Double", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/closenes\/ClosenessUtils$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/closenes\/ClosenessUtils$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/closenes\/ClosenessUtils$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/closenes\/ClosenessUtils$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/closenes\/ClosenessUtils$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/closenes\/ClosenessUtils$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/closenes\/ClosenessUtils$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/closenes\/ClosenessUtils$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/closenes\/ClosenessUtils$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/closenes\/ClosenessUtils$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/closenes\/ClosenessUtils$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/closenes\/ClosenessUtils$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/closenes\/ClosenessUtils$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/closenes\/ClosenessUtils$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/closenes\/ClosenessUtils$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/closenes\/ClosenessUtils$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/closenes\/ClosenessUtils$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/closenes\/ClosenessUtils$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/closenes\/ClosenessUtils$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "ml.sparkling.graph.generators.ring" : [{"name" : "ml.sparkling.graph.generators.ring.RingGenerator", "shortDescription" : "Created by Roman Bartusiak riomus@gmail.com roman.bartusiak@pwr.edu.pl on 26.04.16.", "object" : "ml\/sparkling\/graph\/generators\/ring\/RingGenerator$.html", "members_object" : [{"label" : "generate", "tail" : "(configuration: RingGeneratorConfiguration)(ctx: SparkContext): Graph[Int, Int]", "member" : "ml.sparkling.graph.generators.ring.RingGenerator.generate", "link" : "ml\/sparkling\/graph\/generators\/ring\/RingGenerator$.html#generate(configuration:ml.sparkling.graph.generators.ring.RingGeneratorConfiguration)(implicitctx:org.apache.spark.SparkContext):org.apache.spark.graphx.Graph[Int,Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/generators\/ring\/RingGenerator$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/generators\/ring\/RingGenerator$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/generators\/ring\/RingGenerator$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/generators\/ring\/RingGenerator$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/generators\/ring\/RingGenerator$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/generators\/ring\/RingGenerator$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/generators\/ring\/RingGenerator$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/generators\/ring\/RingGenerator$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/generators\/ring\/RingGenerator$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/generators\/ring\/RingGenerator$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/generators\/ring\/RingGenerator$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/generators\/ring\/RingGenerator$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/generators\/ring\/RingGenerator$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/generators\/ring\/RingGenerator$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/generators\/ring\/RingGenerator$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/generators\/ring\/RingGenerator$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/generators\/ring\/RingGenerator$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/generators\/ring\/RingGenerator$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/generators\/ring\/RingGenerator$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ml.sparkling.graph.generators.ring.RingGeneratorConfiguration", "shortDescription" : "", "members_case class" : [{"member" : "ml.sparkling.graph.generators.ring.RingGeneratorConfiguration#<init>", "error" : "unsupported entity"}, {"label" : "undirected", "tail" : ": Boolean", "member" : "ml.sparkling.graph.generators.ring.RingGeneratorConfiguration.undirected", "link" : "ml\/sparkling\/graph\/generators\/ring\/RingGeneratorConfiguration.html#undirected:Boolean", "kind" : "val"}, {"label" : "numberOfNodes", "tail" : ": Long", "member" : "ml.sparkling.graph.generators.ring.RingGeneratorConfiguration.numberOfNodes", "link" : "ml\/sparkling\/graph\/generators\/ring\/RingGeneratorConfiguration.html#numberOfNodes:Long", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/generators\/ring\/RingGeneratorConfiguration.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/generators\/ring\/RingGeneratorConfiguration.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/generators\/ring\/RingGeneratorConfiguration.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/generators\/ring\/RingGeneratorConfiguration.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/generators\/ring\/RingGeneratorConfiguration.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/generators\/ring\/RingGeneratorConfiguration.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/generators\/ring\/RingGeneratorConfiguration.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/generators\/ring\/RingGeneratorConfiguration.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/generators\/ring\/RingGeneratorConfiguration.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/generators\/ring\/RingGeneratorConfiguration.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/generators\/ring\/RingGeneratorConfiguration.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/generators\/ring\/RingGeneratorConfiguration.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/generators\/ring\/RingGeneratorConfiguration.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/generators\/ring\/RingGeneratorConfiguration.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/generators\/ring\/RingGeneratorConfiguration.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/generators\/ring\/RingGeneratorConfiguration.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ml\/sparkling\/graph\/generators\/ring\/RingGeneratorConfiguration.html", "kind" : "case class"}], "ml.sparkling.graph.api.operators.measures" : [{"name" : "ml.sparkling.graph.api.operators.measures.EdgeMeasure", "members_trait" : [{"label" : "computeWithPreprocessing", "tail" : "(graph: Graph[VD, E], treatAsUndirected: Boolean)(arg0: ClassTag[VD], arg1: ClassTag[E], ot: ClassTag[O]): Graph[V, O]", "member" : "ml.sparkling.graph.api.operators.measures.EdgeMeasure.computeWithPreprocessing", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/EdgeMeasure.html#computeWithPreprocessing[VD,E](graph:org.apache.spark.graphx.Graph[VD,E],treatAsUndirected:Boolean)(implicitevidence$4:scala.reflect.ClassTag[VD],implicitevidence$5:scala.reflect.ClassTag[E],implicitot:scala.reflect.ClassTag[O]):org.apache.spark.graphx.Graph[V,O]", "kind" : "def"}, {"label" : "compute", "tail" : "(graph: Graph[V, E], treatAsUndirected: Boolean)(arg0: ClassTag[E], ot: ClassTag[O]): Graph[V, O]", "member" : "ml.sparkling.graph.api.operators.measures.EdgeMeasure.compute", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/EdgeMeasure.html#compute[E](graph:org.apache.spark.graphx.Graph[V,E],treatAsUndirected:Boolean)(implicitevidence$1:scala.reflect.ClassTag[E],implicitot:scala.reflect.ClassTag[O]):org.apache.spark.graphx.Graph[V,O]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/EdgeMeasure.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/EdgeMeasure.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/EdgeMeasure.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/EdgeMeasure.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/EdgeMeasure.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/EdgeMeasure.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/EdgeMeasure.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/EdgeMeasure.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/EdgeMeasure.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/EdgeMeasure.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/EdgeMeasure.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/EdgeMeasure.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/EdgeMeasure.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/EdgeMeasure.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/EdgeMeasure.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/EdgeMeasure.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/EdgeMeasure.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/EdgeMeasure.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/EdgeMeasure.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "preprocess", "tail" : "(graph: Graph[VD, E], treatAsUndirected: Boolean)(arg0: ClassTag[VD], arg1: ClassTag[E]): Graph[V, E]", "member" : "ml.sparkling.graph.api.operators.measures.EdgeMeasure.preprocess", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/EdgeMeasure.html#preprocess[VD,E](graph:org.apache.spark.graphx.Graph[VD,E],treatAsUndirected:Boolean)(implicitevidence$2:scala.reflect.ClassTag[VD],implicitevidence$3:scala.reflect.ClassTag[E]):org.apache.spark.graphx.Graph[V,E]", "kind" : "abstract def"}, {"label" : "computeValue", "tail" : "(srcAttr: V, dstAttr: V, treatAsUndirected: Boolean): O", "member" : "ml.sparkling.graph.api.operators.measures.EdgeMeasure.computeValue", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/EdgeMeasure.html#computeValue(srcAttr:V,dstAttr:V,treatAsUndirected:Boolean):O", "kind" : "abstract def"}], "shortDescription" : "Similarity measure of two vertices (or measure for given edge)Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "trait" : "ml\/sparkling\/graph\/api\/operators\/measures\/EdgeMeasure.html", "kind" : "trait"}, {"name" : "ml.sparkling.graph.api.operators.measures.GraphIndependentMeasure", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/GraphIndependentMeasure.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/GraphIndependentMeasure.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/GraphIndependentMeasure.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/GraphIndependentMeasure.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/GraphIndependentMeasure.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/GraphIndependentMeasure.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/GraphIndependentMeasure.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/GraphIndependentMeasure.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/GraphIndependentMeasure.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/GraphIndependentMeasure.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/GraphIndependentMeasure.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/GraphIndependentMeasure.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/GraphIndependentMeasure.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/GraphIndependentMeasure.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/GraphIndependentMeasure.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/GraphIndependentMeasure.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/GraphIndependentMeasure.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/GraphIndependentMeasure.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/GraphIndependentMeasure.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "compute", "tail" : "(graph: Graph[V, E])(arg0: ClassTag[V], arg1: ClassTag[E]): OV", "member" : "ml.sparkling.graph.api.operators.measures.GraphIndependentMeasure.compute", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/GraphIndependentMeasure.html#compute[V,E](graph:org.apache.spark.graphx.Graph[V,E])(implicitevidence$1:scala.reflect.ClassTag[V],implicitevidence$2:scala.reflect.ClassTag[E]):OV", "kind" : "abstract def"}], "shortDescription" : "Measure computed for whole graph, that is independent from values of vertices and edgesCreated by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "trait" : "ml\/sparkling\/graph\/api\/operators\/measures\/GraphIndependentMeasure.html", "kind" : "trait"}, {"name" : "ml.sparkling.graph.api.operators.measures.VertexDependentGraphMeasure", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexDependentGraphMeasure.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexDependentGraphMeasure.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexDependentGraphMeasure.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexDependentGraphMeasure.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexDependentGraphMeasure.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexDependentGraphMeasure.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexDependentGraphMeasure.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexDependentGraphMeasure.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexDependentGraphMeasure.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexDependentGraphMeasure.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexDependentGraphMeasure.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexDependentGraphMeasure.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexDependentGraphMeasure.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexDependentGraphMeasure.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexDependentGraphMeasure.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexDependentGraphMeasure.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexDependentGraphMeasure.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexDependentGraphMeasure.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexDependentGraphMeasure.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "compute", "tail" : "(graph: Graph[V, E])(arg0: ClassTag[V], arg1: ClassTag[E]): OV", "member" : "ml.sparkling.graph.api.operators.measures.VertexDependentGraphMeasure.compute", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexDependentGraphMeasure.html#compute[V<:VE,E](graph:org.apache.spark.graphx.Graph[V,E])(implicitevidence$1:scala.reflect.ClassTag[V],implicitevidence$2:scala.reflect.ClassTag[E]):OV", "kind" : "abstract def"}], "shortDescription" : "Measure computed for graph that depends on vertex values (uses them)Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "trait" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexDependentGraphMeasure.html", "kind" : "trait"}, {"name" : "ml.sparkling.graph.api.operators.measures.VertexMeasure", "members_trait" : [{"label" : "compute", "tail" : "(graph: Graph[VD, ED])(arg0: ClassTag[VD], arg1: ClassTag[ED], num: Numeric[ED]): Graph[OV, ED]", "member" : "ml.sparkling.graph.api.operators.measures.VertexMeasure.compute", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasure.html#compute[VD,ED](graph:org.apache.spark.graphx.Graph[VD,ED])(implicitevidence$1:scala.reflect.ClassTag[VD],implicitevidence$2:scala.reflect.ClassTag[ED],implicitnum:Numeric[ED]):org.apache.spark.graphx.Graph[OV,ED]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasure.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasure.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasure.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasure.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasure.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasure.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasure.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasure.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasure.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasure.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasure.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasure.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasure.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasure.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasure.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasure.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasure.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasure.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasure.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "compute", "tail" : "(graph: Graph[VD, ED], vertexMeasureConfiguration: VertexMeasureConfiguration[VD, ED])(arg0: ClassTag[VD], arg1: ClassTag[ED], num: Numeric[ED]): Graph[OV, ED]", "member" : "ml.sparkling.graph.api.operators.measures.VertexMeasure.compute", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasure.html#compute[VD,ED](graph:org.apache.spark.graphx.Graph[VD,ED],vertexMeasureConfiguration:ml.sparkling.graph.api.operators.measures.VertexMeasureConfiguration[VD,ED])(implicitevidence$3:scala.reflect.ClassTag[VD],implicitevidence$4:scala.reflect.ClassTag[ED],implicitnum:Numeric[ED]):org.apache.spark.graphx.Graph[OV,ED]", "kind" : "abstract def"}], "shortDescription" : "Measure computed for each vertex of graphCreated by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "trait" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasure.html", "kind" : "trait"}, {"name" : "ml.sparkling.graph.api.operators.measures.VertexMeasureConfiguration", "shortDescription" : "Configuration of vertex measure alghoritmsCreated by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "object" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasureConfiguration$.html", "members_object" : [{"label" : "apply", "tail" : "(bucketSizeProvider: BucketSizeProvider[VD, ED])(arg0: ClassTag[VD], arg1: ClassTag[ED]): VertexMeasureConfiguration[VD, ED]", "member" : "ml.sparkling.graph.api.operators.measures.VertexMeasureConfiguration.apply", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasureConfiguration$.html#apply[VD,ED](bucketSizeProvider:ml.sparkling.graph.api.operators.IterativeComputation.BucketSizeProvider[VD,ED])(implicitevidence$9:scala.reflect.ClassTag[VD],implicitevidence$10:scala.reflect.ClassTag[ED]):ml.sparkling.graph.api.operators.measures.VertexMeasureConfiguration[VD,ED]", "kind" : "def"}, {"label" : "apply", "tail" : "(treatAsUndirected: Boolean, bucketSizeProvider: BucketSizeProvider[VD, ED])(arg0: ClassTag[VD], arg1: ClassTag[ED]): VertexMeasureConfiguration[VD, ED]", "member" : "ml.sparkling.graph.api.operators.measures.VertexMeasureConfiguration.apply", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasureConfiguration$.html#apply[VD,ED](treatAsUndirected:Boolean,bucketSizeProvider:ml.sparkling.graph.api.operators.IterativeComputation.BucketSizeProvider[VD,ED])(implicitevidence$7:scala.reflect.ClassTag[VD],implicitevidence$8:scala.reflect.ClassTag[ED]):ml.sparkling.graph.api.operators.measures.VertexMeasureConfiguration[VD,ED]", "kind" : "def"}, {"label" : "apply", "tail" : "(treatAsUndirected: Boolean)(arg0: ClassTag[VD], arg1: ClassTag[ED]): VertexMeasureConfiguration[VD, ED]", "member" : "ml.sparkling.graph.api.operators.measures.VertexMeasureConfiguration.apply", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasureConfiguration$.html#apply[VD,ED](treatAsUndirected:Boolean)(implicitevidence$5:scala.reflect.ClassTag[VD],implicitevidence$6:scala.reflect.ClassTag[ED]):ml.sparkling.graph.api.operators.measures.VertexMeasureConfiguration[VD,ED]", "kind" : "def"}, {"label" : "apply", "tail" : "()(arg0: ClassTag[VD], arg1: ClassTag[ED]): VertexMeasureConfiguration[VD, ED]", "member" : "ml.sparkling.graph.api.operators.measures.VertexMeasureConfiguration.apply", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasureConfiguration$.html#apply[VD,ED]()(implicitevidence$3:scala.reflect.ClassTag[VD],implicitevidence$4:scala.reflect.ClassTag[ED]):ml.sparkling.graph.api.operators.measures.VertexMeasureConfiguration[VD,ED]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasureConfiguration$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasureConfiguration$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasureConfiguration$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasureConfiguration$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasureConfiguration$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasureConfiguration$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasureConfiguration$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasureConfiguration$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasureConfiguration$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasureConfiguration$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasureConfiguration$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasureConfiguration$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasureConfiguration$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasureConfiguration$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasureConfiguration$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasureConfiguration$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasureConfiguration$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasureConfiguration$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasureConfiguration$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "ml.sparkling.graph.api.operators.measures.VertexMeasureConfiguration#<init>", "error" : "unsupported entity"}, {"label" : "treatAsUndirected", "tail" : ": Boolean", "member" : "ml.sparkling.graph.api.operators.measures.VertexMeasureConfiguration.treatAsUndirected", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasureConfiguration.html#treatAsUndirected:Boolean", "kind" : "val"}, {"label" : "bucketSizeProvider", "tail" : ": BucketSizeProvider[VD, ED]", "member" : "ml.sparkling.graph.api.operators.measures.VertexMeasureConfiguration.bucketSizeProvider", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasureConfiguration.html#bucketSizeProvider:ml.sparkling.graph.api.operators.IterativeComputation.BucketSizeProvider[VD,ED]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasureConfiguration.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasureConfiguration.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasureConfiguration.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasureConfiguration.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasureConfiguration.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasureConfiguration.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasureConfiguration.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasureConfiguration.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasureConfiguration.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasureConfiguration.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasureConfiguration.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasureConfiguration.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasureConfiguration.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasureConfiguration.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasureConfiguration.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasureConfiguration.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ml\/sparkling\/graph\/api\/operators\/measures\/VertexMeasureConfiguration.html", "kind" : "case class"}], "ml.sparkling.graph.loaders.csv.utils" : [{"name" : "ml.sparkling.graph.loaders.csv.utils.DefaultTransformers", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "object" : "ml\/sparkling\/graph\/loaders\/csv\/utils\/DefaultTransformers$.html", "members_object" : [{"label" : "numberToVertexId", "tail" : "(any: VD): VertexId", "member" : "ml.sparkling.graph.loaders.csv.utils.DefaultTransformers.numberToVertexId", "link" : "ml\/sparkling\/graph\/loaders\/csv\/utils\/DefaultTransformers$.html#numberToVertexId[VD](any:VD):org.apache.spark.graphx.VertexId", "kind" : "def"}, {"label" : "defaultEdgeAttribute", "tail" : "(row: Row): Double", "member" : "ml.sparkling.graph.loaders.csv.utils.DefaultTransformers.defaultEdgeAttribute", "link" : "ml\/sparkling\/graph\/loaders\/csv\/utils\/DefaultTransformers$.html#defaultEdgeAttribute(row:org.apache.spark.sql.Row):Double", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/loaders\/csv\/utils\/DefaultTransformers$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/loaders\/csv\/utils\/DefaultTransformers$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/loaders\/csv\/utils\/DefaultTransformers$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/loaders\/csv\/utils\/DefaultTransformers$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/loaders\/csv\/utils\/DefaultTransformers$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/loaders\/csv\/utils\/DefaultTransformers$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/loaders\/csv\/utils\/DefaultTransformers$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/loaders\/csv\/utils\/DefaultTransformers$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/loaders\/csv\/utils\/DefaultTransformers$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/loaders\/csv\/utils\/DefaultTransformers$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/loaders\/csv\/utils\/DefaultTransformers$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/loaders\/csv\/utils\/DefaultTransformers$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/loaders\/csv\/utils\/DefaultTransformers$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/loaders\/csv\/utils\/DefaultTransformers$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/loaders\/csv\/utils\/DefaultTransformers$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/loaders\/csv\/utils\/DefaultTransformers$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/loaders\/csv\/utils\/DefaultTransformers$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/loaders\/csv\/utils\/DefaultTransformers$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/loaders\/csv\/utils\/DefaultTransformers$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.predicate" : [{"name" : "ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.predicate.EdmondsBCPredicate", "shortDescription" : "Created by mth on 3\/15\/17.", "members_class" : [{"label" : "applyMessages", "tail" : "(vertexId: VertexId, date: EdmondsVertex, message: EdmondsMessage): EdmondsVertex", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.predicate.EdmondsBCPredicate.applyMessages", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/predicate\/EdmondsBCPredicate.html#applyMessages(vertexId:org.apache.spark.graphx.VertexId,date:ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.struct.EdmondsVertex,message:ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.struct.messages.EdmondsMessage):ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.struct.EdmondsVertex", "kind" : "def"}, {"label" : "getInitialData", "tail" : "(vertexId: VertexId, attr: EdmondsVertex): (VertexId) ⇒ EdmondsVertex", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.predicate.EdmondsBCPredicate.getInitialData", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/predicate\/EdmondsBCPredicate.html#getInitialData(vertexId:org.apache.spark.graphx.VertexId,attr:ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.struct.EdmondsVertex):org.apache.spark.graphx.VertexId=>ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.struct.EdmondsVertex", "kind" : "def"}, {"member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.predicate.EdmondsBCPredicate#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/predicate\/EdmondsBCPredicate.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/predicate\/EdmondsBCPredicate.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/predicate\/EdmondsBCPredicate.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/predicate\/EdmondsBCPredicate.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/predicate\/EdmondsBCPredicate.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/predicate\/EdmondsBCPredicate.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/predicate\/EdmondsBCPredicate.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/predicate\/EdmondsBCPredicate.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/predicate\/EdmondsBCPredicate.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/predicate\/EdmondsBCPredicate.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/predicate\/EdmondsBCPredicate.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/predicate\/EdmondsBCPredicate.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/predicate\/EdmondsBCPredicate.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/predicate\/EdmondsBCPredicate.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/predicate\/EdmondsBCPredicate.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/predicate\/EdmondsBCPredicate.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/predicate\/EdmondsBCPredicate.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/predicate\/EdmondsBCPredicate.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/predicate\/EdmondsBCPredicate.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/predicate\/EdmondsBCPredicate.html", "kind" : "class"}], "ml.sparkling.graph.api.operators.algorithms.shortestpaths" : [{"name" : "ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPaths", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/shortestpaths\/ShortestPaths.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/shortestpaths\/ShortestPaths.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/shortestpaths\/ShortestPaths.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/shortestpaths\/ShortestPaths.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/shortestpaths\/ShortestPaths.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/shortestpaths\/ShortestPaths.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/shortestpaths\/ShortestPaths.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/shortestpaths\/ShortestPaths.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/shortestpaths\/ShortestPaths.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/shortestpaths\/ShortestPaths.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/shortestpaths\/ShortestPaths.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/shortestpaths\/ShortestPaths.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/shortestpaths\/ShortestPaths.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/shortestpaths\/ShortestPaths.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/shortestpaths\/ShortestPaths.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/shortestpaths\/ShortestPaths.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/shortestpaths\/ShortestPaths.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/shortestpaths\/ShortestPaths.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/shortestpaths\/ShortestPaths.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "compute", "tail" : "(graph: Graph[VD, ED], vertexPredicate: VertexPredicate[VD], treatAsUndirected: Boolean)(arg0: ClassTag[ED], num: Numeric[ED]): Graph[WithPathContainer, ED]", "member" : "ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPaths.compute", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/shortestpaths\/ShortestPaths.html#compute[VD,ED](graph:org.apache.spark.graphx.Graph[VD,ED],vertexPredicate:ml.sparkling.graph.api.operators.IterativeComputation.VertexPredicate[VD],treatAsUndirected:Boolean)(implicitevidence$1:scala.reflect.ClassTag[ED],implicitnum:Numeric[ED]):org.apache.spark.graphx.Graph[ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.WithPathContainer,ED]", "kind" : "abstract def"}], "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "trait" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/shortestpaths\/ShortestPaths.html", "kind" : "trait"}, {"name" : "ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "object" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/shortestpaths\/ShortestPathsTypes$.html", "members_object" : [{"label" : "WithPathContainer", "tail" : "", "member" : "ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.WithPathContainer", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/shortestpaths\/ShortestPathsTypes$.html#WithPathContainer=ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.JMap[ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.JLong,ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.JPathCollection]", "kind" : "type"}, {"label" : "JPathCollection", "tail" : "", "member" : "ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.JPathCollection", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/shortestpaths\/ShortestPathsTypes$.html#JPathCollection=ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.JSet[ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.JPath]", "kind" : "type"}, {"label" : "JPath", "tail" : "", "member" : "ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.JPath", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/shortestpaths\/ShortestPathsTypes$.html#JPath=ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.JList[ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.JDouble]", "kind" : "type"}, {"label" : "JCollection", "tail" : "", "member" : "ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.JCollection", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/shortestpaths\/ShortestPathsTypes$.html#JCollection[T]=java.util.Collection[T]", "kind" : "type"}, {"label" : "JList", "tail" : "", "member" : "ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.JList", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/shortestpaths\/ShortestPathsTypes$.html#JList[T]=java.util.List[T]", "kind" : "type"}, {"label" : "JSet", "tail" : "", "member" : "ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.JSet", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/shortestpaths\/ShortestPathsTypes$.html#JSet[T]=java.util.Set[T]", "kind" : "type"}, {"label" : "JDouble", "tail" : "", "member" : "ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.JDouble", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/shortestpaths\/ShortestPathsTypes$.html#JDouble=Double", "kind" : "type"}, {"label" : "JLong", "tail" : "", "member" : "ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.JLong", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/shortestpaths\/ShortestPathsTypes$.html#JLong=Long", "kind" : "type"}, {"label" : "JMap", "tail" : "", "member" : "ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.JMap", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/shortestpaths\/ShortestPathsTypes$.html#JMap[K,V]=java.util.Map[K,V]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/shortestpaths\/ShortestPathsTypes$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/shortestpaths\/ShortestPathsTypes$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/shortestpaths\/ShortestPathsTypes$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/shortestpaths\/ShortestPathsTypes$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/shortestpaths\/ShortestPathsTypes$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/shortestpaths\/ShortestPathsTypes$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/shortestpaths\/ShortestPathsTypes$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/shortestpaths\/ShortestPathsTypes$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/shortestpaths\/ShortestPathsTypes$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/shortestpaths\/ShortestPathsTypes$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/shortestpaths\/ShortestPathsTypes$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/shortestpaths\/ShortestPathsTypes$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/shortestpaths\/ShortestPathsTypes$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/shortestpaths\/ShortestPathsTypes$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/shortestpaths\/ShortestPathsTypes$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/shortestpaths\/ShortestPathsTypes$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/shortestpaths\/ShortestPathsTypes$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/shortestpaths\/ShortestPathsTypes$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/shortestpaths\/ShortestPathsTypes$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "ml.sparkling.graph.operators.measures.edge" : [{"name" : "ml.sparkling.graph.operators.measures.edge.AdamicAdar", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "object" : "ml\/sparkling\/graph\/operators\/measures\/edge\/AdamicAdar$.html", "members_object" : [{"label" : "preprocess", "tail" : "(graph: Graph[VD, E], treatAsUndirected: Boolean)(arg0: ClassTag[VD], arg1: ClassTag[E]): Graph[NeighboursMap, E]", "member" : "ml.sparkling.graph.operators.measures.edge.AdamicAdar.preprocess", "link" : "ml\/sparkling\/graph\/operators\/measures\/edge\/AdamicAdar$.html#preprocess[VD,E](graph:org.apache.spark.graphx.Graph[VD,E],treatAsUndirected:Boolean)(implicitevidence$1:scala.reflect.ClassTag[VD],implicitevidence$2:scala.reflect.ClassTag[E]):org.apache.spark.graphx.Graph[ml.sparkling.graph.operators.measures.utils.NeighboursUtils.NeighboursMap,E]", "kind" : "def"}, {"label" : "computeValue", "tail" : "(srcAttr: NeighboursMap, dstAttr: NeighboursMap, treatAsUndirected: Boolean): Double", "member" : "ml.sparkling.graph.operators.measures.edge.AdamicAdar.computeValue", "link" : "ml\/sparkling\/graph\/operators\/measures\/edge\/AdamicAdar$.html#computeValue(srcAttr:ml.sparkling.graph.operators.measures.utils.NeighboursUtils.NeighboursMap,dstAttr:ml.sparkling.graph.operators.measures.utils.NeighboursUtils.NeighboursMap,treatAsUndirected:Boolean):Double", "kind" : "def"}, {"label" : "computeWithPreprocessing", "tail" : "(graph: Graph[VD, E], treatAsUndirected: Boolean)(arg0: ClassTag[VD], arg1: ClassTag[E], ot: ClassTag[Double]): Graph[NeighboursMap, Double]", "member" : "ml.sparkling.graph.api.operators.measures.EdgeMeasure.computeWithPreprocessing", "link" : "ml\/sparkling\/graph\/operators\/measures\/edge\/AdamicAdar$.html#computeWithPreprocessing[VD,E](graph:org.apache.spark.graphx.Graph[VD,E],treatAsUndirected:Boolean)(implicitevidence$4:scala.reflect.ClassTag[VD],implicitevidence$5:scala.reflect.ClassTag[E],implicitot:scala.reflect.ClassTag[O]):org.apache.spark.graphx.Graph[V,O]", "kind" : "def"}, {"label" : "compute", "tail" : "(graph: Graph[NeighboursMap, E], treatAsUndirected: Boolean)(arg0: ClassTag[E], ot: ClassTag[Double]): Graph[NeighboursMap, Double]", "member" : "ml.sparkling.graph.api.operators.measures.EdgeMeasure.compute", "link" : "ml\/sparkling\/graph\/operators\/measures\/edge\/AdamicAdar$.html#compute[E](graph:org.apache.spark.graphx.Graph[V,E],treatAsUndirected:Boolean)(implicitevidence$1:scala.reflect.ClassTag[E],implicitot:scala.reflect.ClassTag[O]):org.apache.spark.graphx.Graph[V,O]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/measures\/edge\/AdamicAdar$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/measures\/edge\/AdamicAdar$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/measures\/edge\/AdamicAdar$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/measures\/edge\/AdamicAdar$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/measures\/edge\/AdamicAdar$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/measures\/edge\/AdamicAdar$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/measures\/edge\/AdamicAdar$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/edge\/AdamicAdar$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/edge\/AdamicAdar$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/edge\/AdamicAdar$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/measures\/edge\/AdamicAdar$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/measures\/edge\/AdamicAdar$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/measures\/edge\/AdamicAdar$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/measures\/edge\/AdamicAdar$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/measures\/edge\/AdamicAdar$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/measures\/edge\/AdamicAdar$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/measures\/edge\/AdamicAdar$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/edge\/AdamicAdar$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/edge\/AdamicAdar$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ml.sparkling.graph.operators.measures.edge.CommonNeighbours", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "object" : "ml\/sparkling\/graph\/operators\/measures\/edge\/CommonNeighbours$.html", "members_object" : [{"label" : "preprocess", "tail" : "(graph: Graph[VD, E], treatAsUndirected: Boolean)(arg0: ClassTag[VD], arg1: ClassTag[E]): Graph[NeighbourSet, E]", "member" : "ml.sparkling.graph.operators.measures.edge.CommonNeighbours.preprocess", "link" : "ml\/sparkling\/graph\/operators\/measures\/edge\/CommonNeighbours$.html#preprocess[VD,E](graph:org.apache.spark.graphx.Graph[VD,E],treatAsUndirected:Boolean)(implicitevidence$1:scala.reflect.ClassTag[VD],implicitevidence$2:scala.reflect.ClassTag[E]):org.apache.spark.graphx.Graph[ml.sparkling.graph.operators.measures.utils.NeighboursUtils.NeighbourSet,E]", "kind" : "def"}, {"label" : "computeValue", "tail" : "(srcAttr: NeighbourSet, dstAttr: NeighbourSet, treatAsUndirected: Boolean): Int", "member" : "ml.sparkling.graph.operators.measures.edge.CommonNeighbours.computeValue", "link" : "ml\/sparkling\/graph\/operators\/measures\/edge\/CommonNeighbours$.html#computeValue(srcAttr:ml.sparkling.graph.operators.measures.utils.NeighboursUtils.NeighbourSet,dstAttr:ml.sparkling.graph.operators.measures.utils.NeighboursUtils.NeighbourSet,treatAsUndirected:Boolean):Int", "kind" : "def"}, {"label" : "computeWithPreprocessing", "tail" : "(graph: Graph[VD, E], treatAsUndirected: Boolean)(arg0: ClassTag[VD], arg1: ClassTag[E], ot: ClassTag[Int]): Graph[NeighbourSet, Int]", "member" : "ml.sparkling.graph.api.operators.measures.EdgeMeasure.computeWithPreprocessing", "link" : "ml\/sparkling\/graph\/operators\/measures\/edge\/CommonNeighbours$.html#computeWithPreprocessing[VD,E](graph:org.apache.spark.graphx.Graph[VD,E],treatAsUndirected:Boolean)(implicitevidence$4:scala.reflect.ClassTag[VD],implicitevidence$5:scala.reflect.ClassTag[E],implicitot:scala.reflect.ClassTag[O]):org.apache.spark.graphx.Graph[V,O]", "kind" : "def"}, {"label" : "compute", "tail" : "(graph: Graph[NeighbourSet, E], treatAsUndirected: Boolean)(arg0: ClassTag[E], ot: ClassTag[Int]): Graph[NeighbourSet, Int]", "member" : "ml.sparkling.graph.api.operators.measures.EdgeMeasure.compute", "link" : "ml\/sparkling\/graph\/operators\/measures\/edge\/CommonNeighbours$.html#compute[E](graph:org.apache.spark.graphx.Graph[V,E],treatAsUndirected:Boolean)(implicitevidence$1:scala.reflect.ClassTag[E],implicitot:scala.reflect.ClassTag[O]):org.apache.spark.graphx.Graph[V,O]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/measures\/edge\/CommonNeighbours$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/measures\/edge\/CommonNeighbours$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/measures\/edge\/CommonNeighbours$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/measures\/edge\/CommonNeighbours$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/measures\/edge\/CommonNeighbours$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/measures\/edge\/CommonNeighbours$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/measures\/edge\/CommonNeighbours$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/edge\/CommonNeighbours$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/edge\/CommonNeighbours$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/edge\/CommonNeighbours$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/measures\/edge\/CommonNeighbours$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/measures\/edge\/CommonNeighbours$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/measures\/edge\/CommonNeighbours$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/measures\/edge\/CommonNeighbours$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/measures\/edge\/CommonNeighbours$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/measures\/edge\/CommonNeighbours$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/measures\/edge\/CommonNeighbours$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/edge\/CommonNeighbours$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/edge\/CommonNeighbours$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "ml.sparkling.graph.operators.algorithms.bfs" : [{"name" : "ml.sparkling.graph.operators.algorithms.bfs.BFSShortestPath", "shortDescription" : "Created by mth on 3\/13\/17.", "members_class" : [{"label" : "computeSingleSelectedSourceBFS", "tail" : "(graph: Graph[VD, ED], source: VertexId): Graph[VD, ED]", "member" : "ml.sparkling.graph.operators.algorithms.bfs.BFSShortestPath.computeSingleSelectedSourceBFS", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/BFSShortestPath.html#computeSingleSelectedSourceBFS(graph:org.apache.spark.graphx.Graph[VD,ED],source:org.apache.spark.graphx.VertexId):org.apache.spark.graphx.Graph[VD,ED]", "kind" : "def"}, {"member" : "ml.sparkling.graph.operators.algorithms.bfs.BFSShortestPath#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/BFSShortestPath.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/BFSShortestPath.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/BFSShortestPath.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/BFSShortestPath.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/BFSShortestPath.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/BFSShortestPath.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/BFSShortestPath.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/BFSShortestPath.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/BFSShortestPath.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/BFSShortestPath.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/BFSShortestPath.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/BFSShortestPath.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/BFSShortestPath.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/BFSShortestPath.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/BFSShortestPath.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/BFSShortestPath.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/BFSShortestPath.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/BFSShortestPath.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/BFSShortestPath.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/BFSShortestPath.html", "kind" : "class"}], "ml.sparkling.graph.operators" : [{"name" : "ml.sparkling.graph.operators.OperatorsDSL", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "object" : "ml\/sparkling\/graph\/operators\/OperatorsDSL$.html", "members_object" : [{"label" : "DSL", "tail" : "", "member" : "ml.sparkling.graph.operators.OperatorsDSL.DSL", "link" : "ml\/sparkling\/graph\/operators\/OperatorsDSL$.html#DSL[VD,ED]extendsAnyRef", "kind" : "implicit class"}, {"label" : "ModularityDSL", "tail" : "", "member" : "ml.sparkling.graph.operators.OperatorsDSL.ModularityDSL", "link" : "ml\/sparkling\/graph\/operators\/OperatorsDSL$.html#ModularityDSL[E]extendsAnyRef", "kind" : "implicit class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/OperatorsDSL$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/OperatorsDSL$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/OperatorsDSL$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/OperatorsDSL$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/OperatorsDSL$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/OperatorsDSL$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/OperatorsDSL$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/OperatorsDSL$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/OperatorsDSL$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/OperatorsDSL$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/OperatorsDSL$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/OperatorsDSL$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/OperatorsDSL$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/OperatorsDSL$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/OperatorsDSL$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/OperatorsDSL$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/OperatorsDSL$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/OperatorsDSL$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/OperatorsDSL$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "ml.sparkling.graph.operators.algorithms.aproximation" : [{"name" : "ml.sparkling.graph.operators.algorithms.aproximation.AnyMatchingComponentPredicate", "shortDescription" : "Created by  Roman Bartusiak <riomus@gmail.com> on 07.02.17.", "members_case class" : [{"label" : "apply", "tail" : "(id: VertexId, data: B): Boolean", "member" : "ml.sparkling.graph.operators.algorithms.aproximation.AnyMatchingComponentPredicate.apply", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/aproximation\/AnyMatchingComponentPredicate.html#apply[B<:ml.sparkling.graph.api.operators.algorithms.coarsening.CoarseningAlgorithm.Component](id:org.apache.spark.graphx.VertexId,data:B):Boolean", "kind" : "def"}, {"member" : "ml.sparkling.graph.operators.algorithms.aproximation.AnyMatchingComponentPredicate#<init>", "error" : "unsupported entity"}, {"label" : "predicate", "tail" : ": SimpleVertexPredicate", "member" : "ml.sparkling.graph.operators.algorithms.aproximation.AnyMatchingComponentPredicate.predicate", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/aproximation\/AnyMatchingComponentPredicate.html#predicate:ml.sparkling.graph.api.operators.IterativeComputation.SimpleVertexPredicate", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/aproximation\/AnyMatchingComponentPredicate.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/aproximation\/AnyMatchingComponentPredicate.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/aproximation\/AnyMatchingComponentPredicate.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/aproximation\/AnyMatchingComponentPredicate.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/aproximation\/AnyMatchingComponentPredicate.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/aproximation\/AnyMatchingComponentPredicate.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/aproximation\/AnyMatchingComponentPredicate.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/aproximation\/AnyMatchingComponentPredicate.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/aproximation\/AnyMatchingComponentPredicate.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/aproximation\/AnyMatchingComponentPredicate.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/aproximation\/AnyMatchingComponentPredicate.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/aproximation\/AnyMatchingComponentPredicate.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/aproximation\/AnyMatchingComponentPredicate.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/aproximation\/AnyMatchingComponentPredicate.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/aproximation\/AnyMatchingComponentPredicate.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/aproximation\/AnyMatchingComponentPredicate.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ml\/sparkling\/graph\/operators\/algorithms\/aproximation\/AnyMatchingComponentPredicate.html", "kind" : "case class"}, {"name" : "ml.sparkling.graph.operators.algorithms.aproximation.ApproximatedShortestPathsAlgorithm", "shortDescription" : "Created by  Roman Bartusiak <riomus@gmail.com> on 07.02.17.", "object" : "ml\/sparkling\/graph\/operators\/algorithms\/aproximation\/ApproximatedShortestPathsAlgorithm$.html", "members_object" : [{"label" : "computeAPSPToDirectory", "tail" : "(graph: Graph[VD, ED], outDirectory: String, treatAsUndirected: Boolean, bucketSize: Long)(arg0: ClassTag[VD], arg1: ClassTag[ED], num: Numeric[ED]): Unit", "member" : "ml.sparkling.graph.operators.algorithms.aproximation.ApproximatedShortestPathsAlgorithm.computeAPSPToDirectory", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/aproximation\/ApproximatedShortestPathsAlgorithm$.html#computeAPSPToDirectory[VD,ED](graph:org.apache.spark.graphx.Graph[VD,ED],outDirectory:String,treatAsUndirected:Boolean,bucketSize:Long)(implicitevidence$17:scala.reflect.ClassTag[VD],implicitevidence$18:scala.reflect.ClassTag[ED],implicitnum:Numeric[ED]):Unit", "kind" : "def"}, {"label" : "computeShortestPathsLengthsIterative", "tail" : "(graph: Graph[VD, ED], bucketSizeProvider: BucketSizeProvider[Component, ED], treatAsUndirected: Boolean, modifier: PathModifier)(arg0: ClassTag[VD], arg1: ClassTag[ED], num: Numeric[ED]): Graph[Iterable[(VertexId, JDouble)], ED]", "member" : "ml.sparkling.graph.operators.algorithms.aproximation.ApproximatedShortestPathsAlgorithm.computeShortestPathsLengthsIterative", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/aproximation\/ApproximatedShortestPathsAlgorithm$.html#computeShortestPathsLengthsIterative[VD,ED](graph:org.apache.spark.graphx.Graph[VD,ED],bucketSizeProvider:ml.sparkling.graph.api.operators.IterativeComputation.BucketSizeProvider[ml.sparkling.graph.api.operators.algorithms.coarsening.CoarseningAlgorithm.Component,ED],treatAsUndirected:Boolean,modifier:ml.sparkling.graph.operators.algorithms.aproximation.ApproximatedShortestPathsAlgorithm.PathModifier)(implicitevidence$15:scala.reflect.ClassTag[VD],implicitevidence$16:scala.reflect.ClassTag[ED],implicitnum:Numeric[ED]):org.apache.spark.graphx.Graph[Iterable[(org.apache.spark.graphx.VertexId,ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.JDouble)],ED]", "kind" : "def"}, {"label" : "computeShortestPathsLengthsIterativeUsing", "tail" : "(graph: Graph[VD, ED], coarsedGraph: Graph[Component, ED], bucketSizeProvider: BucketSizeProvider[Component, ED], treatAsUndirected: Boolean, modifier: PathModifier)(arg0: ClassTag[VD], arg1: ClassTag[ED], num: Numeric[ED]): Graph[Iterable[(VertexId, JDouble)], ED]", "member" : "ml.sparkling.graph.operators.algorithms.aproximation.ApproximatedShortestPathsAlgorithm.computeShortestPathsLengthsIterativeUsing", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/aproximation\/ApproximatedShortestPathsAlgorithm$.html#computeShortestPathsLengthsIterativeUsing[VD,ED](graph:org.apache.spark.graphx.Graph[VD,ED],coarsedGraph:org.apache.spark.graphx.Graph[ml.sparkling.graph.api.operators.algorithms.coarsening.CoarseningAlgorithm.Component,ED],bucketSizeProvider:ml.sparkling.graph.api.operators.IterativeComputation.BucketSizeProvider[ml.sparkling.graph.api.operators.algorithms.coarsening.CoarseningAlgorithm.Component,ED],treatAsUndirected:Boolean,modifier:ml.sparkling.graph.operators.algorithms.aproximation.ApproximatedShortestPathsAlgorithm.PathModifier)(implicitevidence$13:scala.reflect.ClassTag[VD],implicitevidence$14:scala.reflect.ClassTag[ED],implicitnum:Numeric[ED]):org.apache.spark.graphx.Graph[Iterable[(org.apache.spark.graphx.VertexId,ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.JDouble)],ED]", "kind" : "def"}, {"label" : "computeShortestPaths", "tail" : "(graph: Graph[VD, ED], vertexPredicate: SimpleVertexPredicate, treatAsUndirected: Boolean, modifier: PathModifier)(arg0: ClassTag[VD], arg1: ClassTag[ED], num: Numeric[ED]): Graph[Iterable[(VertexId, JDouble)], ED]", "member" : "ml.sparkling.graph.operators.algorithms.aproximation.ApproximatedShortestPathsAlgorithm.computeShortestPaths", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/aproximation\/ApproximatedShortestPathsAlgorithm$.html#computeShortestPaths[VD,ED](graph:org.apache.spark.graphx.Graph[VD,ED],vertexPredicate:ml.sparkling.graph.api.operators.IterativeComputation.SimpleVertexPredicate,treatAsUndirected:Boolean,modifier:ml.sparkling.graph.operators.algorithms.aproximation.ApproximatedShortestPathsAlgorithm.PathModifier)(implicitevidence$11:scala.reflect.ClassTag[VD],implicitevidence$12:scala.reflect.ClassTag[ED],implicitnum:Numeric[ED]):org.apache.spark.graphx.Graph[Iterable[(org.apache.spark.graphx.VertexId,ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.JDouble)],ED]", "kind" : "def"}, {"label" : "computeSingleShortestPathsLengths", "tail" : "(graph: Graph[VD, ED], vertexId: VertexId, treatAsUndirected: Boolean, modifier: PathModifier)(arg0: ClassTag[VD], arg1: ClassTag[ED], num: Numeric[ED]): Graph[Iterable[(VertexId, JDouble)], ED]", "member" : "ml.sparkling.graph.operators.algorithms.aproximation.ApproximatedShortestPathsAlgorithm.computeSingleShortestPathsLengths", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/aproximation\/ApproximatedShortestPathsAlgorithm$.html#computeSingleShortestPathsLengths[VD,ED](graph:org.apache.spark.graphx.Graph[VD,ED],vertexId:org.apache.spark.graphx.VertexId,treatAsUndirected:Boolean,modifier:ml.sparkling.graph.operators.algorithms.aproximation.ApproximatedShortestPathsAlgorithm.PathModifier)(implicitevidence$9:scala.reflect.ClassTag[VD],implicitevidence$10:scala.reflect.ClassTag[ED],implicitnum:Numeric[ED]):org.apache.spark.graphx.Graph[Iterable[(org.apache.spark.graphx.VertexId,ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.JDouble)],ED]", "kind" : "def"}, {"label" : "aproximatePaths", "tail" : "(graph: Graph[VD, ED], coarsedGraph: Graph[Component, ED], coarsedShortestPaths: Graph[DataMap, ED], modifier: PathModifier, vertexPredicate: SimpleVertexPredicate, treatAsUndirected: Boolean)(arg0: ClassTag[ED], arg1: ClassTag[VD], num: Numeric[ED]): Graph[Iterable[(VertexId, JDouble)], ED]", "member" : "ml.sparkling.graph.operators.algorithms.aproximation.ApproximatedShortestPathsAlgorithm.aproximatePaths", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/aproximation\/ApproximatedShortestPathsAlgorithm$.html#aproximatePaths[ED,VD](graph:org.apache.spark.graphx.Graph[VD,ED],coarsedGraph:org.apache.spark.graphx.Graph[ml.sparkling.graph.api.operators.algorithms.coarsening.CoarseningAlgorithm.Component,ED],coarsedShortestPaths:org.apache.spark.graphx.Graph[ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.fastutils.FastUtilWithDistance.DataMap,ED],modifier:ml.sparkling.graph.operators.algorithms.aproximation.ApproximatedShortestPathsAlgorithm.PathModifier,vertexPredicate:ml.sparkling.graph.api.operators.IterativeComputation.SimpleVertexPredicate,treatAsUndirected:Boolean)(implicitevidence$7:scala.reflect.ClassTag[ED],implicitevidence$8:scala.reflect.ClassTag[VD],implicitnum:Numeric[ED]):org.apache.spark.graphx.Graph[Iterable[(org.apache.spark.graphx.VertexId,ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.JDouble)],ED]", "kind" : "def"}, {"label" : "computeShortestPathsForDirectoryComputationUsing", "tail" : "(graph: Graph[VD, ED], coarsedGraph: Graph[Component, ED], vertexPredicate: SimpleVertexPredicate, treatAsUndirected: Boolean, modifier: PathModifier)(arg0: ClassTag[VD], arg1: ClassTag[ED], num: Numeric[ED]): Graph[Iterable[(VertexId, JDouble)], ED]", "member" : "ml.sparkling.graph.operators.algorithms.aproximation.ApproximatedShortestPathsAlgorithm.computeShortestPathsForDirectoryComputationUsing", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/aproximation\/ApproximatedShortestPathsAlgorithm$.html#computeShortestPathsForDirectoryComputationUsing[VD,ED](graph:org.apache.spark.graphx.Graph[VD,ED],coarsedGraph:org.apache.spark.graphx.Graph[ml.sparkling.graph.api.operators.algorithms.coarsening.CoarseningAlgorithm.Component,ED],vertexPredicate:ml.sparkling.graph.api.operators.IterativeComputation.SimpleVertexPredicate,treatAsUndirected:Boolean,modifier:ml.sparkling.graph.operators.algorithms.aproximation.ApproximatedShortestPathsAlgorithm.PathModifier)(implicitevidence$5:scala.reflect.ClassTag[VD],implicitevidence$6:scala.reflect.ClassTag[ED],implicitnum:Numeric[ED]):org.apache.spark.graphx.Graph[Iterable[(org.apache.spark.graphx.VertexId,ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.JDouble)],ED]", "kind" : "def"}, {"label" : "computeShortestPathsLengthsWithoutCoarsingUsing", "tail" : "(graph: Graph[VD, ED], coarsedGraph: Graph[Component, ED], vertexPredicate: SimpleVertexPredicate, treatAsUndirected: Boolean, modifier: PathModifier)(arg0: ClassTag[VD], arg1: ClassTag[ED], num: Numeric[ED]): Graph[Iterable[(VertexId, JDouble)], ED]", "member" : "ml.sparkling.graph.operators.algorithms.aproximation.ApproximatedShortestPathsAlgorithm.computeShortestPathsLengthsWithoutCoarsingUsing", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/aproximation\/ApproximatedShortestPathsAlgorithm$.html#computeShortestPathsLengthsWithoutCoarsingUsing[VD,ED](graph:org.apache.spark.graphx.Graph[VD,ED],coarsedGraph:org.apache.spark.graphx.Graph[ml.sparkling.graph.api.operators.algorithms.coarsening.CoarseningAlgorithm.Component,ED],vertexPredicate:ml.sparkling.graph.api.operators.IterativeComputation.SimpleVertexPredicate,treatAsUndirected:Boolean,modifier:ml.sparkling.graph.operators.algorithms.aproximation.ApproximatedShortestPathsAlgorithm.PathModifier)(implicitevidence$3:scala.reflect.ClassTag[VD],implicitevidence$4:scala.reflect.ClassTag[ED],implicitnum:Numeric[ED]):org.apache.spark.graphx.Graph[Iterable[(org.apache.spark.graphx.VertexId,ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.JDouble)],ED]", "kind" : "def"}, {"label" : "computeShortestPathsLengthsUsing", "tail" : "(graph: Graph[VD, ED], vertexPredicate: SimpleVertexPredicate, treatAsUndirected: Boolean, modifier: PathModifier)(arg0: ClassTag[VD], arg1: ClassTag[ED], num: Numeric[ED]): Graph[Iterable[(VertexId, JDouble)], ED]", "member" : "ml.sparkling.graph.operators.algorithms.aproximation.ApproximatedShortestPathsAlgorithm.computeShortestPathsLengthsUsing", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/aproximation\/ApproximatedShortestPathsAlgorithm$.html#computeShortestPathsLengthsUsing[VD,ED](graph:org.apache.spark.graphx.Graph[VD,ED],vertexPredicate:ml.sparkling.graph.api.operators.IterativeComputation.SimpleVertexPredicate,treatAsUndirected:Boolean,modifier:ml.sparkling.graph.operators.algorithms.aproximation.ApproximatedShortestPathsAlgorithm.PathModifier)(implicitevidence$1:scala.reflect.ClassTag[VD],implicitevidence$2:scala.reflect.ClassTag[ED],implicitnum:Numeric[ED]):org.apache.spark.graphx.Graph[Iterable[(org.apache.spark.graphx.VertexId,ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.JDouble)],ED]", "kind" : "def"}, {"label" : "defaultPathModifier", "tail" : ": PathModifier", "member" : "ml.sparkling.graph.operators.algorithms.aproximation.ApproximatedShortestPathsAlgorithm.defaultPathModifier", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/aproximation\/ApproximatedShortestPathsAlgorithm$.html#defaultPathModifier:ml.sparkling.graph.operators.algorithms.aproximation.ApproximatedShortestPathsAlgorithm.PathModifier", "kind" : "val"}, {"label" : "defaultNewPath", "tail" : ": (JDouble) ⇒ JDouble", "member" : "ml.sparkling.graph.operators.algorithms.aproximation.ApproximatedShortestPathsAlgorithm.defaultNewPath", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/aproximation\/ApproximatedShortestPathsAlgorithm$.html#defaultNewPath:ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.JDouble=>ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.JDouble", "kind" : "val"}, {"label" : "PathModifier", "tail" : "", "member" : "ml.sparkling.graph.operators.algorithms.aproximation.ApproximatedShortestPathsAlgorithm.PathModifier", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/aproximation\/ApproximatedShortestPathsAlgorithm$.html#PathModifier=(org.apache.spark.graphx.VertexId,org.apache.spark.graphx.VertexId,ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.JDouble)=>ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.JDouble", "kind" : "type"}, {"label" : "logger", "tail" : ": Logger", "member" : "ml.sparkling.graph.operators.algorithms.aproximation.ApproximatedShortestPathsAlgorithm.logger", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/aproximation\/ApproximatedShortestPathsAlgorithm$.html#logger:org.apache.log4j.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/aproximation\/ApproximatedShortestPathsAlgorithm$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/aproximation\/ApproximatedShortestPathsAlgorithm$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/aproximation\/ApproximatedShortestPathsAlgorithm$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/aproximation\/ApproximatedShortestPathsAlgorithm$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/aproximation\/ApproximatedShortestPathsAlgorithm$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/aproximation\/ApproximatedShortestPathsAlgorithm$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/aproximation\/ApproximatedShortestPathsAlgorithm$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/aproximation\/ApproximatedShortestPathsAlgorithm$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/aproximation\/ApproximatedShortestPathsAlgorithm$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/aproximation\/ApproximatedShortestPathsAlgorithm$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/aproximation\/ApproximatedShortestPathsAlgorithm$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/aproximation\/ApproximatedShortestPathsAlgorithm$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/aproximation\/ApproximatedShortestPathsAlgorithm$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/aproximation\/ApproximatedShortestPathsAlgorithm$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/aproximation\/ApproximatedShortestPathsAlgorithm$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/aproximation\/ApproximatedShortestPathsAlgorithm$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/aproximation\/ApproximatedShortestPathsAlgorithm$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct" : [{"name" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOBFSVertex", "shortDescription" : "Created by mth on 5\/6\/17.", "object" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOBFSVertex$.html", "members_class" : [{"label" : "isCompleted", "tail" : ": Boolean", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOBFSVertex.isCompleted", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOBFSVertex.html#isCompleted:Boolean", "kind" : "val"}, {"label" : "updateReceivedAggr", "tail" : "(msg: Iterable[BCAggregationMessage]): NOBFSVertex", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOBFSVertex.updateReceivedAggr", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOBFSVertex.html#updateReceivedAggr(msg:Iterable[ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.BCAggregationMessage]):ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOBFSVertex", "kind" : "def"}, {"label" : "applyConfirmations", "tail" : "(confirm: Iterable[BFSBCConfirmMessage]): NOBFSVertex", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOBFSVertex.applyConfirmations", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOBFSVertex.html#applyConfirmations(confirm:Iterable[ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.BFSBCConfirmMessage]):ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOBFSVertex", "kind" : "def"}, {"label" : "waitForConfirm", "tail" : "(): NOBFSVertex", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOBFSVertex.waitForConfirm", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOBFSVertex.html#waitForConfirm:ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOBFSVertex", "kind" : "def"}, {"label" : "setToConfirm", "tail" : "(): NOBFSVertex", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOBFSVertex.setToConfirm", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOBFSVertex.html#setToConfirm:ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOBFSVertex", "kind" : "def"}, {"label" : "updateBC", "tail" : "(ps: Iterable[Double]): NOBFSVertex", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOBFSVertex.updateBC", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOBFSVertex.html#updateBC(ps:Iterable[Double]):ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOBFSVertex", "kind" : "def"}, {"label" : "updateBC", "tail" : "(p: Double): NOBFSVertex", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOBFSVertex.updateBC", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOBFSVertex.html#updateBC(p:Double):ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOBFSVertex", "kind" : "def"}, {"member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOBFSVertex#<init>", "error" : "unsupported entity"}, {"label" : "state", "tail" : ": Int", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOBFSVertex.state", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOBFSVertex.html#state:Int", "kind" : "val"}, {"label" : "receivedAggrResp", "tail" : ": Int", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOBFSVertex.receivedAggrResp", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOBFSVertex.html#receivedAggrResp:Int", "kind" : "val"}, {"label" : "numOfSucc", "tail" : ": Int", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOBFSVertex.numOfSucc", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOBFSVertex.html#numOfSucc:Int", "kind" : "val"}, {"label" : "psi", "tail" : ": Double", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOBFSVertex.psi", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOBFSVertex.html#psi:Double", "kind" : "val"}, {"label" : "sigma", "tail" : ": Int", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOBFSVertex.sigma", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOBFSVertex.html#sigma:Int", "kind" : "val"}, {"label" : "distance", "tail" : ": Double", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOBFSVertex.distance", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOBFSVertex.html#distance:Double", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOBFSVertex.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOBFSVertex.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOBFSVertex.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOBFSVertex.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOBFSVertex.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOBFSVertex.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOBFSVertex.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOBFSVertex.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOBFSVertex.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOBFSVertex.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOBFSVertex.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOBFSVertex.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOBFSVertex.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOBFSVertex.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOBFSVertex.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOBFSVertex.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOBFSVertex.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOBFSVertex.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOBFSVertex.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "confirmed", "tail" : ": Int", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOBFSVertex.confirmed", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOBFSVertex$.html#confirmed:Int", "kind" : "val"}, {"label" : "waitForConfirm", "tail" : ": Int", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOBFSVertex.waitForConfirm", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOBFSVertex$.html#waitForConfirm:Int", "kind" : "val"}, {"label" : "toConfirm", "tail" : ": Int", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOBFSVertex.toConfirm", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOBFSVertex$.html#toConfirm:Int", "kind" : "val"}, {"label" : "idle", "tail" : ": Int", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOBFSVertex.idle", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOBFSVertex$.html#idle:Int", "kind" : "val"}, {"label" : "apply", "tail" : "(distance: Double, sigma: Int, psi: Double, numOfSucc: Int, receivedAggrResp: Int, state: Int): NOBFSVertex", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOBFSVertex.apply", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOBFSVertex$.html#apply(distance:Double,sigma:Int,psi:Double,numOfSucc:Int,receivedAggrResp:Int,state:Int):ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOBFSVertex", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOBFSVertex$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOBFSVertex$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOBFSVertex$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOBFSVertex$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOBFSVertex$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOBFSVertex$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOBFSVertex$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOBFSVertex$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOBFSVertex$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOBFSVertex$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOBFSVertex$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOBFSVertex$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOBFSVertex$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOBFSVertex$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOBFSVertex$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOBFSVertex$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOBFSVertex$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOBFSVertex$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOBFSVertex$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOBFSVertex.html", "kind" : "class"}, {"name" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOVertex", "shortDescription" : "Created by mth on 5\/6\/17.", "object" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOVertex$.html", "members_class" : [{"label" : "update", "tail" : "(bfsMap: Map[VertexId, NOBFSVertex], succ: Option[Array[VertexId]], dfsPointer: Option[DFSPointer], bcInc: Double): NOVertex", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOVertex.update", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOVertex.html#update(bfsMap:Map[org.apache.spark.graphx.VertexId,ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOBFSVertex],succ:Option[Array[org.apache.spark.graphx.VertexId]],dfsPointer:Option[ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.DFSPointer],bcInc:Double):ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOVertex", "kind" : "def"}, {"label" : "withDfsPointer", "tail" : "(pointer: Option[DFSPointer]): NOVertex", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOVertex.withDfsPointer", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOVertex.html#withDfsPointer(pointer:Option[ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.DFSPointer]):ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOVertex", "kind" : "def"}, {"label" : "eccentricity", "tail" : ": Double", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOVertex.eccentricity", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOVertex.html#eccentricity:Double", "kind" : "lazy val"}, {"label" : "lowestSucc", "tail" : ": Option[Long]", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOVertex.lowestSucc", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOVertex.html#lowestSucc:Option[Long]", "kind" : "lazy val"}, {"label" : "bfsRoot", "tail" : ": Boolean", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOVertex.bfsRoot", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOVertex.html#bfsRoot:Boolean", "kind" : "lazy val"}, {"label" : "leaf", "tail" : ": Boolean", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOVertex.leaf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOVertex.html#leaf:Boolean", "kind" : "val"}, {"label" : "isCompleted", "tail" : ": Boolean", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOVertex.isCompleted", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOVertex.html#isCompleted:Boolean", "kind" : "val"}, {"label" : "setPredecessorAndSuccessors", "tail" : "(newPred: Option[VertexId], newSucc: Option[Array[VertexId]]): NOVertex", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOVertex.setPredecessorAndSuccessors", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOVertex.html#setPredecessorAndSuccessors(newPred:Option[org.apache.spark.graphx.VertexId],newSucc:Option[Array[org.apache.spark.graphx.VertexId]]):ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOVertex", "kind" : "def"}, {"label" : "setParent", "tail" : "(idParent: VertexId): NOVertex", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOVertex.setParent", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOVertex.html#setParent(idParent:org.apache.spark.graphx.VertexId):ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOVertex", "kind" : "def"}, {"member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOVertex#<init>", "error" : "unsupported entity"}, {"label" : "bc", "tail" : ": Double", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOVertex.bc", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOVertex.html#bc:Double", "kind" : "val"}, {"label" : "dfsPointer", "tail" : ": Option[DFSPointer]", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOVertex.dfsPointer", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOVertex.html#dfsPointer:Option[ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.DFSPointer]", "kind" : "val"}, {"label" : "succ", "tail" : ": Option[Array[VertexId]]", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOVertex.succ", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOVertex.html#succ:Option[Array[org.apache.spark.graphx.VertexId]]", "kind" : "val"}, {"label" : "pred", "tail" : ": Option[VertexId]", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOVertex.pred", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOVertex.html#pred:Option[org.apache.spark.graphx.VertexId]", "kind" : "val"}, {"label" : "bfsMap", "tail" : ": Map[VertexId, NOBFSVertex]", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOVertex.bfsMap", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOVertex.html#bfsMap:Map[org.apache.spark.graphx.VertexId,ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOBFSVertex]", "kind" : "val"}, {"label" : "vertexId", "tail" : ": VertexId", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOVertex.vertexId", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOVertex.html#vertexId:org.apache.spark.graphx.VertexId", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOVertex.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOVertex.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOVertex.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOVertex.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOVertex.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOVertex.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOVertex.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOVertex.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOVertex.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOVertex.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOVertex.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOVertex.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOVertex.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOVertex.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOVertex.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOVertex.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOVertex.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOVertex.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOVertex.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(vertexId: VertexId, bfsMap: Map[VertexId, NOBFSVertex], pred: Option[VertexId], succ: Option[Array[VertexId]], dfsPointer: Option[DFSPointer], bc: Double): NOVertex", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOVertex.apply", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOVertex$.html#apply(vertexId:org.apache.spark.graphx.VertexId,bfsMap:Map[org.apache.spark.graphx.VertexId,ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOBFSVertex],pred:Option[org.apache.spark.graphx.VertexId],succ:Option[Array[org.apache.spark.graphx.VertexId]],dfsPointer:Option[ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.DFSPointer],bc:Double):ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOVertex", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOVertex$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOVertex$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOVertex$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOVertex$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOVertex$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOVertex$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOVertex$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOVertex$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOVertex$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOVertex$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOVertex$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOVertex$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOVertex$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOVertex$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOVertex$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOVertex$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOVertex$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOVertex$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOVertex$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/NOVertex.html", "kind" : "class"}], "ml.sparkling.graph.loaders.csv" : [{"name" : "ml.sparkling.graph.loaders.csv.CSVLoader", "shortDescription" : "Main class of csv loaderCreated by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "object" : "ml\/sparkling\/graph\/loaders\/csv\/CSVLoader$.html", "members_object" : [{"label" : "loadGraphFromCSVWitVertexIndexing", "tail" : "(file: String, csvLoaderConfig: CsvLoaderConfig, defaultVertex: Option[VD], column1: Int, column2: Int, edgeAttributeProvider: EdgeAttributeExtractor[ED], partitions: Int)(arg0: ClassTag[VD], arg1: ClassTag[ED], sc: SparkContext): Graph[VD, ED]", "member" : "ml.sparkling.graph.loaders.csv.CSVLoader.loadGraphFromCSVWitVertexIndexing", "link" : "ml\/sparkling\/graph\/loaders\/csv\/CSVLoader$.html#loadGraphFromCSVWitVertexIndexing[VD,ED](file:String,csvLoaderConfig:ml.sparkling.graph.loaders.csv.CsvLoaderConfig,defaultVertex:Option[VD],column1:Int,column2:Int,edgeAttributeProvider:ml.sparkling.graph.loaders.csv.types.CSVTypes.EdgeAttributeExtractor[ED],partitions:Int)(implicitevidence$1:scala.reflect.ClassTag[VD],implicitevidence$2:scala.reflect.ClassTag[ED],implicitsc:org.apache.spark.SparkContext):org.apache.spark.graphx.Graph[VD,ED]", "kind" : "def"}, {"label" : "loadGraphFromCSV", "tail" : "(file: String, csvLoaderConfig: CsvLoaderConfig, defaultVertex: Option[String], column1: Int, column2: Int, edgeAttributeProvider: EdgeAttributeExtractor[Double], partitions: Int)(sc: SparkContext): Graph[String, Double]", "member" : "ml.sparkling.graph.loaders.csv.CSVLoader.loadGraphFromCSV", "link" : "ml\/sparkling\/graph\/loaders\/csv\/CSVLoader$.html#loadGraphFromCSV(file:String,csvLoaderConfig:ml.sparkling.graph.loaders.csv.CsvLoaderConfig,defaultVertex:Option[String],column1:Int,column2:Int,edgeAttributeProvider:ml.sparkling.graph.loaders.csv.types.CSVTypes.EdgeAttributeExtractor[Double],partitions:Int)(implicitsc:org.apache.spark.SparkContext):org.apache.spark.graphx.Graph[String,Double]", "kind" : "def"}, {"label" : "loadGraphFromCSV", "tail" : "(file: String, graphBuilder: GraphBuilder[VD, ED], csvLoaderConfig: CsvLoaderConfig, partitions: Int)(sc: SparkContext): Graph[VD, ED]", "member" : "ml.sparkling.graph.loaders.csv.CSVLoader.loadGraphFromCSV", "link" : "ml\/sparkling\/graph\/loaders\/csv\/CSVLoader$.html#loadGraphFromCSV[VD,ED](file:String,graphBuilder:ml.sparkling.graph.loaders.csv.types.CSVTypes.GraphBuilder[VD,ED],csvLoaderConfig:ml.sparkling.graph.loaders.csv.CsvLoaderConfig,partitions:Int)(implicitsc:org.apache.spark.SparkContext):org.apache.spark.graphx.Graph[VD,ED]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/loaders\/csv\/CSVLoader$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/loaders\/csv\/CSVLoader$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/loaders\/csv\/CSVLoader$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/loaders\/csv\/CSVLoader$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/loaders\/csv\/CSVLoader$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/loaders\/csv\/CSVLoader$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/loaders\/csv\/CSVLoader$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/loaders\/csv\/CSVLoader$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/loaders\/csv\/CSVLoader$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/loaders\/csv\/CSVLoader$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/loaders\/csv\/CSVLoader$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/loaders\/csv\/CSVLoader$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/loaders\/csv\/CSVLoader$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/loaders\/csv\/CSVLoader$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/loaders\/csv\/CSVLoader$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/loaders\/csv\/CSVLoader$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/loaders\/csv\/CSVLoader$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/loaders\/csv\/CSVLoader$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/loaders\/csv\/CSVLoader$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ml.sparkling.graph.loaders.csv.CsvLoaderConfig", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "members_case class" : [{"member" : "ml.sparkling.graph.loaders.csv.CsvLoaderConfig#<init>", "error" : "unsupported entity"}, {"label" : "inferSchema", "tail" : ": Boolean", "member" : "ml.sparkling.graph.loaders.csv.CsvLoaderConfig.inferSchema", "link" : "ml\/sparkling\/graph\/loaders\/csv\/CsvLoaderConfig.html#inferSchema:Boolean", "kind" : "var"}, {"label" : "quote", "tail" : ": String", "member" : "ml.sparkling.graph.loaders.csv.CsvLoaderConfig.quote", "link" : "ml\/sparkling\/graph\/loaders\/csv\/CsvLoaderConfig.html#quote:String", "kind" : "var"}, {"label" : "delimiter", "tail" : ": String", "member" : "ml.sparkling.graph.loaders.csv.CsvLoaderConfig.delimiter", "link" : "ml\/sparkling\/graph\/loaders\/csv\/CsvLoaderConfig.html#delimiter:String", "kind" : "var"}, {"label" : "schema", "tail" : ": Option[StructType]", "member" : "ml.sparkling.graph.loaders.csv.CsvLoaderConfig.schema", "link" : "ml\/sparkling\/graph\/loaders\/csv\/CsvLoaderConfig.html#schema:Option[org.apache.spark.sql.types.StructType]", "kind" : "var"}, {"label" : "header", "tail" : ": Boolean", "member" : "ml.sparkling.graph.loaders.csv.CsvLoaderConfig.header", "link" : "ml\/sparkling\/graph\/loaders\/csv\/CsvLoaderConfig.html#header:Boolean", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/loaders\/csv\/CsvLoaderConfig.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/loaders\/csv\/CsvLoaderConfig.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/loaders\/csv\/CsvLoaderConfig.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/loaders\/csv\/CsvLoaderConfig.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/loaders\/csv\/CsvLoaderConfig.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/loaders\/csv\/CsvLoaderConfig.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/loaders\/csv\/CsvLoaderConfig.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/loaders\/csv\/CsvLoaderConfig.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/loaders\/csv\/CsvLoaderConfig.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/loaders\/csv\/CsvLoaderConfig.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/loaders\/csv\/CsvLoaderConfig.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/loaders\/csv\/CsvLoaderConfig.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/loaders\/csv\/CsvLoaderConfig.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/loaders\/csv\/CsvLoaderConfig.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/loaders\/csv\/CsvLoaderConfig.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/loaders\/csv\/CsvLoaderConfig.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ml\/sparkling\/graph\/loaders\/csv\/CsvLoaderConfig.html", "kind" : "case class"}, {"name" : "ml.sparkling.graph.loaders.csv.DataFrameReaderConfigurator", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "object" : "ml\/sparkling\/graph\/loaders\/csv\/DataFrameReaderConfigurator$.html", "members_object" : [{"label" : "addAbilityToConfigureDataFrameReader", "tail" : "", "member" : "ml.sparkling.graph.loaders.csv.DataFrameReaderConfigurator.addAbilityToConfigureDataFrameReader", "link" : "ml\/sparkling\/graph\/loaders\/csv\/DataFrameReaderConfigurator$.html#addAbilityToConfigureDataFrameReaderextendsAnyRef", "kind" : "implicit class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/loaders\/csv\/DataFrameReaderConfigurator$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/loaders\/csv\/DataFrameReaderConfigurator$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/loaders\/csv\/DataFrameReaderConfigurator$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/loaders\/csv\/DataFrameReaderConfigurator$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/loaders\/csv\/DataFrameReaderConfigurator$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/loaders\/csv\/DataFrameReaderConfigurator$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/loaders\/csv\/DataFrameReaderConfigurator$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/loaders\/csv\/DataFrameReaderConfigurator$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/loaders\/csv\/DataFrameReaderConfigurator$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/loaders\/csv\/DataFrameReaderConfigurator$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/loaders\/csv\/DataFrameReaderConfigurator$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/loaders\/csv\/DataFrameReaderConfigurator$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/loaders\/csv\/DataFrameReaderConfigurator$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/loaders\/csv\/DataFrameReaderConfigurator$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/loaders\/csv\/DataFrameReaderConfigurator$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/loaders\/csv\/DataFrameReaderConfigurator$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/loaders\/csv\/DataFrameReaderConfigurator$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/loaders\/csv\/DataFrameReaderConfigurator$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/loaders\/csv\/DataFrameReaderConfigurator$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ml.sparkling.graph.loaders.csv.GraphFromCsv", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "object" : "ml\/sparkling\/graph\/loaders\/csv\/GraphFromCsv$.html", "members_object" : [{"label" : "getDefaultConfiguration", "tail" : "()(arg0: ClassTag[VD], arg1: ClassTag[ED]): LoaderConfiguration[VD, ED]", "member" : "ml.sparkling.graph.loaders.csv.GraphFromCsv.getDefaultConfiguration", "link" : "ml\/sparkling\/graph\/loaders\/csv\/GraphFromCsv$.html#getDefaultConfiguration[VD,ED]()(implicitevidence$15:scala.reflect.ClassTag[VD],implicitevidence$16:scala.reflect.ClassTag[ED]):ml.sparkling.graph.loaders.csv.GraphFromCsv.LoaderConfiguration[VD,ED]", "kind" : "def"}, {"label" : "vertexDefaultValue", "tail" : "()(arg0: ClassTag[V]): Option[V]", "member" : "ml.sparkling.graph.loaders.csv.GraphFromCsv.vertexDefaultValue", "link" : "ml\/sparkling\/graph\/loaders\/csv\/GraphFromCsv$.html#vertexDefaultValue[V]()(implicitevidence$14:scala.reflect.ClassTag[V]):Option[V]", "kind" : "def"}, {"label" : "rowToType", "tail" : "(row: Row)(arg0: ClassTag[E]): E", "member" : "ml.sparkling.graph.loaders.csv.GraphFromCsv.rowToType", "link" : "ml\/sparkling\/graph\/loaders\/csv\/GraphFromCsv$.html#rowToType[E](row:org.apache.spark.sql.Row)(implicitevidence$13:scala.reflect.ClassTag[E]):E", "kind" : "def"}, {"label" : "columnEdge", "tail" : "(column: Int)(arg0: ClassTag[VD], arg1: ClassTag[ED]): (Int, Int, Row, ToVertexId[VD]) ⇒ Seq[Edge[ED]]", "member" : "ml.sparkling.graph.loaders.csv.GraphFromCsv.columnEdge", "link" : "ml\/sparkling\/graph\/loaders\/csv\/GraphFromCsv$.html#columnEdge[VD,ED](column:Int)(implicitevidence$11:scala.reflect.ClassTag[VD],implicitevidence$12:scala.reflect.ClassTag[ED]):(Int,Int,org.apache.spark.sql.Row,ml.sparkling.graph.loaders.csv.types.Types.ToVertexId[VD])=>Seq[org.apache.spark.graphx.Edge[ED]]", "kind" : "def"}, {"label" : "valueEdge", "tail" : "(value: ED)(arg0: ClassTag[VD], arg1: ClassTag[ED]): (Int, Int, Row, ToVertexId[VD]) ⇒ Seq[Edge[ED]]", "member" : "ml.sparkling.graph.loaders.csv.GraphFromCsv.valueEdge", "link" : "ml\/sparkling\/graph\/loaders\/csv\/GraphFromCsv$.html#valueEdge[VD,ED](value:ED)(implicitevidence$9:scala.reflect.ClassTag[VD],implicitevidence$10:scala.reflect.ClassTag[ED]):(Int,Int,org.apache.spark.sql.Row,ml.sparkling.graph.loaders.csv.types.Types.ToVertexId[VD])=>Seq[org.apache.spark.graphx.Edge[ED]]", "kind" : "def"}, {"label" : "LoaderParameters", "tail" : "", "member" : "ml.sparkling.graph.loaders.csv.GraphFromCsv.LoaderParameters", "link" : "ml\/sparkling\/graph\/loaders\/csv\/GraphFromCsv$.html#LoaderParameters", "kind" : "object"}, {"label" : "CSVGraphLoader", "tail" : "", "member" : "ml.sparkling.graph.loaders.csv.GraphFromCsv.CSVGraphLoader", "link" : "ml\/sparkling\/graph\/loaders\/csv\/GraphFromCsv$.html#CSVGraphLoaderextendsGraphLoading.TypedGraphLoader[String,String]withProductwithSerializable", "kind" : "case class"}, {"label" : "indexedGraphBuilderCreator", "tail" : "(configuration: LoaderConfiguration[V, E])(arg0: ClassTag[V], arg1: ClassTag[E]): GraphBuilder[V, E]", "member" : "ml.sparkling.graph.loaders.csv.GraphFromCsv.indexedGraphBuilderCreator", "link" : "ml\/sparkling\/graph\/loaders\/csv\/GraphFromCsv$.html#indexedGraphBuilderCreator[V,E](configuration:ml.sparkling.graph.loaders.csv.GraphFromCsv.LoaderConfiguration[V,E])(implicitevidence$5:scala.reflect.ClassTag[V],implicitevidence$6:scala.reflect.ClassTag[E]):ml.sparkling.graph.loaders.csv.types.CSVTypes.GraphBuilder[V,E]", "kind" : "def"}, {"label" : "standardGraphBuilderCreator", "tail" : "(configuration: LoaderConfiguration[V, E])(arg0: ClassTag[V], arg1: ClassTag[E]): GraphBuilder[V, E]", "member" : "ml.sparkling.graph.loaders.csv.GraphFromCsv.standardGraphBuilderCreator", "link" : "ml\/sparkling\/graph\/loaders\/csv\/GraphFromCsv$.html#standardGraphBuilderCreator[V,E](configuration:ml.sparkling.graph.loaders.csv.GraphFromCsv.LoaderConfiguration[V,E])(implicitevidence$3:scala.reflect.ClassTag[V],implicitevidence$4:scala.reflect.ClassTag[E]):ml.sparkling.graph.loaders.csv.types.CSVTypes.GraphBuilder[V,E]", "kind" : "def"}, {"label" : "CSV", "tail" : "", "member" : "ml.sparkling.graph.loaders.csv.GraphFromCsv.CSV", "link" : "ml\/sparkling\/graph\/loaders\/csv\/GraphFromCsv$.html#CSV", "kind" : "object"}, {"label" : "LoaderConfiguration", "tail" : "", "member" : "ml.sparkling.graph.loaders.csv.GraphFromCsv.LoaderConfiguration", "link" : "ml\/sparkling\/graph\/loaders\/csv\/GraphFromCsv$.html#LoaderConfiguration[V,E]extendsProductwithSerializable", "kind" : "case class"}, {"label" : "GraphBuilderCreator", "tail" : "", "member" : "ml.sparkling.graph.loaders.csv.GraphFromCsv.GraphBuilderCreator", "link" : "ml\/sparkling\/graph\/loaders\/csv\/GraphFromCsv$.html#GraphBuilderCreator[V,E]=ml.sparkling.graph.loaders.csv.GraphFromCsv.LoaderConfiguration[V,E]=>ml.sparkling.graph.loaders.csv.types.CSVTypes.GraphBuilder[V,E]", "kind" : "type"}, {"label" : "EdgeProvider", "tail" : "", "member" : "ml.sparkling.graph.loaders.csv.GraphFromCsv.EdgeProvider", "link" : "ml\/sparkling\/graph\/loaders\/csv\/GraphFromCsv$.html#EdgeProvider[V,E]=(Int,Int,org.apache.spark.sql.Row,ml.sparkling.graph.loaders.csv.types.Types.ToVertexId[V])=>Seq[org.apache.spark.graphx.Edge[E]]", "kind" : "type"}, {"label" : "log", "tail" : ": Logger", "member" : "ml.sparkling.graph.loaders.csv.GraphFromCsv.log", "link" : "ml\/sparkling\/graph\/loaders\/csv\/GraphFromCsv$.html#log:org.apache.log4j.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/loaders\/csv\/GraphFromCsv$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/loaders\/csv\/GraphFromCsv$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/loaders\/csv\/GraphFromCsv$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/loaders\/csv\/GraphFromCsv$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/loaders\/csv\/GraphFromCsv$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/loaders\/csv\/GraphFromCsv$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/loaders\/csv\/GraphFromCsv$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/loaders\/csv\/GraphFromCsv$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/loaders\/csv\/GraphFromCsv$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/loaders\/csv\/GraphFromCsv$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/loaders\/csv\/GraphFromCsv$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/loaders\/csv\/GraphFromCsv$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/loaders\/csv\/GraphFromCsv$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/loaders\/csv\/GraphFromCsv$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/loaders\/csv\/GraphFromCsv$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/loaders\/csv\/GraphFromCsv$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/loaders\/csv\/GraphFromCsv$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/loaders\/csv\/GraphFromCsv$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/loaders\/csv\/GraphFromCsv$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "ml" : [], "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.generator.impl" : [{"name" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.generator.impl.RandomFlowGenerator", "shortDescription" : "Created by mth on 4\/28\/17.", "members_class" : [{"label" : "flowsPerVertex", "tail" : "(): Int", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.generator.impl.RandomFlowGenerator.flowsPerVertex", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/generator\/impl\/RandomFlowGenerator.html#flowsPerVertex:Int", "kind" : "def"}, {"label" : "shouldGenerateFlow", "tail" : "(vertex: CFBCVertex): Boolean", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.generator.impl.RandomFlowGenerator.shouldGenerateFlow", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/generator\/impl\/RandomFlowGenerator.html#shouldGenerateFlow(vertex:ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCVertex):Boolean", "kind" : "def"}, {"label" : "createFlow", "tail" : "(arg: CFBCVertex): Option[CFBCFlow]", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.generator.impl.RandomFlowGenerator.createFlow", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/generator\/impl\/RandomFlowGenerator.html#createFlow(arg:ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCVertex):Option[ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCFlow]", "kind" : "def"}, {"member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.generator.impl.RandomFlowGenerator#<init>", "error" : "unsupported entity"}, {"label" : "phi", "tail" : ": Int", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.generator.impl.RandomFlowGenerator.phi", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/generator\/impl\/RandomFlowGenerator.html#phi:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/generator\/impl\/RandomFlowGenerator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/generator\/impl\/RandomFlowGenerator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/generator\/impl\/RandomFlowGenerator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/generator\/impl\/RandomFlowGenerator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/generator\/impl\/RandomFlowGenerator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/generator\/impl\/RandomFlowGenerator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/generator\/impl\/RandomFlowGenerator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/generator\/impl\/RandomFlowGenerator.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/generator\/impl\/RandomFlowGenerator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/generator\/impl\/RandomFlowGenerator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/generator\/impl\/RandomFlowGenerator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/generator\/impl\/RandomFlowGenerator.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/generator\/impl\/RandomFlowGenerator.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/generator\/impl\/RandomFlowGenerator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/generator\/impl\/RandomFlowGenerator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/generator\/impl\/RandomFlowGenerator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/generator\/impl\/RandomFlowGenerator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/generator\/impl\/RandomFlowGenerator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/generator\/impl\/RandomFlowGenerator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/generator\/impl\/RandomFlowGenerator.html", "kind" : "class"}], "ml.sparkling" : [], "ml.sparkling.graph.operators.measures" : [], "ml.sparkling.graph.operators.measures.vertex" : [{"name" : "ml.sparkling.graph.operators.measures.vertex.Degree", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "object" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/Degree$.html", "members_object" : [{"label" : "compute", "tail" : "(graph: Graph[VD, ED], vertexMeasureConfiguration: VertexMeasureConfiguration[VD, ED])(arg0: ClassTag[VD], arg1: ClassTag[ED], num: Numeric[ED]): Graph[(Int, Int), ED]", "member" : "ml.sparkling.graph.operators.measures.vertex.Degree.compute", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/Degree$.html#compute[VD,ED](graph:org.apache.spark.graphx.Graph[VD,ED],vertexMeasureConfiguration:ml.sparkling.graph.api.operators.measures.VertexMeasureConfiguration[VD,ED])(implicitevidence$3:scala.reflect.ClassTag[VD],implicitevidence$4:scala.reflect.ClassTag[ED],implicitnum:Numeric[ED]):org.apache.spark.graphx.Graph[(Int,Int),ED]", "kind" : "def"}, {"label" : "computeInOut", "tail" : "(graph: Graph[VD, ED], vertexMeasureConfiguration: VertexMeasureConfiguration[VD, ED])(arg0: ClassTag[VD], arg1: ClassTag[ED]): Graph[(Int, Int), ED]", "member" : "ml.sparkling.graph.operators.measures.vertex.Degree.computeInOut", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/Degree$.html#computeInOut[VD,ED](graph:org.apache.spark.graphx.Graph[VD,ED],vertexMeasureConfiguration:ml.sparkling.graph.api.operators.measures.VertexMeasureConfiguration[VD,ED])(implicitevidence$1:scala.reflect.ClassTag[VD],implicitevidence$2:scala.reflect.ClassTag[ED]):org.apache.spark.graphx.Graph[(Int,Int),ED]", "kind" : "def"}, {"label" : "compute", "tail" : "(graph: Graph[VD, ED])(arg0: ClassTag[VD], arg1: ClassTag[ED], num: Numeric[ED]): Graph[(Int, Int), ED]", "member" : "ml.sparkling.graph.api.operators.measures.VertexMeasure.compute", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/Degree$.html#compute[VD,ED](graph:org.apache.spark.graphx.Graph[VD,ED])(implicitevidence$1:scala.reflect.ClassTag[VD],implicitevidence$2:scala.reflect.ClassTag[ED],implicitnum:Numeric[ED]):org.apache.spark.graphx.Graph[OV,ED]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/Degree$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/Degree$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/Degree$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/Degree$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/Degree$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/Degree$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/Degree$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/Degree$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/Degree$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/Degree$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/Degree$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/Degree$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/Degree$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/Degree$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/Degree$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/Degree$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/Degree$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/Degree$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/Degree$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ml.sparkling.graph.operators.measures.vertex.NeighborhoodConnectivity", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "object" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/NeighborhoodConnectivity$.html", "members_object" : [{"label" : "compute", "tail" : "(graph: Graph[VD, ED], vertexMeasureConfiguration: VertexMeasureConfiguration[VD, ED])(arg0: ClassTag[VD], arg1: ClassTag[ED], num: Numeric[ED]): Graph[Double, ED]", "member" : "ml.sparkling.graph.operators.measures.vertex.NeighborhoodConnectivity.compute", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/NeighborhoodConnectivity$.html#compute[VD,ED](graph:org.apache.spark.graphx.Graph[VD,ED],vertexMeasureConfiguration:ml.sparkling.graph.api.operators.measures.VertexMeasureConfiguration[VD,ED])(implicitevidence$3:scala.reflect.ClassTag[VD],implicitevidence$4:scala.reflect.ClassTag[ED],implicitnum:Numeric[ED]):org.apache.spark.graphx.Graph[Double,ED]", "kind" : "def"}, {"label" : "addTuples", "tail" : "(t1: (Int, Int), t2: (Int, Int)): (Int, Int)", "member" : "ml.sparkling.graph.operators.measures.vertex.NeighborhoodConnectivity.addTuples", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/NeighborhoodConnectivity$.html#addTuples(t1:(Int,Int),t2:(Int,Int)):(Int,Int)", "kind" : "def"}, {"label" : "computeNeighborConnectivity", "tail" : "(graph: Graph[VD, ED], vertexMeasureConfiguration: VertexMeasureConfiguration[VD, ED])(arg0: ClassTag[VD], arg1: ClassTag[ED]): Graph[Double, ED]", "member" : "ml.sparkling.graph.operators.measures.vertex.NeighborhoodConnectivity.computeNeighborConnectivity", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/NeighborhoodConnectivity$.html#computeNeighborConnectivity[VD,ED](graph:org.apache.spark.graphx.Graph[VD,ED],vertexMeasureConfiguration:ml.sparkling.graph.api.operators.measures.VertexMeasureConfiguration[VD,ED])(implicitevidence$1:scala.reflect.ClassTag[VD],implicitevidence$2:scala.reflect.ClassTag[ED]):org.apache.spark.graphx.Graph[Double,ED]", "kind" : "def"}, {"label" : "compute", "tail" : "(graph: Graph[VD, ED])(arg0: ClassTag[VD], arg1: ClassTag[ED], num: Numeric[ED]): Graph[Double, ED]", "member" : "ml.sparkling.graph.api.operators.measures.VertexMeasure.compute", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/NeighborhoodConnectivity$.html#compute[VD,ED](graph:org.apache.spark.graphx.Graph[VD,ED])(implicitevidence$1:scala.reflect.ClassTag[VD],implicitevidence$2:scala.reflect.ClassTag[ED],implicitnum:Numeric[ED]):org.apache.spark.graphx.Graph[OV,ED]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/NeighborhoodConnectivity$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/NeighborhoodConnectivity$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/NeighborhoodConnectivity$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/NeighborhoodConnectivity$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/NeighborhoodConnectivity$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/NeighborhoodConnectivity$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/NeighborhoodConnectivity$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/NeighborhoodConnectivity$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/NeighborhoodConnectivity$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/NeighborhoodConnectivity$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/NeighborhoodConnectivity$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/NeighborhoodConnectivity$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/NeighborhoodConnectivity$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/NeighborhoodConnectivity$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/NeighborhoodConnectivity$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/NeighborhoodConnectivity$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/NeighborhoodConnectivity$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/NeighborhoodConnectivity$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/NeighborhoodConnectivity$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ml.sparkling.graph.operators.measures.vertex.VertexEmbeddedness", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "object" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/VertexEmbeddedness$.html", "members_object" : [{"label" : "compute", "tail" : "(graph: Graph[VD, ED], vertexMeasureConfiguration: VertexMeasureConfiguration[VD, ED])(arg0: ClassTag[VD], arg1: ClassTag[ED], num: Numeric[ED]): Graph[Double, ED]", "member" : "ml.sparkling.graph.operators.measures.vertex.VertexEmbeddedness.compute", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/VertexEmbeddedness$.html#compute[VD,ED](graph:org.apache.spark.graphx.Graph[VD,ED],vertexMeasureConfiguration:ml.sparkling.graph.api.operators.measures.VertexMeasureConfiguration[VD,ED])(implicitevidence$3:scala.reflect.ClassTag[VD],implicitevidence$4:scala.reflect.ClassTag[ED],implicitnum:Numeric[ED]):org.apache.spark.graphx.Graph[Double,ED]", "kind" : "def"}, {"label" : "computeEmbeddedness", "tail" : "(graph: Graph[VD, ED], vertexMeasureConfiguration: VertexMeasureConfiguration[VD, ED])(arg0: ClassTag[VD], arg1: ClassTag[ED]): Graph[Double, ED]", "member" : "ml.sparkling.graph.operators.measures.vertex.VertexEmbeddedness.computeEmbeddedness", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/VertexEmbeddedness$.html#computeEmbeddedness[VD,ED](graph:org.apache.spark.graphx.Graph[VD,ED],vertexMeasureConfiguration:ml.sparkling.graph.api.operators.measures.VertexMeasureConfiguration[VD,ED])(implicitevidence$1:scala.reflect.ClassTag[VD],implicitevidence$2:scala.reflect.ClassTag[ED]):org.apache.spark.graphx.Graph[Double,ED]", "kind" : "def"}, {"label" : "compute", "tail" : "(graph: Graph[VD, ED])(arg0: ClassTag[VD], arg1: ClassTag[ED], num: Numeric[ED]): Graph[Double, ED]", "member" : "ml.sparkling.graph.api.operators.measures.VertexMeasure.compute", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/VertexEmbeddedness$.html#compute[VD,ED](graph:org.apache.spark.graphx.Graph[VD,ED])(implicitevidence$1:scala.reflect.ClassTag[VD],implicitevidence$2:scala.reflect.ClassTag[ED],implicitnum:Numeric[ED]):org.apache.spark.graphx.Graph[OV,ED]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/VertexEmbeddedness$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/VertexEmbeddedness$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/VertexEmbeddedness$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/VertexEmbeddedness$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/VertexEmbeddedness$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/VertexEmbeddedness$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/VertexEmbeddedness$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/VertexEmbeddedness$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/VertexEmbeddedness$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/VertexEmbeddedness$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/VertexEmbeddedness$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/VertexEmbeddedness$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/VertexEmbeddedness$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/VertexEmbeddedness$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/VertexEmbeddedness$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/VertexEmbeddedness$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/VertexEmbeddedness$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/VertexEmbeddedness$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/VertexEmbeddedness$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.processor" : [{"name" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.processor.CFBCProcessor", "shortDescription" : "Created by mth on 4\/23\/17.", "members_class" : [{"label" : "postMessageExtraction", "tail" : "(graph: Graph[CFBCVertex, ED]): Graph[CFBCVertex, ED]", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.processor.CFBCProcessor.postMessageExtraction", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/processor\/CFBCProcessor.html#postMessageExtraction(graph:org.apache.spark.graphx.Graph[ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCVertex,ED]):org.apache.spark.graphx.Graph[ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCVertex,ED]", "kind" : "def"}, {"label" : "preMessageExtraction", "tail" : "(eps: Double)(graph: Graph[CFBCVertex, ED], msg: VertexRDD[Array[CFBCFlow]]): Graph[CFBCVertex, ED]", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.processor.CFBCProcessor.preMessageExtraction", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/processor\/CFBCProcessor.html#preMessageExtraction(eps:Double)(graph:org.apache.spark.graphx.Graph[ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCVertex,ED],msg:org.apache.spark.graphx.VertexRDD[Array[ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCFlow]]):org.apache.spark.graphx.Graph[ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCVertex,ED]", "kind" : "def"}, {"label" : "extractFlowMessages", "tail" : "(graph: Graph[CFBCVertex, ED]): VertexRDD[Array[CFBCFlow]]", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.processor.CFBCProcessor.extractFlowMessages", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/processor\/CFBCProcessor.html#extractFlowMessages(graph:org.apache.spark.graphx.Graph[ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCVertex,ED]):org.apache.spark.graphx.VertexRDD[Array[ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCFlow]]", "kind" : "def"}, {"label" : "removeCompletedFlows", "tail" : "(vertexId: VertexId, vertex: CFBCVertex): CFBCVertex", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.processor.CFBCProcessor.removeCompletedFlows", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/processor\/CFBCProcessor.html#removeCompletedFlows(vertexId:org.apache.spark.graphx.VertexId,vertex:ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCVertex):ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCVertex", "kind" : "def"}, {"label" : "computeBetweenness", "tail" : "(vertexId: VertexId, vertex: CFBCVertex): CFBCVertex", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.processor.CFBCProcessor.computeBetweenness", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/processor\/CFBCProcessor.html#computeBetweenness(vertexId:org.apache.spark.graphx.VertexId,vertex:ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCVertex):ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCVertex", "kind" : "def"}, {"label" : "applyFlows", "tail" : "(epsilon: Double)(id: VertexId, data: CFBCVertex): CFBCVertex", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.processor.CFBCProcessor.applyFlows", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/processor\/CFBCProcessor.html#applyFlows(epsilon:Double)(id:org.apache.spark.graphx.VertexId,data:ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCVertex):ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCVertex", "kind" : "def"}, {"label" : "joinReceivedFlows", "tail" : "(vertexId: VertexId, vertex: CFBCVertex, msg: Array[CFBCFlow]): CFBCVertex", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.processor.CFBCProcessor.joinReceivedFlows", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/processor\/CFBCProcessor.html#joinReceivedFlows(vertexId:org.apache.spark.graphx.VertexId,vertex:ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCVertex,msg:Array[ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCFlow]):ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCVertex", "kind" : "def"}, {"label" : "createFlow", "tail" : "(graph: Graph[CFBCVertex, ED]): Graph[CFBCVertex, ED]", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.processor.CFBCProcessor.createFlow", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/processor\/CFBCProcessor.html#createFlow(graph:org.apache.spark.graphx.Graph[ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCVertex,ED]):org.apache.spark.graphx.Graph[ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCVertex,ED]", "kind" : "def"}, {"label" : "numOfVertices", "tail" : ": Long", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.processor.CFBCProcessor.numOfVertices", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/processor\/CFBCProcessor.html#numOfVertices:Long", "kind" : "lazy val"}, {"label" : "initGraph", "tail" : ": Graph[CFBCVertex, ED]", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.processor.CFBCProcessor.initGraph", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/processor\/CFBCProcessor.html#initGraph:org.apache.spark.graphx.Graph[ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCVertex,ED]", "kind" : "lazy val"}, {"member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.processor.CFBCProcessor#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/processor\/CFBCProcessor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/processor\/CFBCProcessor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/processor\/CFBCProcessor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/processor\/CFBCProcessor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/processor\/CFBCProcessor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/processor\/CFBCProcessor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/processor\/CFBCProcessor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/processor\/CFBCProcessor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/processor\/CFBCProcessor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/processor\/CFBCProcessor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/processor\/CFBCProcessor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/processor\/CFBCProcessor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/processor\/CFBCProcessor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/processor\/CFBCProcessor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/processor\/CFBCProcessor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/processor\/CFBCProcessor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/processor\/CFBCProcessor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/processor\/CFBCProcessor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/processor\/CFBCProcessor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/processor\/CFBCProcessor.html", "kind" : "class"}], "ml.sparkling.graph.operators.algorithms.community.pscan" : [{"name" : "ml.sparkling.graph.operators.algorithms.community.pscan.PSCAN", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "object" : "ml\/sparkling\/graph\/operators\/algorithms\/community\/pscan\/PSCAN$.html", "members_object" : [{"label" : "detectCommunities", "tail" : "(graph: Graph[VD, ED])(arg0: ClassTag[VD], arg1: ClassTag[ED]): Graph[ComponentID, ED]", "member" : "ml.sparkling.graph.operators.algorithms.community.pscan.PSCAN.detectCommunities", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/community\/pscan\/PSCAN$.html#detectCommunities[VD,ED](graph:org.apache.spark.graphx.Graph[VD,ED])(implicitevidence$5:scala.reflect.ClassTag[VD],implicitevidence$6:scala.reflect.ClassTag[ED]):org.apache.spark.graphx.Graph[ml.sparkling.graph.api.operators.algorithms.community.CommunityDetection.ComponentID,ED]", "kind" : "def"}, {"label" : "computeConnectedComponentsUsing", "tail" : "(graph: Graph[VD, ED], requiredNumberOfComponents: Int, maxIterations: Int)(arg0: ClassTag[VD], arg1: ClassTag[ED]): (Graph[ComponentID, ED], Long)", "member" : "ml.sparkling.graph.operators.algorithms.community.pscan.PSCAN.computeConnectedComponentsUsing", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/community\/pscan\/PSCAN$.html#computeConnectedComponentsUsing[VD,ED](graph:org.apache.spark.graphx.Graph[VD,ED],requiredNumberOfComponents:Int,maxIterations:Int)(implicitevidence$3:scala.reflect.ClassTag[VD],implicitevidence$4:scala.reflect.ClassTag[ED]):(org.apache.spark.graphx.Graph[ml.sparkling.graph.api.operators.algorithms.community.CommunityDetection.ComponentID,ED],Long)", "kind" : "def"}, {"label" : "computeConnectedComponents", "tail" : "(graph: Graph[VD, ED], epsilon: Double)(arg0: ClassTag[VD], arg1: ClassTag[ED]): Graph[ComponentID, ED]", "member" : "ml.sparkling.graph.operators.algorithms.community.pscan.PSCAN.computeConnectedComponents", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/community\/pscan\/PSCAN$.html#computeConnectedComponents[VD,ED](graph:org.apache.spark.graphx.Graph[VD,ED],epsilon:Double)(implicitevidence$1:scala.reflect.ClassTag[VD],implicitevidence$2:scala.reflect.ClassTag[ED]):org.apache.spark.graphx.Graph[ml.sparkling.graph.api.operators.algorithms.community.CommunityDetection.ComponentID,ED]", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "ml.sparkling.graph.operators.algorithms.community.pscan.PSCAN.logger", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/community\/pscan\/PSCAN$.html#logger:org.apache.log4j.Logger", "kind" : "val"}, {"label" : "defaultComponentId", "tail" : ": ComponentID", "member" : "ml.sparkling.graph.operators.algorithms.community.pscan.PSCAN.defaultComponentId", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/community\/pscan\/PSCAN$.html#defaultComponentId:ml.sparkling.graph.api.operators.algorithms.community.CommunityDetection.ComponentID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/community\/pscan\/PSCAN$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/community\/pscan\/PSCAN$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/community\/pscan\/PSCAN$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/community\/pscan\/PSCAN$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/community\/pscan\/PSCAN$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/community\/pscan\/PSCAN$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/community\/pscan\/PSCAN$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/community\/pscan\/PSCAN$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/community\/pscan\/PSCAN$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/community\/pscan\/PSCAN$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/community\/pscan\/PSCAN$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/community\/pscan\/PSCAN$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/community\/pscan\/PSCAN$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/community\/pscan\/PSCAN$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/community\/pscan\/PSCAN$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/community\/pscan\/PSCAN$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/community\/pscan\/PSCAN$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ml.sparkling.graph.operators.algorithms.community.pscan.PSCANConnectedComponents", "shortDescription" : "Created by  Roman Bartusiak <riomus@gmail.com> on 04.06.17.", "members_class" : [{"label" : "sendMessage", "tail" : "(edge: EdgeTriplet[VertexId, Double]): Iterator[(VertexId, VertexId)]", "member" : "ml.sparkling.graph.operators.algorithms.community.pscan.PSCANConnectedComponents.sendMessage", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/community\/pscan\/PSCANConnectedComponents.html#sendMessage(edge:org.apache.spark.graphx.EdgeTriplet[org.apache.spark.graphx.VertexId,Double]):Iterator[(org.apache.spark.graphx.VertexId,org.apache.spark.graphx.VertexId)]", "kind" : "def"}, {"label" : "run", "tail" : "(graph: Graph[VertexId, Double], maxIterations: Int): Graph[VertexId, Double]", "member" : "ml.sparkling.graph.operators.algorithms.community.pscan.PSCANConnectedComponents.run", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/community\/pscan\/PSCANConnectedComponents.html#run[VD,ED](graph:org.apache.spark.graphx.Graph[org.apache.spark.graphx.VertexId,Double],maxIterations:Int):org.apache.spark.graphx.Graph[org.apache.spark.graphx.VertexId,Double]", "kind" : "def"}, {"member" : "ml.sparkling.graph.operators.algorithms.community.pscan.PSCANConnectedComponents#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/community\/pscan\/PSCANConnectedComponents.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/community\/pscan\/PSCANConnectedComponents.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/community\/pscan\/PSCANConnectedComponents.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/community\/pscan\/PSCANConnectedComponents.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/community\/pscan\/PSCANConnectedComponents.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/community\/pscan\/PSCANConnectedComponents.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/community\/pscan\/PSCANConnectedComponents.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/community\/pscan\/PSCANConnectedComponents.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/community\/pscan\/PSCANConnectedComponents.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/community\/pscan\/PSCANConnectedComponents.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/community\/pscan\/PSCANConnectedComponents.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/community\/pscan\/PSCANConnectedComponents.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/community\/pscan\/PSCANConnectedComponents.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/community\/pscan\/PSCANConnectedComponents.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/community\/pscan\/PSCANConnectedComponents.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/community\/pscan\/PSCANConnectedComponents.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/community\/pscan\/PSCANConnectedComponents.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/community\/pscan\/PSCANConnectedComponents.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/community\/pscan\/PSCANConnectedComponents.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ml\/sparkling\/graph\/operators\/algorithms\/community\/pscan\/PSCANConnectedComponents.html", "kind" : "class"}], "ml.sparkling.graph.operators.utils" : [{"name" : "ml.sparkling.graph.operators.utils.BetweennessUtils", "shortDescription" : "Created by mth on 6\/26\/17.", "object" : "ml\/sparkling\/graph\/operators\/utils\/BetweennessUtils$.html", "members_object" : [{"label" : "normalize", "tail" : "(vertices: VertexRDD[Double], directed: Boolean): VertexRDD[Double]", "member" : "ml.sparkling.graph.operators.utils.BetweennessUtils.normalize", "link" : "ml\/sparkling\/graph\/operators\/utils\/BetweennessUtils$.html#normalize(vertices:org.apache.spark.graphx.VertexRDD[Double],directed:Boolean):org.apache.spark.graphx.VertexRDD[Double]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/utils\/BetweennessUtils$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/utils\/BetweennessUtils$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/utils\/BetweennessUtils$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/utils\/BetweennessUtils$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/utils\/BetweennessUtils$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/utils\/BetweennessUtils$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/utils\/BetweennessUtils$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/utils\/BetweennessUtils$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/utils\/BetweennessUtils$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/utils\/BetweennessUtils$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/utils\/BetweennessUtils$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/utils\/BetweennessUtils$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/utils\/BetweennessUtils$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/utils\/BetweennessUtils$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/utils\/BetweennessUtils$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/utils\/BetweennessUtils$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/utils\/BetweennessUtils$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/utils\/BetweennessUtils$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/utils\/BetweennessUtils$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ml.sparkling.graph.operators.utils.LoggerHolder", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "object" : "ml\/sparkling\/graph\/operators\/utils\/LoggerHolder$.html", "members_object" : [{"label" : "log", "tail" : ": Logger", "member" : "ml.sparkling.graph.operators.utils.LoggerHolder.log", "link" : "ml\/sparkling\/graph\/operators\/utils\/LoggerHolder$.html#log:org.apache.log4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/utils\/LoggerHolder$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/utils\/LoggerHolder$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/utils\/LoggerHolder$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/utils\/LoggerHolder$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/utils\/LoggerHolder$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/utils\/LoggerHolder$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/utils\/LoggerHolder$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/utils\/LoggerHolder$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/utils\/LoggerHolder$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/utils\/LoggerHolder$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/utils\/LoggerHolder$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/utils\/LoggerHolder$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/utils\/LoggerHolder$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/utils\/LoggerHolder$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/utils\/LoggerHolder$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/utils\/LoggerHolder$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/utils\/LoggerHolder$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/utils\/LoggerHolder$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/utils\/LoggerHolder$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.struct.messages" : [{"name" : "ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.struct.messages.EdmondsMessage", "shortDescription" : "Created by mth on 7\/9\/17.", "object" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/messages\/EdmondsMessage$.html", "members_class" : [{"label" : "merge", "tail" : "(other: EdmondsMessage): EdmondsMessage", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.struct.messages.EdmondsMessage.merge", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/messages\/EdmondsMessage.html#merge(other:ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.struct.messages.EdmondsMessage):ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.struct.messages.EdmondsMessage", "kind" : "def"}, {"member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.struct.messages.EdmondsMessage#<init>", "error" : "unsupported entity"}, {"label" : "depth", "tail" : ": Int", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.struct.messages.EdmondsMessage.depth", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/messages\/EdmondsMessage.html#depth:Int", "kind" : "val"}, {"label" : "sigma", "tail" : ": Int", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.struct.messages.EdmondsMessage.sigma", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/messages\/EdmondsMessage.html#sigma:Int", "kind" : "val"}, {"label" : "preds", "tail" : ": List[VertexId]", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.struct.messages.EdmondsMessage.preds", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/messages\/EdmondsMessage.html#preds:List[org.apache.spark.graphx.VertexId]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/messages\/EdmondsMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/messages\/EdmondsMessage.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/messages\/EdmondsMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/messages\/EdmondsMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/messages\/EdmondsMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/messages\/EdmondsMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/messages\/EdmondsMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/messages\/EdmondsMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/messages\/EdmondsMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/messages\/EdmondsMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/messages\/EdmondsMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/messages\/EdmondsMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/messages\/EdmondsMessage.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/messages\/EdmondsMessage.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/messages\/EdmondsMessage.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/messages\/EdmondsMessage.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/messages\/EdmondsMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/messages\/EdmondsMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/messages\/EdmondsMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "empty", "tail" : "(): EdmondsMessage", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.struct.messages.EdmondsMessage.empty", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/messages\/EdmondsMessage$.html#empty:ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.struct.messages.EdmondsMessage", "kind" : "def"}, {"label" : "apply", "tail" : "(preds: List[VertexId], sigma: Int, depth: Int): EdmondsMessage", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.struct.messages.EdmondsMessage.apply", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/messages\/EdmondsMessage$.html#apply(preds:List[org.apache.spark.graphx.VertexId],sigma:Int,depth:Int):ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.struct.messages.EdmondsMessage", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/messages\/EdmondsMessage$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/messages\/EdmondsMessage$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/messages\/EdmondsMessage$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/messages\/EdmondsMessage$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/messages\/EdmondsMessage$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/messages\/EdmondsMessage$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/messages\/EdmondsMessage$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/messages\/EdmondsMessage$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/messages\/EdmondsMessage$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/messages\/EdmondsMessage$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/messages\/EdmondsMessage$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/messages\/EdmondsMessage$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/messages\/EdmondsMessage$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/messages\/EdmondsMessage$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/messages\/EdmondsMessage$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/messages\/EdmondsMessage$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/messages\/EdmondsMessage$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/messages\/EdmondsMessage$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/messages\/EdmondsMessage$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/messages\/EdmondsMessage.html", "kind" : "class"}], "ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds" : [{"name" : "ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.EdmondsBC", "shortDescription" : "Created by mth on 3\/12\/17.", "object" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBC$.html", "members_class" : [{"label" : "computeBC", "tail" : "(): VertexRDD[Double]", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.EdmondsBC.computeBC", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBC.html#computeBC:org.apache.spark.graphx.VertexRDD[Double]", "kind" : "def"}, {"label" : "edmondsBFSProcessor", "tail" : ": BFSShortestPath[EdmondsVertex, ED, EdmondsMessage]", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.EdmondsBC.edmondsBFSProcessor", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBC.html#edmondsBFSProcessor:ml.sparkling.graph.operators.algorithms.bfs.BFSShortestPath[ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.struct.EdmondsVertex,ED,ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.struct.messages.EdmondsMessage]", "kind" : "lazy val"}, {"label" : "bcAggregator", "tail" : ": EdmondsBCAggregator[ED]", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.EdmondsBC.bcAggregator", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBC.html#bcAggregator:ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.EdmondsBCAggregator[ED]", "kind" : "val"}, {"label" : "simpleGraph", "tail" : ": Graph[EdmondsVertex, ED]", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.EdmondsBC.simpleGraph", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBC.html#simpleGraph:org.apache.spark.graphx.Graph[ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.struct.EdmondsVertex,ED]", "kind" : "lazy val"}, {"member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.EdmondsBC#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBC.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBC.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBC.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBC.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBC.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBC.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBC.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBC.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBC.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBC.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBC.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBC.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBC.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBC.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBC.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBC.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBC.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBC.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBC.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "computeBC", "tail" : "(graph: Graph[VD, ED])(arg0: ClassTag[ED]): VertexRDD[Double]", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.EdmondsBC.computeBC", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBC$.html#computeBC[VD,ED](graph:org.apache.spark.graphx.Graph[VD,ED])(implicitevidence$2:scala.reflect.ClassTag[ED]):org.apache.spark.graphx.VertexRDD[Double]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBC$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBC$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBC$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBC$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBC$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBC$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBC$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBC$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBC$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBC$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBC$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBC$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBC$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBC$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBC$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBC$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBC$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBC$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBC$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBC.html", "kind" : "class"}, {"name" : "ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.EdmondsBCAggregator", "shortDescription" : "Created by mth on 4\/12\/17.", "members_class" : [{"label" : "aggregate", "tail" : "(graph: Graph[EdmondsVertex, ED], source: VertexId): Graph[EdmondsVertex, ED]", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.EdmondsBCAggregator.aggregate", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBCAggregator.html#aggregate(graph:org.apache.spark.graphx.Graph[ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.struct.EdmondsVertex,ED],source:org.apache.spark.graphx.VertexId):org.apache.spark.graphx.Graph[ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.struct.EdmondsVertex,ED]", "kind" : "def"}, {"member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.EdmondsBCAggregator#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBCAggregator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBCAggregator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBCAggregator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBCAggregator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBCAggregator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBCAggregator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBCAggregator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBCAggregator.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBCAggregator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBCAggregator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBCAggregator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBCAggregator.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBCAggregator.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBCAggregator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBCAggregator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBCAggregator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBCAggregator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBCAggregator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBCAggregator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/EdmondsBCAggregator.html", "kind" : "class"}], "ml.sparkling.graph.api.loaders" : [{"name" : "ml.sparkling.graph.api.loaders.GraphLoading", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "object" : "ml\/sparkling\/graph\/api\/loaders\/GraphLoading$.html", "members_object" : [{"label" : "WithValueParameter", "tail" : "", "member" : "ml.sparkling.graph.api.loaders.GraphLoading.WithValueParameter", "link" : "ml\/sparkling\/graph\/api\/loaders\/GraphLoading$.html#WithValueParameter[V]extendsGraphLoading.Parameter", "kind" : "trait"}, {"label" : "Parameter", "tail" : "", "member" : "ml.sparkling.graph.api.loaders.GraphLoading.Parameter", "link" : "ml\/sparkling\/graph\/api\/loaders\/GraphLoading$.html#ParameterextendsAnyRef", "kind" : "trait"}, {"label" : "GraphLoaderConfigurator", "tail" : "", "member" : "ml.sparkling.graph.api.loaders.GraphLoading.GraphLoaderConfigurator", "link" : "ml\/sparkling\/graph\/api\/loaders\/GraphLoading$.html#GraphLoaderConfigurator[VD,ED]extendsProductwithSerializable", "kind" : "case class"}, {"label" : "LoadGraph", "tail" : "", "member" : "ml.sparkling.graph.api.loaders.GraphLoading.LoadGraph", "link" : "ml\/sparkling\/graph\/api\/loaders\/GraphLoading$.html#LoadGraph", "kind" : "object"}, {"label" : "FromPathLoader", "tail" : "", "member" : "ml.sparkling.graph.api.loaders.GraphLoading.FromPathLoader", "link" : "ml\/sparkling\/graph\/api\/loaders\/GraphLoading$.html#FromPathLoader[VD,ED]extendsAnyRef", "kind" : "trait"}, {"label" : "TypedGraphLoader", "tail" : "", "member" : "ml.sparkling.graph.api.loaders.GraphLoading.TypedGraphLoader", "link" : "ml\/sparkling\/graph\/api\/loaders\/GraphLoading$.html#TypedGraphLoader[VD2,ED2]extendsGraphLoading.GraphLoader[VD2,ED2]", "kind" : "trait"}, {"label" : "GraphLoader", "tail" : "", "member" : "ml.sparkling.graph.api.loaders.GraphLoading.GraphLoader", "link" : "ml\/sparkling\/graph\/api\/loaders\/GraphLoading$.html#GraphLoader[VD,ED]extendsAnyRef", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/api\/loaders\/GraphLoading$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/api\/loaders\/GraphLoading$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/api\/loaders\/GraphLoading$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/api\/loaders\/GraphLoading$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/api\/loaders\/GraphLoading$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/api\/loaders\/GraphLoading$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/api\/loaders\/GraphLoading$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/api\/loaders\/GraphLoading$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/api\/loaders\/GraphLoading$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/api\/loaders\/GraphLoading$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/api\/loaders\/GraphLoading$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/api\/loaders\/GraphLoading$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/api\/loaders\/GraphLoading$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/api\/loaders\/GraphLoading$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/api\/loaders\/GraphLoading$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/api\/loaders\/GraphLoading$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/api\/loaders\/GraphLoading$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/api\/loaders\/GraphLoading$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/api\/loaders\/GraphLoading$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "ml.sparkling.graph.operators.algorithms.random.ctrw" : [{"name" : "ml.sparkling.graph.operators.algorithms.random.ctrw.ContinuousTimeRandomWalk", "shortDescription" : "Created by mth", "members_class" : [{"label" : "sampleVertices", "tail" : "(sampleSize: Int): VertexRDD[List[VertexId]]", "member" : "ml.sparkling.graph.operators.algorithms.random.ctrw.ContinuousTimeRandomWalk.sampleVertices", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/ContinuousTimeRandomWalk.html#sampleVertices(sampleSize:Int):org.apache.spark.graphx.VertexRDD[List[org.apache.spark.graphx.VertexId]]", "kind" : "def"}, {"label" : "ctrwProcessor", "tail" : ": CTRWProcessor[VD, ED]", "member" : "ml.sparkling.graph.operators.algorithms.random.ctrw.ContinuousTimeRandomWalk.ctrwProcessor", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/ContinuousTimeRandomWalk.html#ctrwProcessor:ml.sparkling.graph.operators.algorithms.random.ctrw.processor.CTRWProcessor[VD,ED]", "kind" : "lazy val"}, {"member" : "ml.sparkling.graph.operators.algorithms.random.ctrw.ContinuousTimeRandomWalk#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/ContinuousTimeRandomWalk.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/ContinuousTimeRandomWalk.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/ContinuousTimeRandomWalk.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/ContinuousTimeRandomWalk.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/ContinuousTimeRandomWalk.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/ContinuousTimeRandomWalk.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/ContinuousTimeRandomWalk.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/ContinuousTimeRandomWalk.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/ContinuousTimeRandomWalk.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/ContinuousTimeRandomWalk.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/ContinuousTimeRandomWalk.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/ContinuousTimeRandomWalk.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/ContinuousTimeRandomWalk.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/ContinuousTimeRandomWalk.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/ContinuousTimeRandomWalk.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/ContinuousTimeRandomWalk.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/ContinuousTimeRandomWalk.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/ContinuousTimeRandomWalk.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/ContinuousTimeRandomWalk.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/ContinuousTimeRandomWalk.html", "kind" : "class"}], "ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.struct" : [{"name" : "ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.struct.EdmondsVertex", "shortDescription" : "Created by mth on 3\/13\/17.", "object" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/EdmondsVertex$.html", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.struct.EdmondsVertex.toString", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/EdmondsVertex.html#toString():String", "kind" : "def"}, {"label" : "applyMessage", "tail" : "(msg: EdmondsMessage): EdmondsVertex", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.struct.EdmondsVertex.applyMessage", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/EdmondsVertex.html#applyMessage(msg:ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.struct.messages.EdmondsMessage):ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.struct.EdmondsVertex", "kind" : "def"}, {"label" : "explored", "tail" : ": Boolean", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.struct.EdmondsVertex.explored", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/EdmondsVertex.html#explored:Boolean", "kind" : "val"}, {"member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.struct.EdmondsVertex#<init>", "error" : "unsupported entity"}, {"label" : "bc", "tail" : ": Double", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.struct.EdmondsVertex.bc", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/EdmondsVertex.html#bc:Double", "kind" : "val"}, {"label" : "delta", "tail" : ": Double", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.struct.EdmondsVertex.delta", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/EdmondsVertex.html#delta:Double", "kind" : "val"}, {"label" : "depth", "tail" : ": Int", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.struct.EdmondsVertex.depth", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/EdmondsVertex.html#depth:Int", "kind" : "val"}, {"label" : "sigma", "tail" : ": Int", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.struct.EdmondsVertex.sigma", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/EdmondsVertex.html#sigma:Int", "kind" : "val"}, {"label" : "preds", "tail" : ": List[VertexId]", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.struct.EdmondsVertex.preds", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/EdmondsVertex.html#preds:List[org.apache.spark.graphx.VertexId]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/EdmondsVertex.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/EdmondsVertex.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/EdmondsVertex.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/EdmondsVertex.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/EdmondsVertex.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/EdmondsVertex.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/EdmondsVertex.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/EdmondsVertex.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/EdmondsVertex.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/EdmondsVertex.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/EdmondsVertex.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/EdmondsVertex.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/EdmondsVertex.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/EdmondsVertex.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/EdmondsVertex.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/EdmondsVertex.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/EdmondsVertex.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/EdmondsVertex.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "unapply", "tail" : "(arg: EdmondsVertex): Option[(List[VertexId], Int, Int, Double, Double)]", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.struct.EdmondsVertex.unapply", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/EdmondsVertex$.html#unapply(arg:ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.struct.EdmondsVertex):Option[(List[org.apache.spark.graphx.VertexId],Int,Int,Double,Double)]", "kind" : "def"}, {"label" : "apply", "tail" : "(preds: List[VertexId], sigma: Int, depth: Int, delta: Double, bc: Double): EdmondsVertex", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.struct.EdmondsVertex.apply", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/EdmondsVertex$.html#apply(preds:List[org.apache.spark.graphx.VertexId],sigma:Int,depth:Int,delta:Double,bc:Double):ml.sparkling.graph.operators.measures.vertex.betweenness.edmonds.struct.EdmondsVertex", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/EdmondsVertex$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/EdmondsVertex$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/EdmondsVertex$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/EdmondsVertex$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/EdmondsVertex$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/EdmondsVertex$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/EdmondsVertex$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/EdmondsVertex$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/EdmondsVertex$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/EdmondsVertex$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/EdmondsVertex$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/EdmondsVertex$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/EdmondsVertex$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/EdmondsVertex$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/EdmondsVertex$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/EdmondsVertex$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/EdmondsVertex$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/EdmondsVertex$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/EdmondsVertex$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/edmonds\/struct\/EdmondsVertex.html", "kind" : "class"}], "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.factory" : [{"name" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.factory.FlowFactory", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/factory\/FlowFactory.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/factory\/FlowFactory.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/factory\/FlowFactory.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/factory\/FlowFactory.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/factory\/FlowFactory.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/factory\/FlowFactory.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/factory\/FlowFactory.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/factory\/FlowFactory.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/factory\/FlowFactory.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/factory\/FlowFactory.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/factory\/FlowFactory.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/factory\/FlowFactory.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/factory\/FlowFactory.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/factory\/FlowFactory.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/factory\/FlowFactory.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/factory\/FlowFactory.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/factory\/FlowFactory.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/factory\/FlowFactory.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/factory\/FlowFactory.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "create", "tail" : "(arg: VD): FD", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.factory.FlowFactory.create", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/factory\/FlowFactory.html#create(arg:VD):FD", "kind" : "abstract def"}], "shortDescription" : "Created by mth on 6\/25\/17.", "trait" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/factory\/FlowFactory.html", "kind" : "trait"}], "ml.sparkling.graph.loaders.csv.providers" : [{"name" : "ml.sparkling.graph.loaders.csv.providers.EdgeProviders", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "object" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/EdgeProviders$.html", "members_object" : [{"label" : "twoColumnsMakesEdge", "tail" : "(id1: Int, id2: Int, row: Row)(arg0: ClassTag[VD]): Seq[Edge[Double]]", "member" : "ml.sparkling.graph.loaders.csv.providers.EdgeProviders.twoColumnsMakesEdge", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/EdgeProviders$.html#twoColumnsMakesEdge[VD](id1:Int,id2:Int,row:org.apache.spark.sql.Row)(implicitevidence$3:scala.reflect.ClassTag[VD]):Seq[org.apache.spark.graphx.Edge[Double]]", "kind" : "def"}, {"label" : "twoColumnsMakesEdge", "tail" : "(id1: Int, id2: Int, row: Row, columnToId: ToVertexId[VD], edgeAttributeProvider: EdgeAttributeExtractor[ED])(arg0: ClassTag[VD], arg1: ClassTag[ED]): Seq[Edge[ED]]", "member" : "ml.sparkling.graph.loaders.csv.providers.EdgeProviders.twoColumnsMakesEdge", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/EdgeProviders$.html#twoColumnsMakesEdge[VD,ED](id1:Int,id2:Int,row:org.apache.spark.sql.Row,columnToId:ml.sparkling.graph.loaders.csv.types.Types.ToVertexId[VD],edgeAttributeProvider:ml.sparkling.graph.loaders.csv.types.CSVTypes.EdgeAttributeExtractor[ED])(implicitevidence$1:scala.reflect.ClassTag[VD],implicitevidence$2:scala.reflect.ClassTag[ED]):Seq[org.apache.spark.graphx.Edge[ED]]", "kind" : "def"}, {"label" : "TwoColumnsMakeEdgeProvider", "tail" : "", "member" : "ml.sparkling.graph.loaders.csv.providers.EdgeProviders.TwoColumnsMakeEdgeProvider", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/EdgeProviders$.html#TwoColumnsMakeEdgeProvider[VD,ED]=(Int,Int,org.apache.spark.sql.Row,ml.sparkling.graph.loaders.csv.types.Types.ToVertexId[VD],ml.sparkling.graph.loaders.csv.types.CSVTypes.EdgeAttributeExtractor[ED])=>Seq[org.apache.spark.graphx.Edge[ED]]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/EdgeProviders$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/EdgeProviders$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/EdgeProviders$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/EdgeProviders$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/EdgeProviders$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/EdgeProviders$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/EdgeProviders$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/EdgeProviders$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/EdgeProviders$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/EdgeProviders$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/EdgeProviders$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/EdgeProviders$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/EdgeProviders$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/EdgeProviders$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/EdgeProviders$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/EdgeProviders$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/EdgeProviders$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/EdgeProviders$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/EdgeProviders$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ml.sparkling.graph.loaders.csv.providers.GraphProviders", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "object" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/GraphProviders$.html", "members_object" : [{"label" : "indexedGraphBuilder", "tail" : "(defaultVertex: Option[VD], vertexProvider: (Row, ToVertexId[VD]) ⇒ Seq[(VertexId, VD)], edgeProvider: (Row, ToVertexId[VD]) ⇒ Seq[Edge[ED]], columnsToIndex: Seq[Int], edgeStorageLevel: StorageLevel, vertexStorageLevel: StorageLevel)(dataFrame: DataFrame)(arg0: ClassTag[VD], arg1: ClassTag[ED]): Graph[VD, ED]", "member" : "ml.sparkling.graph.loaders.csv.providers.GraphProviders.indexedGraphBuilder", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/GraphProviders$.html#indexedGraphBuilder[VD,ED](defaultVertex:Option[VD],vertexProvider:(org.apache.spark.sql.Row,ml.sparkling.graph.loaders.csv.types.Types.ToVertexId[VD])=>Seq[(org.apache.spark.graphx.VertexId,VD)],edgeProvider:(org.apache.spark.sql.Row,ml.sparkling.graph.loaders.csv.types.Types.ToVertexId[VD])=>Seq[org.apache.spark.graphx.Edge[ED]],columnsToIndex:Seq[Int],edgeStorageLevel:org.apache.spark.storage.StorageLevel,vertexStorageLevel:org.apache.spark.storage.StorageLevel)(dataFrame:org.apache.spark.sql.DataFrame)(implicitevidence$4:scala.reflect.ClassTag[VD],implicitevidence$5:scala.reflect.ClassTag[ED]):org.apache.spark.graphx.Graph[VD,ED]", "kind" : "def"}, {"label" : "simpleGraphBuilder", "tail" : "(defaultVertex: Option[VD], vertexProvider: (Row) ⇒ Seq[(VertexId, VD)], edgeProvider: (Row) ⇒ Seq[Edge[ED]], edgeStorageLevel: StorageLevel, vertexStorageLevel: StorageLevel)(dataFrame: DataFrame)(arg0: ClassTag[VD], arg1: ClassTag[ED]): Graph[VD, ED]", "member" : "ml.sparkling.graph.loaders.csv.providers.GraphProviders.simpleGraphBuilder", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/GraphProviders$.html#simpleGraphBuilder[VD,ED](defaultVertex:Option[VD],vertexProvider:org.apache.spark.sql.Row=>Seq[(org.apache.spark.graphx.VertexId,VD)],edgeProvider:org.apache.spark.sql.Row=>Seq[org.apache.spark.graphx.Edge[ED]],edgeStorageLevel:org.apache.spark.storage.StorageLevel,vertexStorageLevel:org.apache.spark.storage.StorageLevel)(dataFrame:org.apache.spark.sql.DataFrame)(implicitevidence$1:scala.reflect.ClassTag[VD],implicitevidence$2:scala.reflect.ClassTag[ED]):org.apache.spark.graphx.Graph[VD,ED]", "kind" : "def"}, {"label" : "defaultStorageLevel", "tail" : ": StorageLevel", "member" : "ml.sparkling.graph.loaders.csv.providers.GraphProviders.defaultStorageLevel", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/GraphProviders$.html#defaultStorageLevel:org.apache.spark.storage.StorageLevel", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/GraphProviders$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/GraphProviders$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/GraphProviders$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/GraphProviders$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/GraphProviders$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/GraphProviders$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/GraphProviders$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/GraphProviders$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/GraphProviders$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/GraphProviders$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/GraphProviders$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/GraphProviders$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/GraphProviders$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/GraphProviders$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/GraphProviders$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/GraphProviders$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/GraphProviders$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/GraphProviders$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/GraphProviders$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ml.sparkling.graph.loaders.csv.providers.PropertyProviders", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "object" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/PropertyProviders$.html", "members_object" : [{"label" : "longAttributeProvider", "tail" : "(index: Int)(row: Row): Long", "member" : "ml.sparkling.graph.loaders.csv.providers.PropertyProviders.longAttributeProvider", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/PropertyProviders$.html#longAttributeProvider(index:Int)(row:org.apache.spark.sql.Row):Long", "kind" : "def"}, {"label" : "doubleAttributeProvider", "tail" : "(index: Int)(row: Row): Double", "member" : "ml.sparkling.graph.loaders.csv.providers.PropertyProviders.doubleAttributeProvider", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/PropertyProviders$.html#doubleAttributeProvider(index:Int)(row:org.apache.spark.sql.Row):Double", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/PropertyProviders$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/PropertyProviders$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/PropertyProviders$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/PropertyProviders$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/PropertyProviders$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/PropertyProviders$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/PropertyProviders$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/PropertyProviders$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/PropertyProviders$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/PropertyProviders$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/PropertyProviders$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/PropertyProviders$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/PropertyProviders$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/PropertyProviders$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/PropertyProviders$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/PropertyProviders$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/PropertyProviders$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/PropertyProviders$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/PropertyProviders$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ml.sparkling.graph.loaders.csv.providers.VertexProviders", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "object" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/VertexProviders$.html", "members_object" : [{"label" : "columnsAsVertex", "tail" : "(ids: Seq[Int], row: Row, columnToId: ToVertexId[VT]): Seq[(VertexId, VT)]", "member" : "ml.sparkling.graph.loaders.csv.providers.VertexProviders.columnsAsVertex", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/VertexProviders$.html#columnsAsVertex[VT](ids:Seq[Int],row:org.apache.spark.sql.Row,columnToId:ml.sparkling.graph.loaders.csv.types.Types.ToVertexId[VT]):Seq[(org.apache.spark.graphx.VertexId,VT)]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/VertexProviders$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/VertexProviders$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/VertexProviders$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/VertexProviders$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/VertexProviders$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/VertexProviders$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/VertexProviders$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/VertexProviders$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/VertexProviders$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/VertexProviders$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/VertexProviders$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/VertexProviders$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/VertexProviders$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/VertexProviders$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/VertexProviders$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/VertexProviders$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/VertexProviders$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/VertexProviders$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/loaders\/csv\/providers\/VertexProviders$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "ml.sparkling.graph.examples" : [{"name" : "ml.sparkling.graph.examples.ApproximateShortestPathsToDirectory", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "object" : "ml\/sparkling\/graph\/examples\/ApproximateShortestPathsToDirectory$.html", "members_object" : [{"label" : "body", "tail" : "(): Unit", "member" : "ml.sparkling.graph.examples.ApproximateShortestPathsToDirectory.body", "link" : "ml\/sparkling\/graph\/examples\/ApproximateShortestPathsToDirectory$.html#body():Unit", "kind" : "def"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "ml.sparkling.graph.examples.ExampleApp.main", "link" : "ml\/sparkling\/graph\/examples\/ApproximateShortestPathsToDirectory$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "ctx", "tail" : ": SparkContext", "member" : "ml.sparkling.graph.examples.ExampleApp.ctx", "link" : "ml\/sparkling\/graph\/examples\/ApproximateShortestPathsToDirectory$.html#ctx:org.apache.spark.SparkContext", "kind" : "implicit var"}, {"label" : "noUi", "tail" : ": Boolean", "member" : "ml.sparkling.graph.examples.ExampleApp.noUi", "link" : "ml\/sparkling\/graph\/examples\/ApproximateShortestPathsToDirectory$.html#noUi:Boolean", "kind" : "var"}, {"label" : "master", "tail" : ": Option[String]", "member" : "ml.sparkling.graph.examples.ExampleApp.master", "link" : "ml\/sparkling\/graph\/examples\/ApproximateShortestPathsToDirectory$.html#master:Option[String]", "kind" : "var"}, {"label" : "partitionedGraph", "tail" : ": Graph[String, Double]", "member" : "ml.sparkling.graph.examples.ExampleApp.partitionedGraph", "link" : "ml\/sparkling\/graph\/examples\/ApproximateShortestPathsToDirectory$.html#partitionedGraph:org.apache.spark.graphx.Graph[String,Double]", "kind" : "var"}, {"label" : "bucketSize", "tail" : ": Long", "member" : "ml.sparkling.graph.examples.ExampleApp.bucketSize", "link" : "ml\/sparkling\/graph\/examples\/ApproximateShortestPathsToDirectory$.html#bucketSize:Long", "kind" : "var"}, {"label" : "withIndexing", "tail" : ": Boolean", "member" : "ml.sparkling.graph.examples.ExampleApp.withIndexing", "link" : "ml\/sparkling\/graph\/examples\/ApproximateShortestPathsToDirectory$.html#withIndexing:Boolean", "kind" : "var"}, {"label" : "treatAsUndirected", "tail" : ": Boolean", "member" : "ml.sparkling.graph.examples.ExampleApp.treatAsUndirected", "link" : "ml\/sparkling\/graph\/examples\/ApproximateShortestPathsToDirectory$.html#treatAsUndirected:Boolean", "kind" : "var"}, {"label" : "edgeField", "tail" : ": Int", "member" : "ml.sparkling.graph.examples.ExampleApp.edgeField", "link" : "ml\/sparkling\/graph\/examples\/ApproximateShortestPathsToDirectory$.html#edgeField:Int", "kind" : "var"}, {"label" : "graphPartitions", "tail" : ": Int", "member" : "ml.sparkling.graph.examples.ExampleApp.graphPartitions", "link" : "ml\/sparkling\/graph\/examples\/ApproximateShortestPathsToDirectory$.html#graphPartitions:Int", "kind" : "var"}, {"label" : "partitionNumber", "tail" : ": Int", "member" : "ml.sparkling.graph.examples.ExampleApp.partitionNumber", "link" : "ml\/sparkling\/graph\/examples\/ApproximateShortestPathsToDirectory$.html#partitionNumber:Int", "kind" : "var"}, {"label" : "name", "tail" : ": String", "member" : "ml.sparkling.graph.examples.ExampleApp.name", "link" : "ml\/sparkling\/graph\/examples\/ApproximateShortestPathsToDirectory$.html#name:String", "kind" : "var"}, {"label" : "delimiter", "tail" : ": String", "member" : "ml.sparkling.graph.examples.ExampleApp.delimiter", "link" : "ml\/sparkling\/graph\/examples\/ApproximateShortestPathsToDirectory$.html#delimiter:String", "kind" : "var"}, {"label" : "out", "tail" : ": String", "member" : "ml.sparkling.graph.examples.ExampleApp.out", "link" : "ml\/sparkling\/graph\/examples\/ApproximateShortestPathsToDirectory$.html#out:String", "kind" : "var"}, {"label" : "file", "tail" : ": String", "member" : "ml.sparkling.graph.examples.ExampleApp.file", "link" : "ml\/sparkling\/graph\/examples\/ApproximateShortestPathsToDirectory$.html#file:String", "kind" : "var"}, {"label" : "logger", "tail" : ": Logger", "member" : "ml.sparkling.graph.examples.ExampleApp.logger", "link" : "ml\/sparkling\/graph\/examples\/ApproximateShortestPathsToDirectory$.html#logger:org.apache.log4j.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/examples\/ApproximateShortestPathsToDirectory$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/examples\/ApproximateShortestPathsToDirectory$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/examples\/ApproximateShortestPathsToDirectory$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/examples\/ApproximateShortestPathsToDirectory$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/examples\/ApproximateShortestPathsToDirectory$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/examples\/ApproximateShortestPathsToDirectory$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/examples\/ApproximateShortestPathsToDirectory$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/examples\/ApproximateShortestPathsToDirectory$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/examples\/ApproximateShortestPathsToDirectory$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/examples\/ApproximateShortestPathsToDirectory$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/examples\/ApproximateShortestPathsToDirectory$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/examples\/ApproximateShortestPathsToDirectory$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/examples\/ApproximateShortestPathsToDirectory$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/examples\/ApproximateShortestPathsToDirectory$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/examples\/ApproximateShortestPathsToDirectory$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/examples\/ApproximateShortestPathsToDirectory$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/examples\/ApproximateShortestPathsToDirectory$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ml.sparkling.graph.examples.ExampleApp", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "members_class" : [{"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "ml.sparkling.graph.examples.ExampleApp.main", "link" : "ml\/sparkling\/graph\/examples\/ExampleApp.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "ctx", "tail" : ": SparkContext", "member" : "ml.sparkling.graph.examples.ExampleApp.ctx", "link" : "ml\/sparkling\/graph\/examples\/ExampleApp.html#ctx:org.apache.spark.SparkContext", "kind" : "implicit var"}, {"label" : "noUi", "tail" : ": Boolean", "member" : "ml.sparkling.graph.examples.ExampleApp.noUi", "link" : "ml\/sparkling\/graph\/examples\/ExampleApp.html#noUi:Boolean", "kind" : "var"}, {"label" : "master", "tail" : ": Option[String]", "member" : "ml.sparkling.graph.examples.ExampleApp.master", "link" : "ml\/sparkling\/graph\/examples\/ExampleApp.html#master:Option[String]", "kind" : "var"}, {"label" : "partitionedGraph", "tail" : ": Graph[String, Double]", "member" : "ml.sparkling.graph.examples.ExampleApp.partitionedGraph", "link" : "ml\/sparkling\/graph\/examples\/ExampleApp.html#partitionedGraph:org.apache.spark.graphx.Graph[String,Double]", "kind" : "var"}, {"label" : "bucketSize", "tail" : ": Long", "member" : "ml.sparkling.graph.examples.ExampleApp.bucketSize", "link" : "ml\/sparkling\/graph\/examples\/ExampleApp.html#bucketSize:Long", "kind" : "var"}, {"label" : "withIndexing", "tail" : ": Boolean", "member" : "ml.sparkling.graph.examples.ExampleApp.withIndexing", "link" : "ml\/sparkling\/graph\/examples\/ExampleApp.html#withIndexing:Boolean", "kind" : "var"}, {"label" : "treatAsUndirected", "tail" : ": Boolean", "member" : "ml.sparkling.graph.examples.ExampleApp.treatAsUndirected", "link" : "ml\/sparkling\/graph\/examples\/ExampleApp.html#treatAsUndirected:Boolean", "kind" : "var"}, {"label" : "edgeField", "tail" : ": Int", "member" : "ml.sparkling.graph.examples.ExampleApp.edgeField", "link" : "ml\/sparkling\/graph\/examples\/ExampleApp.html#edgeField:Int", "kind" : "var"}, {"label" : "graphPartitions", "tail" : ": Int", "member" : "ml.sparkling.graph.examples.ExampleApp.graphPartitions", "link" : "ml\/sparkling\/graph\/examples\/ExampleApp.html#graphPartitions:Int", "kind" : "var"}, {"label" : "partitionNumber", "tail" : ": Int", "member" : "ml.sparkling.graph.examples.ExampleApp.partitionNumber", "link" : "ml\/sparkling\/graph\/examples\/ExampleApp.html#partitionNumber:Int", "kind" : "var"}, {"label" : "name", "tail" : ": String", "member" : "ml.sparkling.graph.examples.ExampleApp.name", "link" : "ml\/sparkling\/graph\/examples\/ExampleApp.html#name:String", "kind" : "var"}, {"label" : "delimiter", "tail" : ": String", "member" : "ml.sparkling.graph.examples.ExampleApp.delimiter", "link" : "ml\/sparkling\/graph\/examples\/ExampleApp.html#delimiter:String", "kind" : "var"}, {"label" : "out", "tail" : ": String", "member" : "ml.sparkling.graph.examples.ExampleApp.out", "link" : "ml\/sparkling\/graph\/examples\/ExampleApp.html#out:String", "kind" : "var"}, {"label" : "file", "tail" : ": String", "member" : "ml.sparkling.graph.examples.ExampleApp.file", "link" : "ml\/sparkling\/graph\/examples\/ExampleApp.html#file:String", "kind" : "var"}, {"label" : "logger", "tail" : ": Logger", "member" : "ml.sparkling.graph.examples.ExampleApp.logger", "link" : "ml\/sparkling\/graph\/examples\/ExampleApp.html#logger:org.apache.log4j.Logger", "kind" : "val"}, {"member" : "ml.sparkling.graph.examples.ExampleApp#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/examples\/ExampleApp.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/examples\/ExampleApp.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/examples\/ExampleApp.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/examples\/ExampleApp.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/examples\/ExampleApp.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/examples\/ExampleApp.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/examples\/ExampleApp.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/examples\/ExampleApp.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/examples\/ExampleApp.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/examples\/ExampleApp.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/examples\/ExampleApp.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/examples\/ExampleApp.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/examples\/ExampleApp.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/examples\/ExampleApp.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/examples\/ExampleApp.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/examples\/ExampleApp.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/examples\/ExampleApp.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/examples\/ExampleApp.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/examples\/ExampleApp.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "body", "tail" : "(): Unit", "member" : "ml.sparkling.graph.examples.ExampleApp.body", "link" : "ml\/sparkling\/graph\/examples\/ExampleApp.html#body():Unit", "kind" : "abstract def"}], "class" : "ml\/sparkling\/graph\/examples\/ExampleApp.html", "kind" : "class"}, {"name" : "ml.sparkling.graph.examples.GraphDescriptionFromCSV", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "object" : "ml\/sparkling\/graph\/examples\/GraphDescriptionFromCSV$.html", "members_object" : [{"label" : "body", "tail" : "(): Unit", "member" : "ml.sparkling.graph.examples.GraphDescriptionFromCSV.body", "link" : "ml\/sparkling\/graph\/examples\/GraphDescriptionFromCSV$.html#body():Unit", "kind" : "def"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "ml.sparkling.graph.examples.ExampleApp.main", "link" : "ml\/sparkling\/graph\/examples\/GraphDescriptionFromCSV$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "ctx", "tail" : ": SparkContext", "member" : "ml.sparkling.graph.examples.ExampleApp.ctx", "link" : "ml\/sparkling\/graph\/examples\/GraphDescriptionFromCSV$.html#ctx:org.apache.spark.SparkContext", "kind" : "implicit var"}, {"label" : "noUi", "tail" : ": Boolean", "member" : "ml.sparkling.graph.examples.ExampleApp.noUi", "link" : "ml\/sparkling\/graph\/examples\/GraphDescriptionFromCSV$.html#noUi:Boolean", "kind" : "var"}, {"label" : "master", "tail" : ": Option[String]", "member" : "ml.sparkling.graph.examples.ExampleApp.master", "link" : "ml\/sparkling\/graph\/examples\/GraphDescriptionFromCSV$.html#master:Option[String]", "kind" : "var"}, {"label" : "partitionedGraph", "tail" : ": Graph[String, Double]", "member" : "ml.sparkling.graph.examples.ExampleApp.partitionedGraph", "link" : "ml\/sparkling\/graph\/examples\/GraphDescriptionFromCSV$.html#partitionedGraph:org.apache.spark.graphx.Graph[String,Double]", "kind" : "var"}, {"label" : "bucketSize", "tail" : ": Long", "member" : "ml.sparkling.graph.examples.ExampleApp.bucketSize", "link" : "ml\/sparkling\/graph\/examples\/GraphDescriptionFromCSV$.html#bucketSize:Long", "kind" : "var"}, {"label" : "withIndexing", "tail" : ": Boolean", "member" : "ml.sparkling.graph.examples.ExampleApp.withIndexing", "link" : "ml\/sparkling\/graph\/examples\/GraphDescriptionFromCSV$.html#withIndexing:Boolean", "kind" : "var"}, {"label" : "treatAsUndirected", "tail" : ": Boolean", "member" : "ml.sparkling.graph.examples.ExampleApp.treatAsUndirected", "link" : "ml\/sparkling\/graph\/examples\/GraphDescriptionFromCSV$.html#treatAsUndirected:Boolean", "kind" : "var"}, {"label" : "edgeField", "tail" : ": Int", "member" : "ml.sparkling.graph.examples.ExampleApp.edgeField", "link" : "ml\/sparkling\/graph\/examples\/GraphDescriptionFromCSV$.html#edgeField:Int", "kind" : "var"}, {"label" : "graphPartitions", "tail" : ": Int", "member" : "ml.sparkling.graph.examples.ExampleApp.graphPartitions", "link" : "ml\/sparkling\/graph\/examples\/GraphDescriptionFromCSV$.html#graphPartitions:Int", "kind" : "var"}, {"label" : "partitionNumber", "tail" : ": Int", "member" : "ml.sparkling.graph.examples.ExampleApp.partitionNumber", "link" : "ml\/sparkling\/graph\/examples\/GraphDescriptionFromCSV$.html#partitionNumber:Int", "kind" : "var"}, {"label" : "name", "tail" : ": String", "member" : "ml.sparkling.graph.examples.ExampleApp.name", "link" : "ml\/sparkling\/graph\/examples\/GraphDescriptionFromCSV$.html#name:String", "kind" : "var"}, {"label" : "delimiter", "tail" : ": String", "member" : "ml.sparkling.graph.examples.ExampleApp.delimiter", "link" : "ml\/sparkling\/graph\/examples\/GraphDescriptionFromCSV$.html#delimiter:String", "kind" : "var"}, {"label" : "out", "tail" : ": String", "member" : "ml.sparkling.graph.examples.ExampleApp.out", "link" : "ml\/sparkling\/graph\/examples\/GraphDescriptionFromCSV$.html#out:String", "kind" : "var"}, {"label" : "file", "tail" : ": String", "member" : "ml.sparkling.graph.examples.ExampleApp.file", "link" : "ml\/sparkling\/graph\/examples\/GraphDescriptionFromCSV$.html#file:String", "kind" : "var"}, {"label" : "logger", "tail" : ": Logger", "member" : "ml.sparkling.graph.examples.ExampleApp.logger", "link" : "ml\/sparkling\/graph\/examples\/GraphDescriptionFromCSV$.html#logger:org.apache.log4j.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/examples\/GraphDescriptionFromCSV$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/examples\/GraphDescriptionFromCSV$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/examples\/GraphDescriptionFromCSV$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/examples\/GraphDescriptionFromCSV$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/examples\/GraphDescriptionFromCSV$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/examples\/GraphDescriptionFromCSV$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/examples\/GraphDescriptionFromCSV$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/examples\/GraphDescriptionFromCSV$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/examples\/GraphDescriptionFromCSV$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/examples\/GraphDescriptionFromCSV$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/examples\/GraphDescriptionFromCSV$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/examples\/GraphDescriptionFromCSV$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/examples\/GraphDescriptionFromCSV$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/examples\/GraphDescriptionFromCSV$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/examples\/GraphDescriptionFromCSV$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/examples\/GraphDescriptionFromCSV$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/examples\/GraphDescriptionFromCSV$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/examples\/GraphDescriptionFromCSV$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/examples\/GraphDescriptionFromCSV$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ml.sparkling.graph.examples.MatrixCreator", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "object" : "ml\/sparkling\/graph\/examples\/MatrixCreator$.html", "members_object" : [{"label" : "stringToList", "tail" : "(tupleDelimiter: String, rest: List[String]): List[(Int, Long)]", "member" : "ml.sparkling.graph.examples.MatrixCreator.stringToList", "link" : "ml\/sparkling\/graph\/examples\/MatrixCreator$.html#stringToList(tupleDelimiter:String,rest:List[String]):List[(Int,Long)]", "kind" : "def"}, {"label" : "loadWithPartitions", "tail" : "(ctx: SparkContext, file: File, partitions: Option[Int]): RDD[String]", "member" : "ml.sparkling.graph.examples.MatrixCreator.loadWithPartitions", "link" : "ml\/sparkling\/graph\/examples\/MatrixCreator$.html#loadWithPartitions(ctx:org.apache.spark.SparkContext,file:java.io.File,partitions:Option[Int]):org.apache.spark.rdd.RDD[String]", "kind" : "def"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "ml.sparkling.graph.examples.MatrixCreator.main", "link" : "ml\/sparkling\/graph\/examples\/MatrixCreator$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "ml.sparkling.graph.examples.MatrixCreator.logger", "link" : "ml\/sparkling\/graph\/examples\/MatrixCreator$.html#logger:org.apache.log4j.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/examples\/MatrixCreator$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/examples\/MatrixCreator$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/examples\/MatrixCreator$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/examples\/MatrixCreator$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/examples\/MatrixCreator$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/examples\/MatrixCreator$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/examples\/MatrixCreator$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/examples\/MatrixCreator$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/examples\/MatrixCreator$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/examples\/MatrixCreator$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/examples\/MatrixCreator$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/examples\/MatrixCreator$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/examples\/MatrixCreator$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/examples\/MatrixCreator$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/examples\/MatrixCreator$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/examples\/MatrixCreator$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/examples\/MatrixCreator$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/examples\/MatrixCreator$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/examples\/MatrixCreator$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ml.sparkling.graph.examples.NetworkRandomization", "shortDescription" : "Created by riomus on 20.04.16.", "object" : "ml\/sparkling\/graph\/examples\/NetworkRandomization$.html", "members_object" : [{"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "ml.sparkling.graph.examples.NetworkRandomization.main", "link" : "ml\/sparkling\/graph\/examples\/NetworkRandomization$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/examples\/NetworkRandomization$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/examples\/NetworkRandomization$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/examples\/NetworkRandomization$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/examples\/NetworkRandomization$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/examples\/NetworkRandomization$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/examples\/NetworkRandomization$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/examples\/NetworkRandomization$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/examples\/NetworkRandomization$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/examples\/NetworkRandomization$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/examples\/NetworkRandomization$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/examples\/NetworkRandomization$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/examples\/NetworkRandomization$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/examples\/NetworkRandomization$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/examples\/NetworkRandomization$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/examples\/NetworkRandomization$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/examples\/NetworkRandomization$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/examples\/NetworkRandomization$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/examples\/NetworkRandomization$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/examples\/NetworkRandomization$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ml.sparkling.graph.examples.ShortestPathLengthsFromCSV", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "object" : "ml\/sparkling\/graph\/examples\/ShortestPathLengthsFromCSV$.html", "members_object" : [{"label" : "body", "tail" : "(): Unit", "member" : "ml.sparkling.graph.examples.ShortestPathLengthsFromCSV.body", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathLengthsFromCSV$.html#body():Unit", "kind" : "def"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "ml.sparkling.graph.examples.ExampleApp.main", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathLengthsFromCSV$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "ctx", "tail" : ": SparkContext", "member" : "ml.sparkling.graph.examples.ExampleApp.ctx", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathLengthsFromCSV$.html#ctx:org.apache.spark.SparkContext", "kind" : "implicit var"}, {"label" : "noUi", "tail" : ": Boolean", "member" : "ml.sparkling.graph.examples.ExampleApp.noUi", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathLengthsFromCSV$.html#noUi:Boolean", "kind" : "var"}, {"label" : "master", "tail" : ": Option[String]", "member" : "ml.sparkling.graph.examples.ExampleApp.master", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathLengthsFromCSV$.html#master:Option[String]", "kind" : "var"}, {"label" : "partitionedGraph", "tail" : ": Graph[String, Double]", "member" : "ml.sparkling.graph.examples.ExampleApp.partitionedGraph", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathLengthsFromCSV$.html#partitionedGraph:org.apache.spark.graphx.Graph[String,Double]", "kind" : "var"}, {"label" : "bucketSize", "tail" : ": Long", "member" : "ml.sparkling.graph.examples.ExampleApp.bucketSize", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathLengthsFromCSV$.html#bucketSize:Long", "kind" : "var"}, {"label" : "withIndexing", "tail" : ": Boolean", "member" : "ml.sparkling.graph.examples.ExampleApp.withIndexing", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathLengthsFromCSV$.html#withIndexing:Boolean", "kind" : "var"}, {"label" : "treatAsUndirected", "tail" : ": Boolean", "member" : "ml.sparkling.graph.examples.ExampleApp.treatAsUndirected", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathLengthsFromCSV$.html#treatAsUndirected:Boolean", "kind" : "var"}, {"label" : "edgeField", "tail" : ": Int", "member" : "ml.sparkling.graph.examples.ExampleApp.edgeField", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathLengthsFromCSV$.html#edgeField:Int", "kind" : "var"}, {"label" : "graphPartitions", "tail" : ": Int", "member" : "ml.sparkling.graph.examples.ExampleApp.graphPartitions", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathLengthsFromCSV$.html#graphPartitions:Int", "kind" : "var"}, {"label" : "partitionNumber", "tail" : ": Int", "member" : "ml.sparkling.graph.examples.ExampleApp.partitionNumber", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathLengthsFromCSV$.html#partitionNumber:Int", "kind" : "var"}, {"label" : "name", "tail" : ": String", "member" : "ml.sparkling.graph.examples.ExampleApp.name", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathLengthsFromCSV$.html#name:String", "kind" : "var"}, {"label" : "delimiter", "tail" : ": String", "member" : "ml.sparkling.graph.examples.ExampleApp.delimiter", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathLengthsFromCSV$.html#delimiter:String", "kind" : "var"}, {"label" : "out", "tail" : ": String", "member" : "ml.sparkling.graph.examples.ExampleApp.out", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathLengthsFromCSV$.html#out:String", "kind" : "var"}, {"label" : "file", "tail" : ": String", "member" : "ml.sparkling.graph.examples.ExampleApp.file", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathLengthsFromCSV$.html#file:String", "kind" : "var"}, {"label" : "logger", "tail" : ": Logger", "member" : "ml.sparkling.graph.examples.ExampleApp.logger", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathLengthsFromCSV$.html#logger:org.apache.log4j.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathLengthsFromCSV$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathLengthsFromCSV$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathLengthsFromCSV$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathLengthsFromCSV$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathLengthsFromCSV$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathLengthsFromCSV$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathLengthsFromCSV$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathLengthsFromCSV$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathLengthsFromCSV$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathLengthsFromCSV$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathLengthsFromCSV$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathLengthsFromCSV$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathLengthsFromCSV$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathLengthsFromCSV$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathLengthsFromCSV$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathLengthsFromCSV$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathLengthsFromCSV$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathLengthsFromCSV$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathLengthsFromCSV$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ml.sparkling.graph.examples.ShortestPathsToDirectory", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "object" : "ml\/sparkling\/graph\/examples\/ShortestPathsToDirectory$.html", "members_object" : [{"label" : "body", "tail" : "(): Unit", "member" : "ml.sparkling.graph.examples.ShortestPathsToDirectory.body", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathsToDirectory$.html#body():Unit", "kind" : "def"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "ml.sparkling.graph.examples.ExampleApp.main", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathsToDirectory$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "ctx", "tail" : ": SparkContext", "member" : "ml.sparkling.graph.examples.ExampleApp.ctx", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathsToDirectory$.html#ctx:org.apache.spark.SparkContext", "kind" : "implicit var"}, {"label" : "noUi", "tail" : ": Boolean", "member" : "ml.sparkling.graph.examples.ExampleApp.noUi", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathsToDirectory$.html#noUi:Boolean", "kind" : "var"}, {"label" : "master", "tail" : ": Option[String]", "member" : "ml.sparkling.graph.examples.ExampleApp.master", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathsToDirectory$.html#master:Option[String]", "kind" : "var"}, {"label" : "partitionedGraph", "tail" : ": Graph[String, Double]", "member" : "ml.sparkling.graph.examples.ExampleApp.partitionedGraph", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathsToDirectory$.html#partitionedGraph:org.apache.spark.graphx.Graph[String,Double]", "kind" : "var"}, {"label" : "bucketSize", "tail" : ": Long", "member" : "ml.sparkling.graph.examples.ExampleApp.bucketSize", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathsToDirectory$.html#bucketSize:Long", "kind" : "var"}, {"label" : "withIndexing", "tail" : ": Boolean", "member" : "ml.sparkling.graph.examples.ExampleApp.withIndexing", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathsToDirectory$.html#withIndexing:Boolean", "kind" : "var"}, {"label" : "treatAsUndirected", "tail" : ": Boolean", "member" : "ml.sparkling.graph.examples.ExampleApp.treatAsUndirected", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathsToDirectory$.html#treatAsUndirected:Boolean", "kind" : "var"}, {"label" : "edgeField", "tail" : ": Int", "member" : "ml.sparkling.graph.examples.ExampleApp.edgeField", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathsToDirectory$.html#edgeField:Int", "kind" : "var"}, {"label" : "graphPartitions", "tail" : ": Int", "member" : "ml.sparkling.graph.examples.ExampleApp.graphPartitions", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathsToDirectory$.html#graphPartitions:Int", "kind" : "var"}, {"label" : "partitionNumber", "tail" : ": Int", "member" : "ml.sparkling.graph.examples.ExampleApp.partitionNumber", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathsToDirectory$.html#partitionNumber:Int", "kind" : "var"}, {"label" : "name", "tail" : ": String", "member" : "ml.sparkling.graph.examples.ExampleApp.name", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathsToDirectory$.html#name:String", "kind" : "var"}, {"label" : "delimiter", "tail" : ": String", "member" : "ml.sparkling.graph.examples.ExampleApp.delimiter", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathsToDirectory$.html#delimiter:String", "kind" : "var"}, {"label" : "out", "tail" : ": String", "member" : "ml.sparkling.graph.examples.ExampleApp.out", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathsToDirectory$.html#out:String", "kind" : "var"}, {"label" : "file", "tail" : ": String", "member" : "ml.sparkling.graph.examples.ExampleApp.file", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathsToDirectory$.html#file:String", "kind" : "var"}, {"label" : "logger", "tail" : ": Logger", "member" : "ml.sparkling.graph.examples.ExampleApp.logger", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathsToDirectory$.html#logger:org.apache.log4j.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathsToDirectory$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathsToDirectory$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathsToDirectory$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathsToDirectory$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathsToDirectory$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathsToDirectory$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathsToDirectory$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathsToDirectory$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathsToDirectory$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathsToDirectory$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathsToDirectory$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathsToDirectory$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathsToDirectory$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathsToDirectory$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathsToDirectory$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathsToDirectory$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/examples\/ShortestPathsToDirectory$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "ml.sparkling.graph.operators.measures.graph" : [{"name" : "ml.sparkling.graph.operators.measures.graph.FreemanCentrality", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "object" : "ml\/sparkling\/graph\/operators\/measures\/graph\/FreemanCentrality$.html", "members_object" : [{"label" : "compute", "tail" : "(graph: Graph[K, E])(arg0: ClassTag[K], arg1: ClassTag[E]): Double", "member" : "ml.sparkling.graph.operators.measures.graph.FreemanCentrality.compute", "link" : "ml\/sparkling\/graph\/operators\/measures\/graph\/FreemanCentrality$.html#compute[K,E](graph:org.apache.spark.graphx.Graph[K,E])(implicitevidence$1:scala.reflect.ClassTag[K],implicitevidence$2:scala.reflect.ClassTag[E]):Double", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/measures\/graph\/FreemanCentrality$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/measures\/graph\/FreemanCentrality$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/measures\/graph\/FreemanCentrality$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/measures\/graph\/FreemanCentrality$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/measures\/graph\/FreemanCentrality$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/measures\/graph\/FreemanCentrality$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/measures\/graph\/FreemanCentrality$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/graph\/FreemanCentrality$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/graph\/FreemanCentrality$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/graph\/FreemanCentrality$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/measures\/graph\/FreemanCentrality$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/measures\/graph\/FreemanCentrality$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/measures\/graph\/FreemanCentrality$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/measures\/graph\/FreemanCentrality$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/measures\/graph\/FreemanCentrality$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/measures\/graph\/FreemanCentrality$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/measures\/graph\/FreemanCentrality$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/graph\/FreemanCentrality$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/graph\/FreemanCentrality$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ml.sparkling.graph.operators.measures.graph.Modularity", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "object" : "ml\/sparkling\/graph\/operators\/measures\/graph\/Modularity$.html", "members_object" : [{"label" : "compute", "tail" : "(graph: Graph[V, E])(arg0: ClassTag[V], arg1: ClassTag[E]): Double", "member" : "ml.sparkling.graph.operators.measures.graph.Modularity.compute", "link" : "ml\/sparkling\/graph\/operators\/measures\/graph\/Modularity$.html#compute[V<:ml.sparkling.graph.api.operators.algorithms.community.CommunityDetection.ComponentID,E](graph:org.apache.spark.graphx.Graph[V,E])(implicitevidence$1:scala.reflect.ClassTag[V],implicitevidence$2:scala.reflect.ClassTag[E]):Double", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/measures\/graph\/Modularity$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/measures\/graph\/Modularity$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/measures\/graph\/Modularity$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/measures\/graph\/Modularity$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/measures\/graph\/Modularity$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/measures\/graph\/Modularity$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/measures\/graph\/Modularity$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/graph\/Modularity$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/graph\/Modularity$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/graph\/Modularity$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/measures\/graph\/Modularity$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/measures\/graph\/Modularity$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/measures\/graph\/Modularity$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/measures\/graph\/Modularity$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/measures\/graph\/Modularity$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/measures\/graph\/Modularity$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/measures\/graph\/Modularity$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/graph\/Modularity$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/graph\/Modularity$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.generator" : [{"name" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.generator.FlowGenerator", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/generator\/FlowGenerator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/generator\/FlowGenerator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/generator\/FlowGenerator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/generator\/FlowGenerator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/generator\/FlowGenerator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/generator\/FlowGenerator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/generator\/FlowGenerator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/generator\/FlowGenerator.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/generator\/FlowGenerator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/generator\/FlowGenerator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/generator\/FlowGenerator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/generator\/FlowGenerator.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/generator\/FlowGenerator.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/generator\/FlowGenerator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/generator\/FlowGenerator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/generator\/FlowGenerator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/generator\/FlowGenerator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/generator\/FlowGenerator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/generator\/FlowGenerator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "phi", "tail" : ": Int", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.generator.FlowGenerator.phi", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/generator\/FlowGenerator.html#phi:Int", "kind" : "abstract val"}, {"label" : "createFlow", "tail" : "(arg: SR): RS", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.generator.FlowGenerator.createFlow", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/generator\/FlowGenerator.html#createFlow(arg:SR):RS", "kind" : "abstract def"}, {"label" : "flowsPerVertex", "tail" : "(): Int", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.generator.FlowGenerator.flowsPerVertex", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/generator\/FlowGenerator.html#flowsPerVertex:Int", "kind" : "abstract def"}], "shortDescription" : "Created by mth on 4\/28\/17.", "trait" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/generator\/FlowGenerator.html", "kind" : "trait"}], "ml.sparkling.graph.experiments" : [], "ml.sparkling.graph.operators.measures.vertex.betweenness.hua" : [{"name" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.HuaBC", "shortDescription" : "", "object" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/HuaBC$.html", "members_object" : [{"label" : "computeBC", "tail" : "(graph: Graph[VD, ED])(arg0: ClassTag[ED]): VertexRDD[Double]", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.HuaBC.computeBC", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/HuaBC$.html#computeBC[VD,ED](graph:org.apache.spark.graphx.Graph[VD,ED])(implicitevidence$2:scala.reflect.ClassTag[ED]):org.apache.spark.graphx.VertexRDD[Double]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/HuaBC$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/HuaBC$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/HuaBC$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/HuaBC$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/HuaBC$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/HuaBC$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/HuaBC$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/HuaBC$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/HuaBC$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/HuaBC$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/HuaBC$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/HuaBC$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/HuaBC$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/HuaBC$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/HuaBC$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/HuaBC$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/HuaBC$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/HuaBC$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/HuaBC$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.NearlyOptimalBC", "shortDescription" : "Created by mth on 5\/6\/17.", "members_class" : [{"label" : "computeBC", "tail" : "(): VertexRDD[Double]", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.NearlyOptimalBC.computeBC", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/NearlyOptimalBC.html#computeBC:org.apache.spark.graphx.VertexRDD[Double]", "kind" : "def"}, {"member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.NearlyOptimalBC#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/NearlyOptimalBC.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/NearlyOptimalBC.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/NearlyOptimalBC.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/NearlyOptimalBC.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/NearlyOptimalBC.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/NearlyOptimalBC.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/NearlyOptimalBC.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/NearlyOptimalBC.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/NearlyOptimalBC.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/NearlyOptimalBC.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/NearlyOptimalBC.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/NearlyOptimalBC.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/NearlyOptimalBC.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/NearlyOptimalBC.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/NearlyOptimalBC.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/NearlyOptimalBC.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/NearlyOptimalBC.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/NearlyOptimalBC.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/NearlyOptimalBC.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/NearlyOptimalBC.html", "kind" : "class"}], "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.predicate" : [{"name" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.predicate.NOInitBFSPredicate", "shortDescription" : "Created by mth on 5\/6\/17.", "members_class" : [{"label" : "extractSuccessors", "tail" : "(vertex: NOVertex, messages: List[NOMessage[VertexId]]): Option[Array[VertexId]]", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.predicate.NOInitBFSPredicate.extractSuccessors", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/predicate\/NOInitBFSPredicate.html#extractSuccessors(vertex:ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOVertex,messages:List[ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.NOMessage[org.apache.spark.graphx.VertexId]]):Option[Array[org.apache.spark.graphx.VertexId]]", "kind" : "def"}, {"label" : "extractParrent", "tail" : "(vertex: NOVertex, messages: List[NOMessage[VertexId]]): Option[VertexId]", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.predicate.NOInitBFSPredicate.extractParrent", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/predicate\/NOInitBFSPredicate.html#extractParrent(vertex:ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOVertex,messages:List[ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.NOMessage[org.apache.spark.graphx.VertexId]]):Option[org.apache.spark.graphx.VertexId]", "kind" : "def"}, {"label" : "updateVertex", "tail" : "(vertex: NOVertex, messages: List[NOMessage[VertexId]]): NOVertex", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.predicate.NOInitBFSPredicate.updateVertex", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/predicate\/NOInitBFSPredicate.html#updateVertex(vertex:ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOVertex,messages:List[ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.NOMessage[org.apache.spark.graphx.VertexId]]):ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOVertex", "kind" : "def"}, {"label" : "applyMessages", "tail" : "(vertexId: VertexId, vertex: NOVertex, message: List[NOMessage[VertexId]]): NOVertex", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.predicate.NOInitBFSPredicate.applyMessages", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/predicate\/NOInitBFSPredicate.html#applyMessages(vertexId:org.apache.spark.graphx.VertexId,vertex:ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOVertex,message:List[ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.NOMessage[org.apache.spark.graphx.VertexId]]):ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOVertex", "kind" : "def"}, {"label" : "getInitialData", "tail" : "(vertexId: VertexId, attr: NOVertex): (VertexId) ⇒ NOVertex", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.predicate.NOInitBFSPredicate.getInitialData", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/predicate\/NOInitBFSPredicate.html#getInitialData(vertexId:org.apache.spark.graphx.VertexId,attr:ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOVertex):org.apache.spark.graphx.VertexId=>ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOVertex", "kind" : "def"}, {"member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.predicate.NOInitBFSPredicate#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/predicate\/NOInitBFSPredicate.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/predicate\/NOInitBFSPredicate.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/predicate\/NOInitBFSPredicate.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/predicate\/NOInitBFSPredicate.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/predicate\/NOInitBFSPredicate.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/predicate\/NOInitBFSPredicate.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/predicate\/NOInitBFSPredicate.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/predicate\/NOInitBFSPredicate.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/predicate\/NOInitBFSPredicate.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/predicate\/NOInitBFSPredicate.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/predicate\/NOInitBFSPredicate.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/predicate\/NOInitBFSPredicate.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/predicate\/NOInitBFSPredicate.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/predicate\/NOInitBFSPredicate.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/predicate\/NOInitBFSPredicate.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/predicate\/NOInitBFSPredicate.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/predicate\/NOInitBFSPredicate.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/predicate\/NOInitBFSPredicate.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/predicate\/NOInitBFSPredicate.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/predicate\/NOInitBFSPredicate.html", "kind" : "class"}], "ml.sparkling.graph.operators.algorithms.community" : [], "ml.sparkling.graph.api" : [], "ml.sparkling.graph.experiments.describe" : [{"name" : "ml.sparkling.graph.experiments.describe.FullGraphDescriptor", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "object" : "ml\/sparkling\/graph\/experiments\/describe\/FullGraphDescriptor$.html", "members_object" : [{"label" : "describeGraphToDirectory", "tail" : "(graph: Graph[VD, ED], directory: String, vertexMeasureConfiguration: VertexMeasureConfiguration[VD, ED], measureFilter: MeasureFilter)(arg0: ClassTag[VD], arg1: ClassTag[ED], num: Numeric[ED]): List[(String, Long)]", "member" : "ml.sparkling.graph.experiments.describe.FullGraphDescriptor.describeGraphToDirectory", "link" : "ml\/sparkling\/graph\/experiments\/describe\/FullGraphDescriptor$.html#describeGraphToDirectory[VD,ED](graph:org.apache.spark.graphx.Graph[VD,ED],directory:String,vertexMeasureConfiguration:ml.sparkling.graph.api.operators.measures.VertexMeasureConfiguration[VD,ED],measureFilter:ml.sparkling.graph.experiments.describe.FullGraphDescriptor.MeasureFilter)(implicitevidence$7:scala.reflect.ClassTag[VD],implicitevidence$8:scala.reflect.ClassTag[ED],implicitnum:Numeric[ED]):List[(String,Long)]", "kind" : "def"}, {"label" : "executeOperatorToPath", "tail" : "(graph: Graph[VD, ED], vertexMeasureConfiguration: VertexMeasureConfiguration[VD, ED], cachedGraph: Graph[VD, ED], measure: AnyRef, name: String, outDirectory: String)(arg0: ClassTag[ED], arg1: ClassTag[VD], num: Numeric[ED]): Option[Graph[_ >: Component with ComponentID, ED]]", "member" : "ml.sparkling.graph.experiments.describe.FullGraphDescriptor.executeOperatorToPath", "link" : "ml\/sparkling\/graph\/experiments\/describe\/FullGraphDescriptor$.html#executeOperatorToPath[ED,VD](graph:org.apache.spark.graphx.Graph[VD,ED],vertexMeasureConfiguration:ml.sparkling.graph.api.operators.measures.VertexMeasureConfiguration[VD,ED],cachedGraph:org.apache.spark.graphx.Graph[VD,ED],measure:Object,name:String,outDirectory:String)(implicitevidence$5:scala.reflect.ClassTag[ED],implicitevidence$6:scala.reflect.ClassTag[VD],implicitnum:Numeric[ED]):Option[org.apache.spark.graphx.Graph[_>:ml.sparkling.graph.api.operators.algorithms.coarsening.CoarseningAlgorithm.Componentwithml.sparkling.graph.api.operators.algorithms.community.CommunityDetection.ComponentID,ED]]", "kind" : "def"}, {"label" : "executeOperator", "tail" : "(graph: Graph[VD, ED], vertexMeasureConfiguration: VertexMeasureConfiguration[VD, ED], cachedGraph: Graph[VD, ED], measure: AnyRef, name: String)(arg0: ClassTag[ED], arg1: ClassTag[VD], num: Numeric[ED]): Graph[_ >: DataMap with Iterable[(VertexId, JDouble)] with Component with ComponentID, ED]", "member" : "ml.sparkling.graph.experiments.describe.FullGraphDescriptor.executeOperator", "link" : "ml\/sparkling\/graph\/experiments\/describe\/FullGraphDescriptor$.html#executeOperator[ED,VD](graph:org.apache.spark.graphx.Graph[VD,ED],vertexMeasureConfiguration:ml.sparkling.graph.api.operators.measures.VertexMeasureConfiguration[VD,ED],cachedGraph:org.apache.spark.graphx.Graph[VD,ED],measure:Object,name:String)(implicitevidence$3:scala.reflect.ClassTag[ED],implicitevidence$4:scala.reflect.ClassTag[VD],implicitnum:Numeric[ED]):org.apache.spark.graphx.Graph[_>:ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.fastutils.FastUtilWithDistance.DataMapwithIterable[(org.apache.spark.graphx.VertexId,ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.JDouble)]withml.sparkling.graph.api.operators.algorithms.coarsening.CoarseningAlgorithm.Componentwithml.sparkling.graph.api.operators.algorithms.community.CommunityDetection.ComponentID,ED]", "kind" : "def"}, {"label" : "describeGraph", "tail" : "(graph: Graph[VD, ED], vertexMeasureConfiguration: VertexMeasureConfiguration[VD, ED], measureFilter: MeasureFilter)(arg0: ClassTag[VD], arg1: ClassTag[ED], num: Numeric[ED]): Graph[List[Any], ED]", "member" : "ml.sparkling.graph.experiments.describe.FullGraphDescriptor.describeGraph", "link" : "ml\/sparkling\/graph\/experiments\/describe\/FullGraphDescriptor$.html#describeGraph[VD,ED](graph:org.apache.spark.graphx.Graph[VD,ED],vertexMeasureConfiguration:ml.sparkling.graph.api.operators.measures.VertexMeasureConfiguration[VD,ED],measureFilter:ml.sparkling.graph.experiments.describe.FullGraphDescriptor.MeasureFilter)(implicitevidence$1:scala.reflect.ClassTag[VD],implicitevidence$2:scala.reflect.ClassTag[ED],implicitnum:Numeric[ED]):org.apache.spark.graphx.Graph[List[Any],ED]", "kind" : "def"}, {"label" : "time", "tail" : "(str: String)(thunk: ⇒ T): (T, Long)", "member" : "ml.sparkling.graph.experiments.describe.FullGraphDescriptor.time", "link" : "ml\/sparkling\/graph\/experiments\/describe\/FullGraphDescriptor$.html#time[T](str:String)(thunk:=>T):(T,Long)", "kind" : "def"}, {"label" : "anyMeasureFilter", "tail" : ": MeasureFilter", "member" : "ml.sparkling.graph.experiments.describe.FullGraphDescriptor.anyMeasureFilter", "link" : "ml\/sparkling\/graph\/experiments\/describe\/FullGraphDescriptor$.html#anyMeasureFilter:ml.sparkling.graph.experiments.describe.FullGraphDescriptor.MeasureFilter", "kind" : "val"}, {"label" : "MeasureFilter", "tail" : "", "member" : "ml.sparkling.graph.experiments.describe.FullGraphDescriptor.MeasureFilter", "link" : "ml\/sparkling\/graph\/experiments\/describe\/FullGraphDescriptor$.html#MeasureFilter=((String,Object))=>Boolean", "kind" : "type"}, {"label" : "logger", "tail" : ": Logger", "member" : "ml.sparkling.graph.experiments.describe.FullGraphDescriptor.logger", "link" : "ml\/sparkling\/graph\/experiments\/describe\/FullGraphDescriptor$.html#logger:org.apache.log4j.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/experiments\/describe\/FullGraphDescriptor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/experiments\/describe\/FullGraphDescriptor$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/experiments\/describe\/FullGraphDescriptor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/experiments\/describe\/FullGraphDescriptor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/experiments\/describe\/FullGraphDescriptor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/experiments\/describe\/FullGraphDescriptor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/experiments\/describe\/FullGraphDescriptor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/experiments\/describe\/FullGraphDescriptor$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/experiments\/describe\/FullGraphDescriptor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/experiments\/describe\/FullGraphDescriptor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/experiments\/describe\/FullGraphDescriptor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/experiments\/describe\/FullGraphDescriptor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/experiments\/describe\/FullGraphDescriptor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/experiments\/describe\/FullGraphDescriptor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/experiments\/describe\/FullGraphDescriptor$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/experiments\/describe\/FullGraphDescriptor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/experiments\/describe\/FullGraphDescriptor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/experiments\/describe\/FullGraphDescriptor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/experiments\/describe\/FullGraphDescriptor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ml.sparkling.graph.experiments.describe.GraphDescriptor", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "object" : "ml\/sparkling\/graph\/experiments\/describe\/GraphDescriptor$.html", "members_object" : [{"label" : "DescribeGraph", "tail" : "", "member" : "ml.sparkling.graph.experiments.describe.GraphDescriptor.DescribeGraph", "link" : "ml\/sparkling\/graph\/experiments\/describe\/GraphDescriptor$.html#DescribeGraph[VD,ED]extendsAnyRef", "kind" : "implicit class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/experiments\/describe\/GraphDescriptor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/experiments\/describe\/GraphDescriptor$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/experiments\/describe\/GraphDescriptor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/experiments\/describe\/GraphDescriptor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/experiments\/describe\/GraphDescriptor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/experiments\/describe\/GraphDescriptor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/experiments\/describe\/GraphDescriptor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/experiments\/describe\/GraphDescriptor$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/experiments\/describe\/GraphDescriptor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/experiments\/describe\/GraphDescriptor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/experiments\/describe\/GraphDescriptor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/experiments\/describe\/GraphDescriptor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/experiments\/describe\/GraphDescriptor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/experiments\/describe\/GraphDescriptor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/experiments\/describe\/GraphDescriptor$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/experiments\/describe\/GraphDescriptor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/experiments\/describe\/GraphDescriptor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/experiments\/describe\/GraphDescriptor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/experiments\/describe\/GraphDescriptor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "ml.sparkling.graph.operators.algorithms.bfs.processor" : [{"name" : "ml.sparkling.graph.operators.algorithms.bfs.processor.BFSProcessor", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/processor\/BFSProcessor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/processor\/BFSProcessor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/processor\/BFSProcessor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/processor\/BFSProcessor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/processor\/BFSProcessor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/processor\/BFSProcessor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/processor\/BFSProcessor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/processor\/BFSProcessor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/processor\/BFSProcessor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/processor\/BFSProcessor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/processor\/BFSProcessor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/processor\/BFSProcessor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/processor\/BFSProcessor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/processor\/BFSProcessor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/processor\/BFSProcessor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/processor\/BFSProcessor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/processor\/BFSProcessor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/processor\/BFSProcessor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/processor\/BFSProcessor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "mergeMessages", "tail" : "(msg1: MD, msg2: MD): MD", "member" : "ml.sparkling.graph.operators.algorithms.bfs.processor.BFSProcessor.mergeMessages", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/processor\/BFSProcessor.html#mergeMessages(msg1:MD,msg2:MD):MD", "kind" : "abstract def"}, {"label" : "sendMessage", "tail" : "(triplet: EdgeTriplet[VD, ED]): Iterator[(VertexId, MD)]", "member" : "ml.sparkling.graph.operators.algorithms.bfs.processor.BFSProcessor.sendMessage", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/processor\/BFSProcessor.html#sendMessage(triplet:org.apache.spark.graphx.EdgeTriplet[VD,ED]):Iterator[(org.apache.spark.graphx.VertexId,MD)]", "kind" : "abstract def"}, {"label" : "initialMessage", "tail" : "(): MD", "member" : "ml.sparkling.graph.operators.algorithms.bfs.processor.BFSProcessor.initialMessage", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/processor\/BFSProcessor.html#initialMessage:MD", "kind" : "abstract def"}], "shortDescription" : "Created by mth on 6\/26\/17.", "trait" : "ml\/sparkling\/graph\/operators\/algorithms\/bfs\/processor\/BFSProcessor.html", "kind" : "trait"}], "ml.sparkling.graph.api.operators.algorithms.community" : [{"name" : "ml.sparkling.graph.api.operators.algorithms.community.CommunityDetection", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "object" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/community\/CommunityDetection$.html", "members_object" : [{"label" : "CommunityDetectionMethod", "tail" : "", "member" : "ml.sparkling.graph.api.operators.algorithms.community.CommunityDetection.CommunityDetectionMethod", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/community\/CommunityDetection$.html#CommunityDetectionMethod[VD,ED]=org.apache.spark.graphx.Graph[VD,ED]=>org.apache.spark.graphx.Graph[ml.sparkling.graph.api.operators.algorithms.community.CommunityDetection.ComponentID,ED]", "kind" : "type"}, {"label" : "CommunityDetectionAlgorithm", "tail" : "", "member" : "ml.sparkling.graph.api.operators.algorithms.community.CommunityDetection.CommunityDetectionAlgorithm", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/community\/CommunityDetection$.html#CommunityDetectionAlgorithmextendsAnyRef", "kind" : "trait"}, {"label" : "ComponentID", "tail" : "", "member" : "ml.sparkling.graph.api.operators.algorithms.community.CommunityDetection.ComponentID", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/community\/CommunityDetection$.html#ComponentID=Long", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/community\/CommunityDetection$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/community\/CommunityDetection$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/community\/CommunityDetection$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/community\/CommunityDetection$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/community\/CommunityDetection$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/community\/CommunityDetection$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/community\/CommunityDetection$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/community\/CommunityDetection$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/community\/CommunityDetection$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/community\/CommunityDetection$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/community\/CommunityDetection$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/community\/CommunityDetection$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/community\/CommunityDetection$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/community\/CommunityDetection$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/community\/CommunityDetection$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/community\/CommunityDetection$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/community\/CommunityDetection$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/community\/CommunityDetection$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/community\/CommunityDetection$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "ml.sparkling.graph.api.operators.algorithms.coarsening" : [{"name" : "ml.sparkling.graph.api.operators.algorithms.coarsening.CoarseningAlgorithm", "shortDescription" : "Created by  Roman Bartusiak <riomus@gmail.com> on 06.02.17.", "object" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/coarsening\/CoarseningAlgorithm$.html", "members_object" : [{"label" : "CoarseningMethod", "tail" : "", "member" : "ml.sparkling.graph.api.operators.algorithms.coarsening.CoarseningAlgorithm.CoarseningMethod", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/coarsening\/CoarseningAlgorithm$.html#CoarseningMethod[VD,ED]=org.apache.spark.graphx.Graph[VD,ED]=>org.apache.spark.graphx.Graph[ml.sparkling.graph.api.operators.algorithms.coarsening.CoarseningAlgorithm.Component,ED]", "kind" : "type"}, {"label" : "CoarseningAlgorithm", "tail" : "", "member" : "ml.sparkling.graph.api.operators.algorithms.coarsening.CoarseningAlgorithm.CoarseningAlgorithm", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/coarsening\/CoarseningAlgorithm$.html#CoarseningAlgorithmextendsAnyRef", "kind" : "trait"}, {"label" : "DefaultEdgeValueSelector", "tail" : "", "member" : "ml.sparkling.graph.api.operators.algorithms.coarsening.CoarseningAlgorithm.DefaultEdgeValueSelector", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/coarsening\/CoarseningAlgorithm$.html#DefaultEdgeValueSelector", "kind" : "object"}, {"label" : "EdgeValueSelector", "tail" : "", "member" : "ml.sparkling.graph.api.operators.algorithms.coarsening.CoarseningAlgorithm.EdgeValueSelector", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/coarsening\/CoarseningAlgorithm$.html#EdgeValueSelectorextendsSerializable", "kind" : "trait"}, {"label" : "Component", "tail" : "", "member" : "ml.sparkling.graph.api.operators.algorithms.coarsening.CoarseningAlgorithm.Component", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/coarsening\/CoarseningAlgorithm$.html#Component=List[org.apache.spark.graphx.VertexId]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/coarsening\/CoarseningAlgorithm$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/coarsening\/CoarseningAlgorithm$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/coarsening\/CoarseningAlgorithm$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/coarsening\/CoarseningAlgorithm$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/coarsening\/CoarseningAlgorithm$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/coarsening\/CoarseningAlgorithm$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/coarsening\/CoarseningAlgorithm$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/coarsening\/CoarseningAlgorithm$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/coarsening\/CoarseningAlgorithm$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/coarsening\/CoarseningAlgorithm$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/coarsening\/CoarseningAlgorithm$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/coarsening\/CoarseningAlgorithm$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/coarsening\/CoarseningAlgorithm$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/coarsening\/CoarseningAlgorithm$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/coarsening\/CoarseningAlgorithm$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/coarsening\/CoarseningAlgorithm$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/coarsening\/CoarseningAlgorithm$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/coarsening\/CoarseningAlgorithm$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/api\/operators\/algorithms\/coarsening\/CoarseningAlgorithm$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "ml.sparkling.graph.loaders.graphml" : [{"name" : "ml.sparkling.graph.loaders.graphml.GraphFromGraphML", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "object" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphFromGraphML$.html", "members_object" : [{"label" : "GraphMLGraphLoader", "tail" : "", "member" : "ml.sparkling.graph.loaders.graphml.GraphFromGraphML.GraphMLGraphLoader", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphFromGraphML$.html#GraphMLGraphLoaderextendsGraphLoading.GraphLoader[ml.sparkling.graph.loaders.graphml.GraphFromGraphML.GraphProperties,ml.sparkling.graph.loaders.graphml.GraphFromGraphML.GraphProperties]withProductwithSerializable", "kind" : "case class"}, {"label" : "GraphML", "tail" : "", "member" : "ml.sparkling.graph.loaders.graphml.GraphFromGraphML.GraphML", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphFromGraphML$.html#GraphML", "kind" : "object"}, {"label" : "GraphProperties", "tail" : "", "member" : "ml.sparkling.graph.loaders.graphml.GraphFromGraphML.GraphProperties", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphFromGraphML$.html#GraphProperties=ml.sparkling.graph.loaders.graphml.GraphMLLoader.ValuesMap", "kind" : "type"}, {"label" : "log", "tail" : ": Logger", "member" : "ml.sparkling.graph.loaders.graphml.GraphFromGraphML.log", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphFromGraphML$.html#log:org.apache.log4j.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphFromGraphML$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphFromGraphML$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphFromGraphML$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphFromGraphML$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphFromGraphML$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphFromGraphML$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphFromGraphML$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphFromGraphML$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphFromGraphML$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphFromGraphML$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphFromGraphML$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphFromGraphML$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphFromGraphML$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphFromGraphML$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphFromGraphML$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphFromGraphML$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphFromGraphML$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphFromGraphML$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphFromGraphML$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ml.sparkling.graph.loaders.graphml.GraphMLFormat", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "object" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLFormat$.html", "members_object" : [{"label" : "targetAttribute", "tail" : ": String", "member" : "ml.sparkling.graph.loaders.graphml.GraphMLFormat.targetAttribute", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLFormat$.html#targetAttribute:String", "kind" : "val"}, {"label" : "sourceAttribute", "tail" : ": String", "member" : "ml.sparkling.graph.loaders.graphml.GraphMLFormat.sourceAttribute", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLFormat$.html#sourceAttribute:String", "kind" : "val"}, {"label" : "tagValue", "tail" : ": String", "member" : "ml.sparkling.graph.loaders.graphml.GraphMLFormat.tagValue", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLFormat$.html#tagValue:String", "kind" : "val"}, {"label" : "edgeTag", "tail" : ": String", "member" : "ml.sparkling.graph.loaders.graphml.GraphMLFormat.edgeTag", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLFormat$.html#edgeTag:String", "kind" : "val"}, {"label" : "keyAttribute", "tail" : ": String", "member" : "ml.sparkling.graph.loaders.graphml.GraphMLFormat.keyAttribute", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLFormat$.html#keyAttribute:String", "kind" : "val"}, {"label" : "dataTag", "tail" : ": String", "member" : "ml.sparkling.graph.loaders.graphml.GraphMLFormat.dataTag", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLFormat$.html#dataTag:String", "kind" : "val"}, {"label" : "nodeTag", "tail" : ": String", "member" : "ml.sparkling.graph.loaders.graphml.GraphMLFormat.nodeTag", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLFormat$.html#nodeTag:String", "kind" : "val"}, {"label" : "graphMLTag", "tail" : ": String", "member" : "ml.sparkling.graph.loaders.graphml.GraphMLFormat.graphMLTag", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLFormat$.html#graphMLTag:String", "kind" : "val"}, {"label" : "graphTag", "tail" : ": String", "member" : "ml.sparkling.graph.loaders.graphml.GraphMLFormat.graphTag", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLFormat$.html#graphTag:String", "kind" : "val"}, {"label" : "keyTag", "tail" : ": String", "member" : "ml.sparkling.graph.loaders.graphml.GraphMLFormat.keyTag", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLFormat$.html#keyTag:String", "kind" : "val"}, {"label" : "typeAttribute", "tail" : ": String", "member" : "ml.sparkling.graph.loaders.graphml.GraphMLFormat.typeAttribute", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLFormat$.html#typeAttribute:String", "kind" : "val"}, {"label" : "nameAttribute", "tail" : ": String", "member" : "ml.sparkling.graph.loaders.graphml.GraphMLFormat.nameAttribute", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLFormat$.html#nameAttribute:String", "kind" : "val"}, {"label" : "idAttribute", "tail" : ": String", "member" : "ml.sparkling.graph.loaders.graphml.GraphMLFormat.idAttribute", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLFormat$.html#idAttribute:String", "kind" : "val"}, {"label" : "forAttribute", "tail" : ": String", "member" : "ml.sparkling.graph.loaders.graphml.GraphMLFormat.forAttribute", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLFormat$.html#forAttribute:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLFormat$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLFormat$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLFormat$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLFormat$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLFormat$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLFormat$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLFormat$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLFormat$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLFormat$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLFormat$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLFormat$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLFormat$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLFormat$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLFormat$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLFormat$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLFormat$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLFormat$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLFormat$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLFormat$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ml.sparkling.graph.loaders.graphml.GraphMLLoader", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "object" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLLoader$.html", "members_object" : [{"label" : "createAttrHandlersFor", "tail" : "(keys: RDD[Row]): Map[String, GraphMLAttribute]", "member" : "ml.sparkling.graph.loaders.graphml.GraphMLLoader.createAttrHandlersFor", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLLoader$.html#createAttrHandlersFor(keys:org.apache.spark.rdd.RDD[org.apache.spark.sql.Row]):Map[String,ml.sparkling.graph.loaders.graphml.GraphMLLoader.GraphMLAttribute]", "kind" : "def"}, {"label" : "extractAttributesMap", "tail" : "(attrHandlers: Map[String, GraphMLAttribute], r: Row): Map[String, Any]", "member" : "ml.sparkling.graph.loaders.graphml.GraphMLLoader.extractAttributesMap", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLLoader$.html#extractAttributesMap(attrHandlers:Map[String,ml.sparkling.graph.loaders.graphml.GraphMLLoader.GraphMLAttribute],r:org.apache.spark.sql.Row):Map[String,Any]", "kind" : "def"}, {"label" : "loadGraphFromML", "tail" : "(path: String)(sc: SparkContext): Graph[ValuesMap, ValuesMap]", "member" : "ml.sparkling.graph.loaders.graphml.GraphMLLoader.loadGraphFromML", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLLoader$.html#loadGraphFromML(path:String)(implicitsc:org.apache.spark.SparkContext):org.apache.spark.graphx.Graph[ml.sparkling.graph.loaders.graphml.GraphMLLoader.ValuesMap,ml.sparkling.graph.loaders.graphml.GraphMLLoader.ValuesMap]", "kind" : "def"}, {"label" : "GraphMLAttribute", "tail" : "", "member" : "ml.sparkling.graph.loaders.graphml.GraphMLLoader.GraphMLAttribute", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLLoader$.html#GraphMLAttributeextendsProductwithSerializable", "kind" : "case class"}, {"label" : "ValuesMap", "tail" : "", "member" : "ml.sparkling.graph.loaders.graphml.GraphMLLoader.ValuesMap", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLLoader$.html#ValuesMap=Map[String,Any]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLLoader$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLLoader$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLLoader$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLLoader$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLLoader$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLLoader$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLLoader$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLLoader$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLLoader$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLLoader$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLLoader$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLLoader$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLLoader$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLLoader$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLLoader$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLLoader$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLLoader$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLLoader$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLLoader$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ml.sparkling.graph.loaders.graphml.GraphMLTypes", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "object" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLTypes$.html", "members_object" : [{"label" : "DoubleHandler", "tail" : "", "member" : "ml.sparkling.graph.loaders.graphml.GraphMLTypes.DoubleHandler", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLTypes$.html#DoubleHandler", "kind" : "object"}, {"label" : "FloatHandler", "tail" : "", "member" : "ml.sparkling.graph.loaders.graphml.GraphMLTypes.FloatHandler", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLTypes$.html#FloatHandler", "kind" : "object"}, {"label" : "LongHandler", "tail" : "", "member" : "ml.sparkling.graph.loaders.graphml.GraphMLTypes.LongHandler", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLTypes$.html#LongHandler", "kind" : "object"}, {"label" : "IntHandler", "tail" : "", "member" : "ml.sparkling.graph.loaders.graphml.GraphMLTypes.IntHandler", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLTypes$.html#IntHandler", "kind" : "object"}, {"label" : "BooleanHandler", "tail" : "", "member" : "ml.sparkling.graph.loaders.graphml.GraphMLTypes.BooleanHandler", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLTypes$.html#BooleanHandler", "kind" : "object"}, {"label" : "StringHanlder", "tail" : "", "member" : "ml.sparkling.graph.loaders.graphml.GraphMLTypes.StringHanlder", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLTypes$.html#StringHanlder", "kind" : "object"}, {"label" : "apply", "tail" : "(typeName: String): TypeHandler", "member" : "ml.sparkling.graph.loaders.graphml.GraphMLTypes.apply", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLTypes$.html#apply(typeName:String):ml.sparkling.graph.loaders.graphml.GraphMLTypes.TypeHandler", "kind" : "def"}, {"label" : "TypeHandler", "tail" : "", "member" : "ml.sparkling.graph.loaders.graphml.GraphMLTypes.TypeHandler", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLTypes$.html#TypeHandlerextendsSerializable", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLTypes$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLTypes$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLTypes$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLTypes$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLTypes$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLTypes$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLTypes$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLTypes$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLTypes$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLTypes$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLTypes$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLTypes$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLTypes$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLTypes$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLTypes$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLTypes$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLTypes$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLTypes$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/loaders\/graphml\/GraphMLTypes$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "ml.sparkling.graph.operators.measures.vertex.betweenness.flow" : [{"name" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.CurrentFlowBC", "shortDescription" : "Created by mth on 4\/23\/17.", "members_class" : [{"label" : "getNumOfActiveVertices", "tail" : "(g: Graph[CFBCVertex, _]): Long", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.CurrentFlowBC.getNumOfActiveVertices", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/CurrentFlowBC.html#getNumOfActiveVertices(g:org.apache.spark.graphx.Graph[ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCVertex,_]):Long", "kind" : "def"}, {"label" : "getNumberOfFetureFlows", "tail" : "(g: Graph[CFBCVertex, _]): Int", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.CurrentFlowBC.getNumberOfFetureFlows", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/CurrentFlowBC.html#getNumberOfFetureFlows(g:org.apache.spark.graphx.Graph[ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCVertex,_]):Int", "kind" : "def"}, {"label" : "getNumberOfFlows", "tail" : "(g: Graph[CFBCVertex, _]): Int", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.CurrentFlowBC.getNumberOfFlows", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/CurrentFlowBC.html#getNumberOfFlows(g:org.apache.spark.graphx.Graph[ml.sparkling.graph.operators.measures.vertex.betweenness.flow.struct.CFBCVertex,_]):Int", "kind" : "def"}, {"label" : "computeBC", "tail" : "(epsilon: Double): VertexRDD[Double]", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.CurrentFlowBC.computeBC", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/CurrentFlowBC.html#computeBC(epsilon:Double):org.apache.spark.graphx.VertexRDD[Double]", "kind" : "def"}, {"label" : "k", "tail" : ": Int", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.CurrentFlowBC.k", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/CurrentFlowBC.html#k:Int", "kind" : "val"}, {"label" : "cfbcProcessor", "tail" : ": CFBCProcessor[VD, ED]", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.CurrentFlowBC.cfbcProcessor", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/CurrentFlowBC.html#cfbcProcessor:ml.sparkling.graph.operators.measures.vertex.betweenness.flow.processor.CFBCProcessor[VD,ED]", "kind" : "lazy val"}, {"member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.flow.CurrentFlowBC#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/CurrentFlowBC.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/CurrentFlowBC.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/CurrentFlowBC.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/CurrentFlowBC.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/CurrentFlowBC.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/CurrentFlowBC.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/CurrentFlowBC.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/CurrentFlowBC.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/CurrentFlowBC.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/CurrentFlowBC.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/CurrentFlowBC.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/CurrentFlowBC.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/CurrentFlowBC.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/CurrentFlowBC.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/CurrentFlowBC.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/CurrentFlowBC.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/CurrentFlowBC.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/CurrentFlowBC.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/CurrentFlowBC.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/flow\/CurrentFlowBC.html", "kind" : "class"}], "ml.sparkling.graph.operators.measures.vertex.eigenvector" : [{"name" : "ml.sparkling.graph.operators.measures.vertex.eigenvector.EigenvectorCentrality", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "object" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/eigenvector\/EigenvectorCentrality$.html", "members_object" : [{"label" : "compute", "tail" : "(graph: Graph[VD, ED], vertexMeasureConfiguration: VertexMeasureConfiguration[VD, ED])(arg0: ClassTag[VD], arg1: ClassTag[ED], num: Numeric[ED]): Graph[Double, ED]", "member" : "ml.sparkling.graph.operators.measures.vertex.eigenvector.EigenvectorCentrality.compute", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/eigenvector\/EigenvectorCentrality$.html#compute[VD,ED](graph:org.apache.spark.graphx.Graph[VD,ED],vertexMeasureConfiguration:ml.sparkling.graph.api.operators.measures.VertexMeasureConfiguration[VD,ED])(implicitevidence$3:scala.reflect.ClassTag[VD],implicitevidence$4:scala.reflect.ClassTag[ED],implicitnum:Numeric[ED]):org.apache.spark.graphx.Graph[Double,ED]", "kind" : "def"}, {"label" : "computeEigenvector", "tail" : "(graph: Graph[VD, ED], vertexMeasureConfiguration: VertexMeasureConfiguration[VD, ED], continuePredicate: ContinuePredicate)(arg0: ClassTag[VD], arg1: ClassTag[ED], num: Numeric[ED]): Graph[Double, ED]", "member" : "ml.sparkling.graph.operators.measures.vertex.eigenvector.EigenvectorCentrality.computeEigenvector", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/eigenvector\/EigenvectorCentrality$.html#computeEigenvector[VD,ED](graph:org.apache.spark.graphx.Graph[VD,ED],vertexMeasureConfiguration:ml.sparkling.graph.api.operators.measures.VertexMeasureConfiguration[VD,ED],continuePredicate:ml.sparkling.graph.operators.measures.vertex.eigenvector.EigenvectorUtils.ContinuePredicate)(implicitevidence$1:scala.reflect.ClassTag[VD],implicitevidence$2:scala.reflect.ClassTag[ED],implicitnum:Numeric[ED]):org.apache.spark.graphx.Graph[Double,ED]", "kind" : "def"}, {"label" : "compute", "tail" : "(graph: Graph[VD, ED])(arg0: ClassTag[VD], arg1: ClassTag[ED], num: Numeric[ED]): Graph[Double, ED]", "member" : "ml.sparkling.graph.api.operators.measures.VertexMeasure.compute", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/eigenvector\/EigenvectorCentrality$.html#compute[VD,ED](graph:org.apache.spark.graphx.Graph[VD,ED])(implicitevidence$1:scala.reflect.ClassTag[VD],implicitevidence$2:scala.reflect.ClassTag[ED],implicitnum:Numeric[ED]):org.apache.spark.graphx.Graph[OV,ED]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/eigenvector\/EigenvectorCentrality$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/eigenvector\/EigenvectorCentrality$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/eigenvector\/EigenvectorCentrality$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/eigenvector\/EigenvectorCentrality$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/eigenvector\/EigenvectorCentrality$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/eigenvector\/EigenvectorCentrality$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/eigenvector\/EigenvectorCentrality$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/eigenvector\/EigenvectorCentrality$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/eigenvector\/EigenvectorCentrality$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/eigenvector\/EigenvectorCentrality$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/eigenvector\/EigenvectorCentrality$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/eigenvector\/EigenvectorCentrality$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/eigenvector\/EigenvectorCentrality$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/eigenvector\/EigenvectorCentrality$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/eigenvector\/EigenvectorCentrality$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/eigenvector\/EigenvectorCentrality$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/eigenvector\/EigenvectorCentrality$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/eigenvector\/EigenvectorCentrality$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/eigenvector\/EigenvectorCentrality$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ml.sparkling.graph.operators.measures.vertex.eigenvector.EigenvectorUtils", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "object" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/eigenvector\/EigenvectorUtils$.html", "members_object" : [{"label" : "convergenceAndIterationPredicate", "tail" : "(delta: Double, maxIter: Long)(iteration: Long, oldValue: Double, newValue: Double): Boolean", "member" : "ml.sparkling.graph.operators.measures.vertex.eigenvector.EigenvectorUtils.convergenceAndIterationPredicate", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/eigenvector\/EigenvectorUtils$.html#convergenceAndIterationPredicate(delta:Double,maxIter:Long)(iteration:Long,oldValue:Double,newValue:Double):Boolean", "kind" : "def"}, {"label" : "ContinuePredicate", "tail" : "", "member" : "ml.sparkling.graph.operators.measures.vertex.eigenvector.EigenvectorUtils.ContinuePredicate", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/eigenvector\/EigenvectorUtils$.html#ContinuePredicate=(Long,Double,Double)=>Boolean", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/eigenvector\/EigenvectorUtils$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/eigenvector\/EigenvectorUtils$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/eigenvector\/EigenvectorUtils$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/eigenvector\/EigenvectorUtils$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/eigenvector\/EigenvectorUtils$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/eigenvector\/EigenvectorUtils$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/eigenvector\/EigenvectorUtils$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/eigenvector\/EigenvectorUtils$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/eigenvector\/EigenvectorUtils$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/eigenvector\/EigenvectorUtils$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/eigenvector\/EigenvectorUtils$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/eigenvector\/EigenvectorUtils$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/eigenvector\/EigenvectorUtils$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/eigenvector\/EigenvectorUtils$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/eigenvector\/EigenvectorUtils$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/eigenvector\/EigenvectorUtils$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/eigenvector\/EigenvectorUtils$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/eigenvector\/EigenvectorUtils$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/eigenvector\/EigenvectorUtils$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "ml.sparkling.graph.operators.algorithms.shortestpaths" : [{"name" : "ml.sparkling.graph.operators.algorithms.shortestpaths.ShortestPathsAlgorithm", "shortDescription" : "Main object of shortest paths algorithmCreated by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "object" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/ShortestPathsAlgorithm$.html", "members_object" : [{"label" : "computeAPSPToDirectory", "tail" : "(graph: Graph[VD, ED], outDirectory: String, treatAsUndirected: Boolean, bucketSize: Long)(arg0: ClassTag[VD], arg1: ClassTag[ED], num: Numeric[ED]): Unit", "member" : "ml.sparkling.graph.operators.algorithms.shortestpaths.ShortestPathsAlgorithm.computeAPSPToDirectory", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/ShortestPathsAlgorithm$.html#computeAPSPToDirectory[VD,ED](graph:org.apache.spark.graphx.Graph[VD,ED],outDirectory:String,treatAsUndirected:Boolean,bucketSize:Long)(implicitevidence$8:scala.reflect.ClassTag[VD],implicitevidence$9:scala.reflect.ClassTag[ED],implicitnum:Numeric[ED]):Unit", "kind" : "def"}, {"label" : "computeShortestPathsLengthsIterative", "tail" : "(graph: Graph[VD, ED], bucketSizeProvider: BucketSizeProvider[VD, ED], treatAsUndirected: Boolean, checkpointingFrequency: Int)(arg0: ClassTag[VD], arg1: ClassTag[ED], num: Numeric[ED]): Graph[DataMap, ED]", "member" : "ml.sparkling.graph.operators.algorithms.shortestpaths.ShortestPathsAlgorithm.computeShortestPathsLengthsIterative", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/ShortestPathsAlgorithm$.html#computeShortestPathsLengthsIterative[VD,ED](graph:org.apache.spark.graphx.Graph[VD,ED],bucketSizeProvider:ml.sparkling.graph.api.operators.IterativeComputation.BucketSizeProvider[VD,ED],treatAsUndirected:Boolean,checkpointingFrequency:Int)(implicitevidence$6:scala.reflect.ClassTag[VD],implicitevidence$7:scala.reflect.ClassTag[ED],implicitnum:Numeric[ED]):org.apache.spark.graphx.Graph[ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.fastutils.FastUtilWithDistance.DataMap,ED]", "kind" : "def"}, {"label" : "computeShortestPaths", "tail" : "(graph: Graph[VD, ED], vertexPredicate: VertexPredicate[VD], treatAsUndirected: Boolean)(arg0: ClassTag[ED], num: Numeric[ED]): Graph[WithPathContainer, ED]", "member" : "ml.sparkling.graph.operators.algorithms.shortestpaths.ShortestPathsAlgorithm.computeShortestPaths", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/ShortestPathsAlgorithm$.html#computeShortestPaths[VD,ED](graph:org.apache.spark.graphx.Graph[VD,ED],vertexPredicate:ml.sparkling.graph.api.operators.IterativeComputation.VertexPredicate[VD],treatAsUndirected:Boolean)(implicitevidence$5:scala.reflect.ClassTag[ED],implicitnum:Numeric[ED]):org.apache.spark.graphx.Graph[ml.sparkling.graph.api.operators.algorithms.shortestpaths.ShortestPathsTypes.WithPathContainer,ED]", "kind" : "def"}, {"label" : "computeSingleShortestPathsLengths", "tail" : "(graph: Graph[VD, ED], vertexId: VertexId, treatAsUndirected: Boolean)(arg0: ClassTag[ED], num: Numeric[ED]): Graph[Double, ED]", "member" : "ml.sparkling.graph.operators.algorithms.shortestpaths.ShortestPathsAlgorithm.computeSingleShortestPathsLengths", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/ShortestPathsAlgorithm$.html#computeSingleShortestPathsLengths[VD,ED](graph:org.apache.spark.graphx.Graph[VD,ED],vertexId:org.apache.spark.graphx.VertexId,treatAsUndirected:Boolean)(implicitevidence$4:scala.reflect.ClassTag[ED],implicitnum:Numeric[ED]):org.apache.spark.graphx.Graph[Double,ED]", "kind" : "def"}, {"label" : "computeShortestPathsLengths", "tail" : "(graph: Graph[VD, ED], vertexPredicate: VertexPredicate[VD], treatAsUndirected: Boolean)(arg0: ClassTag[ED], num: Numeric[ED]): Graph[DataMap, ED]", "member" : "ml.sparkling.graph.operators.algorithms.shortestpaths.ShortestPathsAlgorithm.computeShortestPathsLengths", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/ShortestPathsAlgorithm$.html#computeShortestPathsLengths[VD,ED](graph:org.apache.spark.graphx.Graph[VD,ED],vertexPredicate:ml.sparkling.graph.api.operators.IterativeComputation.VertexPredicate[VD],treatAsUndirected:Boolean)(implicitevidence$3:scala.reflect.ClassTag[ED],implicitnum:Numeric[ED]):org.apache.spark.graphx.Graph[ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.fastutils.FastUtilWithDistance.DataMap,ED]", "kind" : "def"}, {"label" : "computeAllPathsUsing", "tail" : "(graph: Graph[VD, ED], vertexPredicate: VertexPredicate[VD], treatAsUndirected: Boolean, pathProcessor: PathProcessor[VD, ED, PT])(arg0: ClassTag[ED], arg1: ClassTag[PT], num: Numeric[ED]): Graph[PT, ED]", "member" : "ml.sparkling.graph.operators.algorithms.shortestpaths.ShortestPathsAlgorithm.computeAllPathsUsing", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/ShortestPathsAlgorithm$.html#computeAllPathsUsing[VD,ED,PT](graph:org.apache.spark.graphx.Graph[VD,ED],vertexPredicate:ml.sparkling.graph.api.operators.IterativeComputation.VertexPredicate[VD],treatAsUndirected:Boolean,pathProcessor:ml.sparkling.graph.operators.algorithms.shortestpaths.pathprocessors.PathProcessor[VD,ED,PT])(implicitevidence$1:scala.reflect.ClassTag[ED],implicitevidence$2:scala.reflect.ClassTag[PT],implicitnum:Numeric[ED]):org.apache.spark.graphx.Graph[PT,ED]", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "ml.sparkling.graph.operators.algorithms.shortestpaths.ShortestPathsAlgorithm.logger", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/ShortestPathsAlgorithm$.html#logger:org.apache.log4j.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/ShortestPathsAlgorithm$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/ShortestPathsAlgorithm$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/ShortestPathsAlgorithm$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/ShortestPathsAlgorithm$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/ShortestPathsAlgorithm$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/ShortestPathsAlgorithm$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/ShortestPathsAlgorithm$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/ShortestPathsAlgorithm$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/ShortestPathsAlgorithm$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/ShortestPathsAlgorithm$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/ShortestPathsAlgorithm$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/ShortestPathsAlgorithm$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/ShortestPathsAlgorithm$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/ShortestPathsAlgorithm$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/ShortestPathsAlgorithm$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/ShortestPathsAlgorithm$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/shortestpaths\/ShortestPathsAlgorithm$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages" : [{"name" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.BCAggregationMessage", "shortDescription" : "Created by mth on 5\/9\/17.", "object" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BCAggregationMessage$.html", "members_class" : [{"label" : "isAggregation", "tail" : "(): Boolean", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.BCAggregationMessage.isAggregation", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BCAggregationMessage.html#isAggregation:Boolean", "kind" : "def"}, {"label" : "content", "tail" : ": VertexId", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.BCAggregationMessage.content", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BCAggregationMessage.html#content:org.apache.spark.graphx.VertexId", "kind" : "val"}, {"member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.BCAggregationMessage#<init>", "error" : "unsupported entity"}, {"label" : "psi", "tail" : ": Double", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.BCAggregationMessage.psi", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BCAggregationMessage.html#psi:Double", "kind" : "val"}, {"label" : "source", "tail" : ": VertexId", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.BCAggregationMessage.source", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BCAggregationMessage.html#source:org.apache.spark.graphx.VertexId", "kind" : "val"}, {"label" : "isDFSPointer", "tail" : "(): Boolean", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.NOMessage.isDFSPointer", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BCAggregationMessage.html#isDFSPointer:Boolean", "kind" : "def"}, {"label" : "isConfirm", "tail" : "(): Boolean", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.NOMessage.isConfirm", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BCAggregationMessage.html#isConfirm:Boolean", "kind" : "def"}, {"label" : "isExpand", "tail" : "(): Boolean", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.NOMessage.isExpand", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BCAggregationMessage.html#isExpand:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BCAggregationMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BCAggregationMessage.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BCAggregationMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BCAggregationMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BCAggregationMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BCAggregationMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BCAggregationMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BCAggregationMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BCAggregationMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BCAggregationMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BCAggregationMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BCAggregationMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BCAggregationMessage.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BCAggregationMessage.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BCAggregationMessage.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BCAggregationMessage.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BCAggregationMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BCAggregationMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BCAggregationMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(source: VertexId, psi: Double): BCAggregationMessage", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.BCAggregationMessage.apply", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BCAggregationMessage$.html#apply(source:org.apache.spark.graphx.VertexId,psi:Double):ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.BCAggregationMessage", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BCAggregationMessage$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BCAggregationMessage$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BCAggregationMessage$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BCAggregationMessage$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BCAggregationMessage$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BCAggregationMessage$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BCAggregationMessage$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BCAggregationMessage$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BCAggregationMessage$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BCAggregationMessage$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BCAggregationMessage$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BCAggregationMessage$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BCAggregationMessage$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BCAggregationMessage$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BCAggregationMessage$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BCAggregationMessage$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BCAggregationMessage$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BCAggregationMessage$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BCAggregationMessage$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BCAggregationMessage.html", "kind" : "class"}, {"name" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.BFSBCConfirmMessage", "shortDescription" : "Created by mth on 6\/11\/17.", "object" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCConfirmMessage$.html", "members_class" : [{"label" : "isConfirm", "tail" : "(): Boolean", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.BFSBCConfirmMessage.isConfirm", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCConfirmMessage.html#isConfirm:Boolean", "kind" : "def"}, {"label" : "content", "tail" : "(): VertexId", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.BFSBCConfirmMessage.content", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCConfirmMessage.html#content:org.apache.spark.graphx.VertexId", "kind" : "def"}, {"member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.BFSBCConfirmMessage#<init>", "error" : "unsupported entity"}, {"label" : "source", "tail" : ": VertexId", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.BFSBCConfirmMessage.source", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCConfirmMessage.html#source:org.apache.spark.graphx.VertexId", "kind" : "val"}, {"label" : "isAggregation", "tail" : "(): Boolean", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.NOMessage.isAggregation", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCConfirmMessage.html#isAggregation:Boolean", "kind" : "def"}, {"label" : "isDFSPointer", "tail" : "(): Boolean", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.NOMessage.isDFSPointer", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCConfirmMessage.html#isDFSPointer:Boolean", "kind" : "def"}, {"label" : "isExpand", "tail" : "(): Boolean", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.NOMessage.isExpand", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCConfirmMessage.html#isExpand:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCConfirmMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCConfirmMessage.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCConfirmMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCConfirmMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCConfirmMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCConfirmMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCConfirmMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCConfirmMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCConfirmMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCConfirmMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCConfirmMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCConfirmMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCConfirmMessage.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCConfirmMessage.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCConfirmMessage.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCConfirmMessage.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCConfirmMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCConfirmMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCConfirmMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(source: VertexId): BFSBCConfirmMessage", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.BFSBCConfirmMessage.apply", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCConfirmMessage$.html#apply(source:org.apache.spark.graphx.VertexId):ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.BFSBCConfirmMessage", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCConfirmMessage$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCConfirmMessage$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCConfirmMessage$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCConfirmMessage$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCConfirmMessage$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCConfirmMessage$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCConfirmMessage$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCConfirmMessage$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCConfirmMessage$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCConfirmMessage$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCConfirmMessage$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCConfirmMessage$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCConfirmMessage$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCConfirmMessage$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCConfirmMessage$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCConfirmMessage$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCConfirmMessage$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCConfirmMessage$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCConfirmMessage$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCConfirmMessage.html", "kind" : "class"}, {"name" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.BFSBCExtendMessage", "shortDescription" : "Created by mth on 5\/9\/17.", "object" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCExtendMessage$.html", "members_class" : [{"label" : "isExpand", "tail" : ": Boolean", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.BFSBCExtendMessage.isExpand", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCExtendMessage.html#isExpand:Boolean", "kind" : "val"}, {"label" : "content", "tail" : "(): VertexId", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.BFSBCExtendMessage.content", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCExtendMessage.html#content:org.apache.spark.graphx.VertexId", "kind" : "def"}, {"member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.BFSBCExtendMessage#<init>", "error" : "unsupported entity"}, {"label" : "sigma", "tail" : ": Int", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.BFSBCExtendMessage.sigma", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCExtendMessage.html#sigma:Int", "kind" : "val"}, {"label" : "distance", "tail" : ": Double", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.BFSBCExtendMessage.distance", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCExtendMessage.html#distance:Double", "kind" : "val"}, {"label" : "source", "tail" : ": VertexId", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.BFSBCExtendMessage.source", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCExtendMessage.html#source:org.apache.spark.graphx.VertexId", "kind" : "val"}, {"label" : "isAggregation", "tail" : "(): Boolean", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.NOMessage.isAggregation", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCExtendMessage.html#isAggregation:Boolean", "kind" : "def"}, {"label" : "isDFSPointer", "tail" : "(): Boolean", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.NOMessage.isDFSPointer", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCExtendMessage.html#isDFSPointer:Boolean", "kind" : "def"}, {"label" : "isConfirm", "tail" : "(): Boolean", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.NOMessage.isConfirm", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCExtendMessage.html#isConfirm:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCExtendMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCExtendMessage.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCExtendMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCExtendMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCExtendMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCExtendMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCExtendMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCExtendMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCExtendMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCExtendMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCExtendMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCExtendMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCExtendMessage.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCExtendMessage.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCExtendMessage.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCExtendMessage.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCExtendMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCExtendMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCExtendMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "create", "tail" : "(source: VertexId, vertex: NOBFSVertex): BFSBCExtendMessage", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.BFSBCExtendMessage.create", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCExtendMessage$.html#create(source:org.apache.spark.graphx.VertexId,vertex:ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.NOBFSVertex):ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.BFSBCExtendMessage", "kind" : "def"}, {"label" : "apply", "tail" : "(source: VertexId, distance: Double, sigma: Int): BFSBCExtendMessage", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.BFSBCExtendMessage.apply", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCExtendMessage$.html#apply(source:org.apache.spark.graphx.VertexId,distance:Double,sigma:Int):ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.BFSBCExtendMessage", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCExtendMessage$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCExtendMessage$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCExtendMessage$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCExtendMessage$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCExtendMessage$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCExtendMessage$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCExtendMessage$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCExtendMessage$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCExtendMessage$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCExtendMessage$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCExtendMessage$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCExtendMessage$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCExtendMessage$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCExtendMessage$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCExtendMessage$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCExtendMessage$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCExtendMessage$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCExtendMessage$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCExtendMessage$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSBCExtendMessage.html", "kind" : "class"}, {"name" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.BFSConfirmMessage", "shortDescription" : "Created by mth on 5\/6\/17.", "object" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSConfirmMessage$.html", "members_class" : [{"label" : "isConfirm", "tail" : "(): Boolean", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.BFSConfirmMessage.isConfirm", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSConfirmMessage.html#isConfirm:Boolean", "kind" : "def"}, {"label" : "content", "tail" : ": VertexId", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.BFSConfirmMessage.content", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSConfirmMessage.html#content:org.apache.spark.graphx.VertexId", "kind" : "val"}, {"label" : "source", "tail" : ": VertexId", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.BFSConfirmMessage.source", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSConfirmMessage.html#source:org.apache.spark.graphx.VertexId", "kind" : "val"}, {"member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.BFSConfirmMessage#<init>", "error" : "unsupported entity"}, {"label" : "child", "tail" : ": VertexId", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.BFSConfirmMessage.child", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSConfirmMessage.html#child:org.apache.spark.graphx.VertexId", "kind" : "val"}, {"label" : "isAggregation", "tail" : "(): Boolean", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.NOMessage.isAggregation", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSConfirmMessage.html#isAggregation:Boolean", "kind" : "def"}, {"label" : "isDFSPointer", "tail" : "(): Boolean", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.NOMessage.isDFSPointer", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSConfirmMessage.html#isDFSPointer:Boolean", "kind" : "def"}, {"label" : "isExpand", "tail" : "(): Boolean", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.NOMessage.isExpand", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSConfirmMessage.html#isExpand:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSConfirmMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSConfirmMessage.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSConfirmMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSConfirmMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSConfirmMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSConfirmMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSConfirmMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSConfirmMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSConfirmMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSConfirmMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSConfirmMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSConfirmMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSConfirmMessage.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSConfirmMessage.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSConfirmMessage.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSConfirmMessage.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSConfirmMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSConfirmMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSConfirmMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "unapply", "tail" : "(arg: BFSConfirmMessage): Option[VertexId]", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.BFSConfirmMessage.unapply", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSConfirmMessage$.html#unapply(arg:ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.BFSConfirmMessage):Option[org.apache.spark.graphx.VertexId]", "kind" : "def"}, {"label" : "apply", "tail" : "(child: VertexId): BFSConfirmMessage", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.BFSConfirmMessage.apply", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSConfirmMessage$.html#apply(child:org.apache.spark.graphx.VertexId):ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.BFSConfirmMessage", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSConfirmMessage$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSConfirmMessage$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSConfirmMessage$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSConfirmMessage$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSConfirmMessage$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSConfirmMessage$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSConfirmMessage$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSConfirmMessage$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSConfirmMessage$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSConfirmMessage$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSConfirmMessage$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSConfirmMessage$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSConfirmMessage$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSConfirmMessage$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSConfirmMessage$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSConfirmMessage$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSConfirmMessage$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSConfirmMessage$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSConfirmMessage$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSConfirmMessage.html", "kind" : "class"}, {"name" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.BFSExpandMessage", "shortDescription" : "Created by mth on 5\/6\/17.", "object" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSExpandMessage$.html", "members_class" : [{"label" : "isExpand", "tail" : "(): Boolean", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.BFSExpandMessage.isExpand", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSExpandMessage.html#isExpand:Boolean", "kind" : "def"}, {"label" : "content", "tail" : ": VertexId", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.BFSExpandMessage.content", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSExpandMessage.html#content:org.apache.spark.graphx.VertexId", "kind" : "val"}, {"label" : "source", "tail" : ": VertexId", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.BFSExpandMessage.source", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSExpandMessage.html#source:org.apache.spark.graphx.VertexId", "kind" : "val"}, {"member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.BFSExpandMessage#<init>", "error" : "unsupported entity"}, {"label" : "parent", "tail" : ": VertexId", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.BFSExpandMessage.parent", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSExpandMessage.html#parent:org.apache.spark.graphx.VertexId", "kind" : "val"}, {"label" : "isAggregation", "tail" : "(): Boolean", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.NOMessage.isAggregation", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSExpandMessage.html#isAggregation:Boolean", "kind" : "def"}, {"label" : "isDFSPointer", "tail" : "(): Boolean", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.NOMessage.isDFSPointer", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSExpandMessage.html#isDFSPointer:Boolean", "kind" : "def"}, {"label" : "isConfirm", "tail" : "(): Boolean", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.NOMessage.isConfirm", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSExpandMessage.html#isConfirm:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSExpandMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSExpandMessage.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSExpandMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSExpandMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSExpandMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSExpandMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSExpandMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSExpandMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSExpandMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSExpandMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSExpandMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSExpandMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSExpandMessage.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSExpandMessage.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSExpandMessage.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSExpandMessage.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSExpandMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSExpandMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSExpandMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "unapply", "tail" : "(arg: BFSExpandMessage): Option[VertexId]", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.BFSExpandMessage.unapply", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSExpandMessage$.html#unapply(arg:ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.BFSExpandMessage):Option[org.apache.spark.graphx.VertexId]", "kind" : "def"}, {"label" : "apply", "tail" : "(parent: VertexId): BFSExpandMessage", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.BFSExpandMessage.apply", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSExpandMessage$.html#apply(parent:org.apache.spark.graphx.VertexId):ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.BFSExpandMessage", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSExpandMessage$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSExpandMessage$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSExpandMessage$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSExpandMessage$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSExpandMessage$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSExpandMessage$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSExpandMessage$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSExpandMessage$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSExpandMessage$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSExpandMessage$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSExpandMessage$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSExpandMessage$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSExpandMessage$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSExpandMessage$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSExpandMessage$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSExpandMessage$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSExpandMessage$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSExpandMessage$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSExpandMessage$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/BFSExpandMessage.html", "kind" : "class"}, {"name" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.DFSPointer", "shortDescription" : "Created by mth on 5\/7\/17.", "object" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/DFSPointer$.html", "members_class" : [{"label" : "asReturning", "tail" : "(): DFSPointer", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.DFSPointer.asReturning", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/DFSPointer.html#asReturning:ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.DFSPointer", "kind" : "def"}, {"label" : "asWaiting", "tail" : "(n: Option[VertexId]): DFSPointer", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.DFSPointer.asWaiting", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/DFSPointer.html#asWaiting(n:Option[org.apache.spark.graphx.VertexId]):ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.DFSPointer", "kind" : "def"}, {"label" : "asToSent", "tail" : "(n: Option[VertexId]): DFSPointer", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.DFSPointer.asToSent", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/DFSPointer.html#asToSent(n:Option[org.apache.spark.graphx.VertexId]):ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.DFSPointer", "kind" : "def"}, {"label" : "returning", "tail" : ": Boolean", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.DFSPointer.returning", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/DFSPointer.html#returning:Boolean", "kind" : "val"}, {"label" : "toRemove", "tail" : ": Boolean", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.DFSPointer.toRemove", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/DFSPointer.html#toRemove:Boolean", "kind" : "val"}, {"label" : "isDFSPointer", "tail" : ": Boolean", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.DFSPointer.isDFSPointer", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/DFSPointer.html#isDFSPointer:Boolean", "kind" : "val"}, {"label" : "content", "tail" : "(): VertexId", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.DFSPointer.content", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/DFSPointer.html#content:org.apache.spark.graphx.VertexId", "kind" : "def"}, {"member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.DFSPointer#<init>", "error" : "unsupported entity"}, {"label" : "toSent", "tail" : ": Boolean", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.DFSPointer.toSent", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/DFSPointer.html#toSent:Boolean", "kind" : "val"}, {"label" : "next", "tail" : ": Option[VertexId]", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.DFSPointer.next", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/DFSPointer.html#next:Option[org.apache.spark.graphx.VertexId]", "kind" : "val"}, {"label" : "source", "tail" : ": VertexId", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.DFSPointer.source", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/DFSPointer.html#source:org.apache.spark.graphx.VertexId", "kind" : "val"}, {"label" : "isAggregation", "tail" : "(): Boolean", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.NOMessage.isAggregation", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/DFSPointer.html#isAggregation:Boolean", "kind" : "def"}, {"label" : "isConfirm", "tail" : "(): Boolean", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.NOMessage.isConfirm", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/DFSPointer.html#isConfirm:Boolean", "kind" : "def"}, {"label" : "isExpand", "tail" : "(): Boolean", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.NOMessage.isExpand", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/DFSPointer.html#isExpand:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/DFSPointer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/DFSPointer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/DFSPointer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/DFSPointer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/DFSPointer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/DFSPointer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/DFSPointer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/DFSPointer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/DFSPointer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/DFSPointer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/DFSPointer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/DFSPointer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/DFSPointer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/DFSPointer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/DFSPointer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/DFSPointer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/DFSPointer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/DFSPointer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/DFSPointer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(source: VertexId, next: Option[VertexId], toSent: Boolean): DFSPointer", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.DFSPointer.apply", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/DFSPointer$.html#apply(source:org.apache.spark.graphx.VertexId,next:Option[org.apache.spark.graphx.VertexId],toSent:Boolean):ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.DFSPointer", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/DFSPointer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/DFSPointer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/DFSPointer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/DFSPointer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/DFSPointer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/DFSPointer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/DFSPointer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/DFSPointer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/DFSPointer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/DFSPointer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/DFSPointer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/DFSPointer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/DFSPointer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/DFSPointer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/DFSPointer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/DFSPointer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/DFSPointer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/DFSPointer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/DFSPointer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/DFSPointer.html", "kind" : "class"}, {"name" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.NOMessage", "members_trait" : [{"label" : "isAggregation", "tail" : "(): Boolean", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.NOMessage.isAggregation", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/NOMessage.html#isAggregation:Boolean", "kind" : "def"}, {"label" : "isDFSPointer", "tail" : "(): Boolean", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.NOMessage.isDFSPointer", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/NOMessage.html#isDFSPointer:Boolean", "kind" : "def"}, {"label" : "isConfirm", "tail" : "(): Boolean", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.NOMessage.isConfirm", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/NOMessage.html#isConfirm:Boolean", "kind" : "def"}, {"label" : "isExpand", "tail" : "(): Boolean", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.NOMessage.isExpand", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/NOMessage.html#isExpand:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/NOMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/NOMessage.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/NOMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/NOMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/NOMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/NOMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/NOMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/NOMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/NOMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/NOMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/NOMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/NOMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/NOMessage.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/NOMessage.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/NOMessage.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/NOMessage.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/NOMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/NOMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/NOMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "content", "tail" : "(): MVT", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.NOMessage.content", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/NOMessage.html#content:MVT", "kind" : "abstract def"}, {"label" : "source", "tail" : "(): VertexId", "member" : "ml.sparkling.graph.operators.measures.vertex.betweenness.hua.struct.messages.NOMessage.source", "link" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/NOMessage.html#source:org.apache.spark.graphx.VertexId", "kind" : "abstract def"}], "shortDescription" : "Created by mth on 5\/6\/17.", "trait" : "ml\/sparkling\/graph\/operators\/measures\/vertex\/betweenness\/hua\/struct\/messages\/NOMessage.html", "kind" : "trait"}], "ml.sparkling.graph.generators" : [], "ml.sparkling.graph.operators.algorithms.link" : [{"name" : "ml.sparkling.graph.operators.algorithms.link.BasicLinkPredictor", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "object" : "ml\/sparkling\/graph\/operators\/algorithms\/link\/BasicLinkPredictor$.html", "members_object" : [{"label" : "predictLinks", "tail" : "(graph: Graph[V, E], edgeMeasure: EdgeMeasure[EO, EV], threshold: EO, treatAsUndirected: Boolean)(arg0: ClassTag[V], arg1: ClassTag[E], arg2: ClassTag[EV], arg3: ClassTag[EO], num: Numeric[EO]): RDD[(VertexId, VertexId)]", "member" : "ml.sparkling.graph.operators.algorithms.link.BasicLinkPredictor.predictLinks", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/link\/BasicLinkPredictor$.html#predictLinks[V,E,EV,EO](graph:org.apache.spark.graphx.Graph[V,E],edgeMeasure:ml.sparkling.graph.api.operators.measures.EdgeMeasure[EO,EV],threshold:EO,treatAsUndirected:Boolean)(implicitevidence$1:scala.reflect.ClassTag[V],implicitevidence$2:scala.reflect.ClassTag[E],implicitevidence$3:scala.reflect.ClassTag[EV],implicitevidence$4:scala.reflect.ClassTag[EO],implicitnum:Numeric[EO]):org.apache.spark.rdd.RDD[(org.apache.spark.graphx.VertexId,org.apache.spark.graphx.VertexId)]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/link\/BasicLinkPredictor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/link\/BasicLinkPredictor$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/link\/BasicLinkPredictor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/link\/BasicLinkPredictor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/link\/BasicLinkPredictor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/link\/BasicLinkPredictor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/link\/BasicLinkPredictor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/link\/BasicLinkPredictor$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/link\/BasicLinkPredictor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/link\/BasicLinkPredictor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/link\/BasicLinkPredictor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/link\/BasicLinkPredictor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/link\/BasicLinkPredictor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/link\/BasicLinkPredictor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/link\/BasicLinkPredictor$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/link\/BasicLinkPredictor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/link\/BasicLinkPredictor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/link\/BasicLinkPredictor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/link\/BasicLinkPredictor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "ml.sparkling.graph.operators.algorithms.random.ctrw.factory" : [{"name" : "ml.sparkling.graph.operators.algorithms.random.ctrw.factory.MessageFactory", "shortDescription" : "Created by mth on 4\/13\/17.", "members_class" : [{"label" : "correct", "tail" : "(vertex: CTRWVertex, message: CTRWMessage): CTRWMessage", "member" : "ml.sparkling.graph.operators.algorithms.random.ctrw.factory.MessageFactory.correct", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/factory\/MessageFactory.html#correct(vertex:ml.sparkling.graph.operators.algorithms.random.ctrw.struct.CTRWVertex,message:ml.sparkling.graph.operators.algorithms.random.ctrw.struct.CTRWMessage):ml.sparkling.graph.operators.algorithms.random.ctrw.struct.CTRWMessage", "kind" : "def"}, {"label" : "create", "tail" : "(vertex: CTRWVertex): CTRWMessage", "member" : "ml.sparkling.graph.operators.algorithms.random.ctrw.factory.MessageFactory.create", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/factory\/MessageFactory.html#create(vertex:ml.sparkling.graph.operators.algorithms.random.ctrw.struct.CTRWVertex):ml.sparkling.graph.operators.algorithms.random.ctrw.struct.CTRWMessage", "kind" : "def"}, {"member" : "ml.sparkling.graph.operators.algorithms.random.ctrw.factory.MessageFactory#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/factory\/MessageFactory.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/factory\/MessageFactory.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/factory\/MessageFactory.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/factory\/MessageFactory.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/factory\/MessageFactory.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/factory\/MessageFactory.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/factory\/MessageFactory.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/factory\/MessageFactory.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/factory\/MessageFactory.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/factory\/MessageFactory.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/factory\/MessageFactory.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/factory\/MessageFactory.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/factory\/MessageFactory.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/factory\/MessageFactory.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/factory\/MessageFactory.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/factory\/MessageFactory.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/factory\/MessageFactory.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/factory\/MessageFactory.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/factory\/MessageFactory.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ml\/sparkling\/graph\/operators\/algorithms\/random\/ctrw\/factory\/MessageFactory.html", "kind" : "class"}], "ml.sparkling.graph.api.operators.algorithms" : [], "ml.sparkling.graph.operators.partitioning" : [{"name" : "ml.sparkling.graph.operators.partitioning.ByComponentIdPartitionStrategy", "shortDescription" : "", "members_case class" : [{"label" : "getPartition", "tail" : "(key: Any): PartitionID", "member" : "ml.sparkling.graph.operators.partitioning.ByComponentIdPartitionStrategy.getPartition", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/ByComponentIdPartitionStrategy.html#getPartition(key:Any):org.apache.spark.graphx.PartitionID", "kind" : "def"}, {"label" : "numPartitions", "tail" : "(): PartitionID", "member" : "ml.sparkling.graph.operators.partitioning.ByComponentIdPartitionStrategy.numPartitions", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/ByComponentIdPartitionStrategy.html#numPartitions:org.apache.spark.graphx.PartitionID", "kind" : "def"}, {"label" : "getPartition", "tail" : "(src: VertexId, dst: VertexId, numParts: PartitionID): PartitionID", "member" : "ml.sparkling.graph.operators.partitioning.ByComponentIdPartitionStrategy.getPartition", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/ByComponentIdPartitionStrategy.html#getPartition(src:org.apache.spark.graphx.VertexId,dst:org.apache.spark.graphx.VertexId,numParts:org.apache.spark.graphx.PartitionID):org.apache.spark.graphx.PartitionID", "kind" : "def"}, {"member" : "ml.sparkling.graph.operators.partitioning.ByComponentIdPartitionStrategy#<init>", "error" : "unsupported entity"}, {"label" : "vertexOperator", "tail" : ": VertexOperator", "member" : "ml.sparkling.graph.operators.partitioning.ByComponentIdPartitionStrategy.vertexOperator", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/ByComponentIdPartitionStrategy.html#vertexOperator:ml.sparkling.graph.operators.partitioning.PropagationBasedPartitioning.VertexOperator", "kind" : "val"}, {"label" : "partitions", "tail" : ": Int", "member" : "ml.sparkling.graph.operators.partitioning.ByComponentIdPartitionStrategy.partitions", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/ByComponentIdPartitionStrategy.html#partitions:Int", "kind" : "val"}, {"label" : "idMap", "tail" : ": Map[VertexId, Int]", "member" : "ml.sparkling.graph.operators.partitioning.ByComponentIdPartitionStrategy.idMap", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/ByComponentIdPartitionStrategy.html#idMap:Map[org.apache.spark.graphx.VertexId,Int]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/ByComponentIdPartitionStrategy.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/ByComponentIdPartitionStrategy.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/ByComponentIdPartitionStrategy.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/ByComponentIdPartitionStrategy.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/ByComponentIdPartitionStrategy.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/ByComponentIdPartitionStrategy.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/ByComponentIdPartitionStrategy.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/ByComponentIdPartitionStrategy.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/ByComponentIdPartitionStrategy.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/ByComponentIdPartitionStrategy.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/ByComponentIdPartitionStrategy.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/ByComponentIdPartitionStrategy.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/ByComponentIdPartitionStrategy.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/ByComponentIdPartitionStrategy.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/ByComponentIdPartitionStrategy.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/ByComponentIdPartitionStrategy.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ml\/sparkling\/graph\/operators\/partitioning\/ByComponentIdPartitionStrategy.html", "kind" : "case class"}, {"name" : "ml.sparkling.graph.operators.partitioning.CommunityBasedPartitioning", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "object" : "ml\/sparkling\/graph\/operators\/partitioning\/CommunityBasedPartitioning$.html", "members_object" : [{"label" : "partitionGraphUsing", "tail" : "(graph: Graph[VD, ED], communityDetectionMethod: CommunityDetectionAlgorithm, numParts: Int)(arg0: ClassTag[VD], arg1: ClassTag[ED], sc: SparkContext): Graph[VD, ED]", "member" : "ml.sparkling.graph.operators.partitioning.CommunityBasedPartitioning.partitionGraphUsing", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/CommunityBasedPartitioning$.html#partitionGraphUsing[VD,ED](graph:org.apache.spark.graphx.Graph[VD,ED],communityDetectionMethod:ml.sparkling.graph.api.operators.algorithms.community.CommunityDetection.CommunityDetectionAlgorithm,numParts:Int)(implicitevidence$3:scala.reflect.ClassTag[VD],implicitevidence$4:scala.reflect.ClassTag[ED],implicitsc:org.apache.spark.SparkContext):org.apache.spark.graphx.Graph[VD,ED]", "kind" : "def"}, {"label" : "partitionGraphBy", "tail" : "(graph: Graph[VD, ED], communityDetectionMethod: CommunityDetectionMethod[VD, ED], numParts: Int)(arg0: ClassTag[VD], arg1: ClassTag[ED], sc: SparkContext): Graph[VD, ED]", "member" : "ml.sparkling.graph.operators.partitioning.CommunityBasedPartitioning.partitionGraphBy", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/CommunityBasedPartitioning$.html#partitionGraphBy[VD,ED](graph:org.apache.spark.graphx.Graph[VD,ED],communityDetectionMethod:ml.sparkling.graph.api.operators.algorithms.community.CommunityDetection.CommunityDetectionMethod[VD,ED],numParts:Int)(implicitevidence$1:scala.reflect.ClassTag[VD],implicitevidence$2:scala.reflect.ClassTag[ED],implicitsc:org.apache.spark.SparkContext):org.apache.spark.graphx.Graph[VD,ED]", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "ml.sparkling.graph.operators.partitioning.CommunityBasedPartitioning.logger", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/CommunityBasedPartitioning$.html#logger:org.apache.log4j.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/CommunityBasedPartitioning$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/CommunityBasedPartitioning$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/CommunityBasedPartitioning$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/CommunityBasedPartitioning$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/CommunityBasedPartitioning$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/CommunityBasedPartitioning$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/CommunityBasedPartitioning$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/CommunityBasedPartitioning$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/CommunityBasedPartitioning$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/CommunityBasedPartitioning$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/CommunityBasedPartitioning$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/CommunityBasedPartitioning$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/CommunityBasedPartitioning$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/CommunityBasedPartitioning$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/CommunityBasedPartitioning$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/CommunityBasedPartitioning$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/CommunityBasedPartitioning$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/CommunityBasedPartitioning$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/CommunityBasedPartitioning$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ml.sparkling.graph.operators.partitioning.ParallelPartitioningUtils", "shortDescription" : "Created by  Roman Bartusiak <riomus@gmail.com> on 12.05.17.", "object" : "ml\/sparkling\/graph\/operators\/partitioning\/ParallelPartitioningUtils$.html", "members_object" : [{"label" : "coarsePartitions", "tail" : "(numberOfPartitions: PartitionID, numberOfCommunities: Long, vertexToCommunityId: RDD[(VertexId, ComponentID)], parallelLimit: Long, givenPartitions: Int): (Map[VertexId, Int], Int)", "member" : "ml.sparkling.graph.operators.partitioning.ParallelPartitioningUtils.coarsePartitions", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/ParallelPartitioningUtils$.html#coarsePartitions(numberOfPartitions:org.apache.spark.graphx.PartitionID,numberOfCommunities:Long,vertexToCommunityId:org.apache.spark.rdd.RDD[(org.apache.spark.graphx.VertexId,ml.sparkling.graph.api.operators.algorithms.community.CommunityDetection.ComponentID)],parallelLimit:Long,givenPartitions:Int):(Map[org.apache.spark.graphx.VertexId,Int],Int)", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "ml.sparkling.graph.operators.partitioning.ParallelPartitioningUtils.logger", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/ParallelPartitioningUtils$.html#logger:org.apache.log4j.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/ParallelPartitioningUtils$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/ParallelPartitioningUtils$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/ParallelPartitioningUtils$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/ParallelPartitioningUtils$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/ParallelPartitioningUtils$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/ParallelPartitioningUtils$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/ParallelPartitioningUtils$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/ParallelPartitioningUtils$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/ParallelPartitioningUtils$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/ParallelPartitioningUtils$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/ParallelPartitioningUtils$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/ParallelPartitioningUtils$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/ParallelPartitioningUtils$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/ParallelPartitioningUtils$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/ParallelPartitioningUtils$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/ParallelPartitioningUtils$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/ParallelPartitioningUtils$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/ParallelPartitioningUtils$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/ParallelPartitioningUtils$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ml.sparkling.graph.operators.partitioning.PartitioningUtils", "shortDescription" : "Created by  Roman Bartusiak <riomus@gmail.com> on 12.05.17.", "object" : "ml\/sparkling\/graph\/operators\/partitioning\/PartitioningUtils$.html", "members_object" : [{"label" : "coarsePartitions", "tail" : "(numberOfPartitions: PartitionID, numberOfCommunities: Long, vertexToCommunityId: Map[VertexId, ComponentID]): (Map[VertexId, Int], Int)", "member" : "ml.sparkling.graph.operators.partitioning.PartitioningUtils.coarsePartitions", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PartitioningUtils$.html#coarsePartitions(numberOfPartitions:org.apache.spark.graphx.PartitionID,numberOfCommunities:Long,vertexToCommunityId:Map[org.apache.spark.graphx.VertexId,ml.sparkling.graph.api.operators.algorithms.community.CommunityDetection.ComponentID]):(Map[org.apache.spark.graphx.VertexId,Int],Int)", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "ml.sparkling.graph.operators.partitioning.PartitioningUtils.logger", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PartitioningUtils$.html#logger:org.apache.log4j.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PartitioningUtils$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PartitioningUtils$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PartitioningUtils$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PartitioningUtils$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PartitioningUtils$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PartitioningUtils$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PartitioningUtils$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PartitioningUtils$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PartitioningUtils$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PartitioningUtils$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PartitioningUtils$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PartitioningUtils$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PartitioningUtils$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PartitioningUtils$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PartitioningUtils$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PartitioningUtils$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PartitioningUtils$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PartitioningUtils$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PartitioningUtils$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ml.sparkling.graph.operators.partitioning.PropagationBasedPartitioning", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "object" : "ml\/sparkling\/graph\/operators\/partitioning\/PropagationBasedPartitioning$.html", "members_object" : [{"label" : "DefaultPartitionOperator", "tail" : "", "member" : "ml.sparkling.graph.operators.partitioning.PropagationBasedPartitioning.DefaultPartitionOperator", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PropagationBasedPartitioning$.html#DefaultPartitionOperator", "kind" : "object"}, {"label" : "DefaultVertexOperator", "tail" : "", "member" : "ml.sparkling.graph.operators.partitioning.PropagationBasedPartitioning.DefaultVertexOperator", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PropagationBasedPartitioning$.html#DefaultVertexOperator", "kind" : "object"}, {"label" : "VertexOperator", "tail" : "", "member" : "ml.sparkling.graph.operators.partitioning.PropagationBasedPartitioning.VertexOperator", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PropagationBasedPartitioning$.html#VertexOperatorextendsSerializable", "kind" : "trait"}, {"label" : "buildPartitioningStrategy", "tail" : "(graph: Graph[VD, ED], numParts: Int, checkpointingFrequency: Int, vertexOperator: VertexOperator)(arg0: ClassTag[ED], arg1: ClassTag[VD], sc: SparkContext): (Map[VertexId, Int], Int, ByComponentIdPartitionStrategy)", "member" : "ml.sparkling.graph.operators.partitioning.PropagationBasedPartitioning.buildPartitioningStrategy", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PropagationBasedPartitioning$.html#buildPartitioningStrategy[ED,VD](graph:org.apache.spark.graphx.Graph[VD,ED],numParts:Int,checkpointingFrequency:Int,vertexOperator:ml.sparkling.graph.operators.partitioning.PropagationBasedPartitioning.VertexOperator)(implicitevidence$5:scala.reflect.ClassTag[ED],implicitevidence$6:scala.reflect.ClassTag[VD],implicitsc:org.apache.spark.SparkContext):(Map[org.apache.spark.graphx.VertexId,Int],Int,ml.sparkling.graph.operators.partitioning.ByComponentIdPartitionStrategy)", "kind" : "def"}, {"label" : "partitionGraphBy", "tail" : "(graph: Graph[VD, ED], numParts: Int, checkpointingFrequency: Int, vertexOperator: VertexOperator, partitionOperator: VertexOperator)(arg0: ClassTag[VD], arg1: ClassTag[ED], sc: SparkContext): Graph[VD, ED]", "member" : "ml.sparkling.graph.operators.partitioning.PropagationBasedPartitioning.partitionGraphBy", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PropagationBasedPartitioning$.html#partitionGraphBy[VD,ED](graph:org.apache.spark.graphx.Graph[VD,ED],numParts:Int,checkpointingFrequency:Int,vertexOperator:ml.sparkling.graph.operators.partitioning.PropagationBasedPartitioning.VertexOperator,partitionOperator:ml.sparkling.graph.operators.partitioning.PropagationBasedPartitioning.VertexOperator)(implicitevidence$3:scala.reflect.ClassTag[VD],implicitevidence$4:scala.reflect.ClassTag[ED],implicitsc:org.apache.spark.SparkContext):org.apache.spark.graphx.Graph[VD,ED]", "kind" : "def"}, {"label" : "precomputePartitions", "tail" : "(graph: Graph[VD, ED], numParts: Int, checkpointingFrequency: Int, vertexOperator: VertexOperator)(arg0: ClassTag[VD], arg1: ClassTag[ED], sc: SparkContext): (Map[VertexId, Int], Int)", "member" : "ml.sparkling.graph.operators.partitioning.PropagationBasedPartitioning.precomputePartitions", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PropagationBasedPartitioning$.html#precomputePartitions[VD,ED](graph:org.apache.spark.graphx.Graph[VD,ED],numParts:Int,checkpointingFrequency:Int,vertexOperator:ml.sparkling.graph.operators.partitioning.PropagationBasedPartitioning.VertexOperator)(implicitevidence$1:scala.reflect.ClassTag[VD],implicitevidence$2:scala.reflect.ClassTag[ED],implicitsc:org.apache.spark.SparkContext):(Map[org.apache.spark.graphx.VertexId,Int],Int)", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "ml.sparkling.graph.operators.partitioning.PropagationBasedPartitioning.logger", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PropagationBasedPartitioning$.html#logger:org.apache.log4j.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PropagationBasedPartitioning$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PropagationBasedPartitioning$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PropagationBasedPartitioning$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PropagationBasedPartitioning$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PropagationBasedPartitioning$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PropagationBasedPartitioning$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PropagationBasedPartitioning$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PropagationBasedPartitioning$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PropagationBasedPartitioning$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PropagationBasedPartitioning$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PropagationBasedPartitioning$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PropagationBasedPartitioning$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PropagationBasedPartitioning$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PropagationBasedPartitioning$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PropagationBasedPartitioning$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PropagationBasedPartitioning$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PropagationBasedPartitioning$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PropagationBasedPartitioning$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PropagationBasedPartitioning$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ml.sparkling.graph.operators.partitioning.PSCANBasedPartitioning", "shortDescription" : "Created by Roman Bartusiak (roman.bartusiak@pwr.edu.pl http:\/\/riomus.github.io).", "object" : "ml\/sparkling\/graph\/operators\/partitioning\/PSCANBasedPartitioning$.html", "members_object" : [{"label" : "precomputePartitions", "tail" : "(graph: Graph[VD, ED], numberOfPartitions: Int, maxIterations: Int)(arg0: ClassTag[ED], arg1: ClassTag[VD], sc: SparkContext): (VertexId, Map[VertexId, Int], Int)", "member" : "ml.sparkling.graph.operators.partitioning.PSCANBasedPartitioning.precomputePartitions", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PSCANBasedPartitioning$.html#precomputePartitions[ED,VD](graph:org.apache.spark.graphx.Graph[VD,ED],numberOfPartitions:Int,maxIterations:Int)(implicitevidence$5:scala.reflect.ClassTag[ED],implicitevidence$6:scala.reflect.ClassTag[VD],implicitsc:org.apache.spark.SparkContext):(org.apache.spark.graphx.VertexId,Map[org.apache.spark.graphx.VertexId,Int],Int)", "kind" : "def"}, {"label" : "buildPartitioningStrategy", "tail" : "(graph: Graph[VD, ED], numberOfPartitions: Int, maxIterations: Int)(arg0: ClassTag[ED], arg1: ClassTag[VD], sc: SparkContext): (VertexId, Map[VertexId, Int], Int, ByComponentIdPartitionStrategy)", "member" : "ml.sparkling.graph.operators.partitioning.PSCANBasedPartitioning.buildPartitioningStrategy", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PSCANBasedPartitioning$.html#buildPartitioningStrategy[ED,VD](graph:org.apache.spark.graphx.Graph[VD,ED],numberOfPartitions:Int,maxIterations:Int)(implicitevidence$3:scala.reflect.ClassTag[ED],implicitevidence$4:scala.reflect.ClassTag[VD],implicitsc:org.apache.spark.SparkContext):(org.apache.spark.graphx.VertexId,Map[org.apache.spark.graphx.VertexId,Int],Int,ml.sparkling.graph.operators.partitioning.ByComponentIdPartitionStrategy)", "kind" : "def"}, {"label" : "partitionGraphBy", "tail" : "(graph: Graph[VD, ED], numberOfPartitions: Int, maxIterations: Int)(arg0: ClassTag[VD], arg1: ClassTag[ED], sc: SparkContext): Graph[VD, ED]", "member" : "ml.sparkling.graph.operators.partitioning.PSCANBasedPartitioning.partitionGraphBy", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PSCANBasedPartitioning$.html#partitionGraphBy[VD,ED](graph:org.apache.spark.graphx.Graph[VD,ED],numberOfPartitions:Int,maxIterations:Int)(implicitevidence$1:scala.reflect.ClassTag[VD],implicitevidence$2:scala.reflect.ClassTag[ED],implicitsc:org.apache.spark.SparkContext):org.apache.spark.graphx.Graph[VD,ED]", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "ml.sparkling.graph.operators.partitioning.PSCANBasedPartitioning.logger", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PSCANBasedPartitioning$.html#logger:org.apache.log4j.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PSCANBasedPartitioning$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PSCANBasedPartitioning$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PSCANBasedPartitioning$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PSCANBasedPartitioning$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PSCANBasedPartitioning$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PSCANBasedPartitioning$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PSCANBasedPartitioning$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PSCANBasedPartitioning$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PSCANBasedPartitioning$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PSCANBasedPartitioning$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PSCANBasedPartitioning$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PSCANBasedPartitioning$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PSCANBasedPartitioning$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PSCANBasedPartitioning$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PSCANBasedPartitioning$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PSCANBasedPartitioning$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PSCANBasedPartitioning$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PSCANBasedPartitioning$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/PSCANBasedPartitioning$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ml.sparkling.graph.operators.partitioning.RandomVertexOperator", "shortDescription" : "Created by  Roman Bartusiak <riomus@gmail.com> on 24.04.18.", "object" : "ml\/sparkling\/graph\/operators\/partitioning\/RandomVertexOperator$.html", "members_object" : [{"label" : "apply", "tail" : "(v1: Long, v2: Long): Long", "member" : "ml.sparkling.graph.operators.partitioning.RandomVertexOperator.apply", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/RandomVertexOperator$.html#apply(v1:Long,v2:Long):Long", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/RandomVertexOperator$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/RandomVertexOperator$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/RandomVertexOperator$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/RandomVertexOperator$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/RandomVertexOperator$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/RandomVertexOperator$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/RandomVertexOperator$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/RandomVertexOperator$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/RandomVertexOperator$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/RandomVertexOperator$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/RandomVertexOperator$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/RandomVertexOperator$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/RandomVertexOperator$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/RandomVertexOperator$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/RandomVertexOperator$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/RandomVertexOperator$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/RandomVertexOperator$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/RandomVertexOperator$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ml\/sparkling\/graph\/operators\/partitioning\/RandomVertexOperator$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "ml.sparkling.graph.operators.algorithms.random" : []};